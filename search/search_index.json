{"config":{"lang":["zh"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"TQuant Lab \u4e09\u5927\u7279\u9ede","text":"<p>\u4ee5\u5168\u53f0\u6700\u5b8c\u5584\u7684\u8cc7\u6599\u54c1\u8cea\u8207\u5167\u5bb9\uff0c\u642d\u914d\u6700\u5f37\u5927\u7684\u4e8b\u4ef6\u9a45\u52d5\u578b\u56de\u6e2c\u7cfb\u7d71\uff0c\u63d0\u4f9b\u4f7f\u7528\u8005\u958b\u767c\u8207\u7b56\u7565\u9a57\u8b49\u7684\u7d55\u4f73\u5de5\u5177\u3002</p> <ul> <li> <p>\u6a21\u7d44\u5316\u5efa\u69cb\u60a8\u7684\u7b56\u7565   \u6a21\u7d44\u5316\u67b6\u69cb\u8b93\u7a0b\u5f0f\u78bc\u5728\u64b0\u5beb\u6642\u9ad8\u5ea6\u81ea\u7531\u5316\uff0c\u53ef\u5c07\u7b56\u7565\u6b65\u9a5f\u5316\u8655\u7406\uff0c\u540c\u6642\u8655\u7406\u591a\u91cd\u6a19\u7684\u8cb7\u8ce3\uff0c\u4e26\u5b8c\u6574\u5448\u73fe\u7b56\u7565\u7e3e\u6548\u8207\u98a8\u96aa\u6307\u6a19\u3002</p> </li> <li> <p>\u9f90\u5927\u4e14\u9ad8\u54c1\u8cea\u7684\u8cc7\u6599\u5eab   \u5b8c\u6574\u4e14\u5373\u6642\u7684\u8cc7\u6599\u5eab\u7cfb\u7d71\uff0c\u7d93\u904e\u5c64\u5c64\u628a\u95dc\u8207\u7dad\u8b77\uff0c\u8b93\u60a8\u7684\u56de\u6e2c\u7e3e\u6548\u4e0d\u5931\u771f\u3002</p> </li> <li> <p>\u5f37\u5927\u3001\u56b4\u8b39\u7684\u56de\u6e2c\u5206\u6790\u5957\u4ef6   \u56db\u5927 Python \u5206\u6790\u5de5\u5177\uff0c\u4e26\u63d0\u4f9b\u591a\u6a23\u5316\u53c3\u6578\u8b93\u60a8\u8abf\u6574\uff0c\u5168\u65b9\u4f4d\u6a21\u64ec\u5e02\u5834\u4ea4\u6613\u74b0\u5883\uff0c\u63d0\u5347\u5206\u6790\u7d50\u679c\u7684\u53ef\u4fe1\u5ea6\u3002</p> </li> </ul>"},{"location":"#_1","title":"\u7522\u54c1\u5167\u5bb9\u4ecb\u7d39","text":""},{"location":"#tquant-lab_1","title":"TQuant Lab \u2014 \u4e00\u7ad9\u5f0f\u7684\u91cf\u5316\u7814\u7a76\u5e73\u53f0","text":"<p>\u63d0\u4f9b\u5168\u53f0\u6700\u5b8c\u6574\u7684 PIT \u91cf\u5316\u8cc7\u6599\u5eab\u548c\u8cc7\u6599\u6b78\u7d0d\u5de5\u5177\uff08TEJ Tool API\uff09\uff0c\u642d\u914d\u5c08\u696d\u7684\u56e0\u5b50\u5206\u6790\u5de5\u5177\u3001\u5168\u65b9\u4f4d\u7684\u7b56\u7565\u56de\u6e2c\u5f15\u64ce\u548c\u8a73\u7d30\u7684\u53ef\u8996\u5316\u5831\u8868\u5448\u73fe\uff0c\u901a\u901a\u4e00\u7ad9\u5f0f\u89e3\u6c7a\uff0c\u528d\u6307\u6210\u70ba\u4f7f\u7528\u8005\u5728\u91cf\u5316\u6295\u8cc7\u4e4b\u8def\u4e0a\u7684\u4e00\u5927\u5229\u5668\u3002</p> <p>PIT\uff08Point In Time\uff09\uff1a\u904e\u53bb\u6b77\u53f2\u7576\u4e0b\u6240\u80fd\u53d6\u5f97\u7684\u6700\u65b0\u8cc7\u6599\uff0c\u82e5\u4f7f\u7528\u932f\u8aa4\u8cc7\u6599\u6050\u9020\u6210\u524d\u8996\u504f\u8aa4\u554f\u984c\uff0c\u5373\u7b56\u7565\u7e3e\u6548\u5c07\u56b4\u91cd\u5931\u6e96\u3002</p>"},{"location":"#_2","title":"\u76f8\u95dc\u9023\u7d50","text":"<ul> <li>TQuant Lab\uff5c\u4e00\u7ad9\u5f0f\u91cf\u5316\u7814\u7a76\uff0c\u6253\u9020\u5c08\u5c6c\u65bc\u4f60\u7684\u6295\u8cc7\u7814\u7a76\u91d1\u9470 </li> <li>GitHub - tejtw/TQuant-Lab: \u4f7f\u7528\u6587\u4ef6\u3001\u7a0b\u5f0f\u7bc4\u4f8b </li> <li>PYPI - zipline-tej </li> <li>TEJ\u5b98\u7db2 - \u5927\u4e2d\u83ef\u6700\u503c\u5f97\u4fe1\u8cf4\u7684\u91d1\u878d\u89e3\u6c7a\u65b9\u6848 | TEJ\u53f0\u7063\u7d93\u6fdf\u65b0\u5831 </li> <li>TQuant Lab \u8a02\u95b1\u9023\u7d50</li> </ul>"},{"location":"dataframe/dataframeloader/","title":"Pipeline DataFrameLoader - Pipeline API with Custom Data","text":"<p><code>DataFrameLoader</code> \u5141\u8a31\u5c07\u5ba2\u88fd\u5316\u7684\u6578\u64da\u900f\u904e DataFrame \u5c0e\u5165\u81f3 pipeline \u4e2d\uff0c\u672c\u7bc4\u4f8b\u5c07\u6f14\u793a <code>DataFrameLoader</code> \u7684\u7528\u6cd5\u3002</p> <p>Imports &amp; Settings</p> <pre><code>import os\nimport pandas as pd\n\nos.environ['TEJAPI_BASE'] = 'https://api.tej.com.tw'\nos.environ['TEJAPI_KEY'] = 'YOUR KEY'\n\n\nfrom zipline.pipeline import Pipeline\nfrom zipline.pipeline.loaders import EquityPricingLoader\nfrom zipline.pipeline.loaders.frame import DataFrameLoader\nfrom zipline.pipeline.data import Column, DataSet, TQAltDataSet, EquityPricing\nfrom zipline.pipeline.engine import SimplePipelineEngine\nfrom zipline.pipeline.domain import TW_EQUITIES\n\nfrom zipline.data.data_portal import bundles\nfrom zipline.data.run_ingest import simple_ingest\n\nfrom zipline.sources.TEJ_Api_Data import get_universe\n\nfrom TejToolAPI.TejToolAPI import get_history_data\n</code></pre> <p>\u7372\u53d6\u5916\u90e8\u8cc7\u6599\uff0c\u4e26\u9032\u884c\u6574\u7406</p>"},{"location":"dataframe/dataframeloader/#tquant-bundle","title":"\u8f09\u5165\u5148\u524d\u5df2\u5c0e\u5165\u7684 tquant bundle","text":"<ul> <li>\u82e5\u5c1a\u672a\u57f7\u884c tquant bundle ingest \u7684\u6d41\u7a0b\uff0c\u8acb\u5148\u57f7\u884c\u4ee5\u4e0b simple_ingest \u7a0b\u5f0f\u3002</li> <li><code>bundles.load</code> \u51fd\u5f0f\u8ca0\u8cac\u5f9e\u5148\u524d\u5df2\u7d93 ingest \u7684 bundle \u4e2d\u8f09\u5165\u6578\u64da\uff0c\u4f7f\u4f7f\u7528\u8005\u80fd\u5920\u5728 Zipline \u74b0\u5883\u4e2d\u5229\u7528 <code>AssetFinder</code> \u5b58\u53d6\u8b49\u5238 <code>SID</code>\uff08Security Identifier\uff09\u3002</li> </ul> <pre><code>start = '2020-01-03'\nend = '2025-02-07'\n\nstart_dt = pd.Timestamp(start, tz='utc')\nend_dt = pd.Timestamp(end, tz='utc')\n\npool = get_universe(start, end, idx_id=['IX0002'])\n\n#simple_ingest(name = 'tquant', tickers = pool, start_date = start , end_date = end)\n</code></pre> <pre><code>bundle_name = 'tquant'\nbundle = bundles.load(bundle_name)\n</code></pre>"},{"location":"dataframe/dataframeloader/#symbols","title":"\u53d6\u5f97\u8b49\u5238\u6a19\u7684\uff08Symbols\uff09","text":"<p>\u5728 Zipline \u4e2d\uff0c<code>AssetFinder</code> \u662f\u4e00\u500b\u5c08\u9580\u8ca0\u8cac\u7ba1\u7406\u8cc7\u7522\uff08<code>Asset</code>\uff09\u8cc7\u8a0a\u7684\u5de5\u5177\uff0c\u63d0\u4f9b\u67e5\u627e\u548c\u6aa2\u7d22\u8b49\u5238\u6a19\u7684\u7684\u529f\u80fd\u3002\u4ee5\u4e0b\u56db\u884c\u7a0b\u5f0f\u78bc\u5206\u5225\u57f7\u884c\uff1a</p> <ol> <li>\u53d6\u5f97 bundle \u4e2d\u6240\u6709\u80a1\u7968\u7684 <code>SID</code>\u3002</li> <li>\u900f\u904e SID \u53d6\u5f97\u5c0d\u61c9\u7684 <code>Asset</code> \u7269\u4ef6\u3002</li> <li>\u900f\u904e <code>Asset</code> \u7269\u4ef6\u53d6\u5f97\u4ea4\u6613\u4ee3\u78bc\uff08<code>symbol</code>\uff09\u3002</li> <li>\u5efa\u7acb <code>symbol</code> mapping <code>SID</code> \u7684\u5c0d\u7167\u3002</li> </ol> <pre><code>sids = bundle.asset_finder.equities_sids\nassets = bundle.asset_finder.retrieve_all(sids)\nsymbols = [i.symbol for i in assets]\nsymbol_map = dict(zip(symbols, sids))\n</code></pre>"},{"location":"dataframe/dataframeloader/#tej-tool-api","title":"\u5229\u7528 TEJ TOOL API \u7372\u53d6\u8cc7\u6599","text":"<p>\u9019\u908a\u53d6\u5f97\u5916\u8cc7\u8cb7\u8ce3\u8d85\u5f35\u6578\uff08<code>Qfii_Diff_Vol</code>\uff09\u8cc7\u6599\u4f5c\u70ba\u793a\u7bc4\u3002</p> <pre><code>custom_data = get_history_data(\n    ticker=symbols,\n    columns=['Qfii_Diff_Vol'],\n    start=start,\n    end=end,\n    transfer_to_chinese=False\n)\n</code></pre> <pre><code>custom_data.head()\n</code></pre> <p>\u6574\u7406\u5916\u90e8\u8cc7\u6599\u4ee5\u7b26\u5408 <code>DataFrameLoader</code> \u8981\u6c42\u7684\u683c\u5f0f - \u5c07\u5916\u90e8\u8cc7\u6599\u4f5c\u8f49\u7f6e\uff0c\u4e00\u500b\u6b04\u4f4d\u6574\u7406\u70ba\u4e00\u500b DataFrame\u3002 - \u63a5\u8457\u5c07\u5916\u90e8\u8cc7\u6599\u7684 coid \u66ff\u63db\u6210 <code>SID</code>\u3002 - \u6700\u5f8c\u5c07\u5916\u90e8\u8cc7\u6599\u7684 mdate \u8a2d\u5b9a\u70ba UTC \u6642\u5340\u3002</p> <p>\u8a3b\uff1a\u6b64\u8655\u8cc7\u6599\u63a1\u7528**\u4e0d\u5e73\u79fb**\u7684\u65b9\u5f0f\u9032\u884c\u8655\u7406</p> <pre><code>transform_data = (\n    custom_data\n    .set_index(['coid', 'mdate'])['Qfii_Diff_Vol']\n    .unstack('coid')\n    .rename(columns=symbol_map, errors='raise') # errors = 'raise' \u6703\u5728\u9047\u5230\u932f\u8aa4\u6642\u62cb\u51fa\u7570\u5e38\uff0c\u907f\u514d bundle \u8207 custom_data \u8cc7\u7522\u4e0d\u4e00\u81f4\n    .tz_localize('UTC')\n)\n</code></pre> <pre><code>transform_data.head()\n</code></pre>"},{"location":"example/docume/","title":"Data Collection","text":"<p>\u672c\u8ab2\u7a0b\u5be6\u4f5c\u5982\u4f55\u5c07\u8cc7\u6599\uff08\u5982\u50f9\u91cf\u3001\u57fa\u672c\u9762\u3001\u7c4c\u78bc\u9762\u7b49\uff09ingest \u5230 zipline \u56de\u6e2c\u5f15\u64ce\u4e2d\u3002\u900f\u904e\u9019\u500b\u52d5\u4f5c\uff0c\u5f8c\u7e8c\u4f7f\u7528 Pipeline API \u6642\uff0c\u5c31\u53ef\u4ee5\u5f88\u6709\u6548\u7387\u5730\u7372\u53d6\u8cc7\u6599\u4e26\u8a08\u7b97\u56e0\u5b50\u3002</p>"},{"location":"example/docume/#_1","title":"\u8f09\u5165\u6240\u9700\u5957\u4ef6","text":"<pre><code>import os\n</code></pre>"},{"location":"example/docume/#bundle","title":"Bundle \u8a2d\u7f6e","text":"<p>\u4ecb\u7d39\u74b0\u5883\u8b8a\u6578\u8a2d\u5b9a\uff0c\u4e26\u904b\u7528\u8a2d\u5b9a\u7684\u74b0\u5883\u8b8a\u6578\u505a\u50f9\u91cf\u3001\u975e\u50f9\u91cf\u8cc7\u6599\u7684 bundle\u3002</p> <p>\u5728 import zipline \u524d\uff0c\u5fc5\u9808\u5148\u8a2d\u5b9a\u4ee5\u4e0b\u74b0\u5883\u8b8a\u6578(os.environ)\uff1a</p> <p>\u50f9\u91cf\u8cc7\u6599 bundle\uff08tquant bundle\uff09\u8a2d\u5b9a</p> <ul> <li> <p>os.environ['TEJAPI_BASE'] = \"https://api.tej.com.tw\" \u7528\u65bc\u9023\u7d50TEJ\u8cc7\u6599\u5eab</p> </li> <li> <p>os.environ['TEJAPI_KEY'] = \"Your_Key\" \u7528\u65bc\u8b58\u5225\u4f7f\u7528\u8005</p> </li> <li> <p>os.environ['ticker'] tickers = 'xxxx xxxx xxxx' os.environ['ticker'] = tickers \u8a2d\u7f6e\u6211\u5011\u6240\u9700\u8981\u7684\u80a1\u7968\u4ee3\u78bc</p> </li> <li> <p>os.environ['mdate'] = 'yyyymmdd yyyymmdd' \u8a2d\u7f6e\u53d6\u5f97\u8cc7\u6599\u7684\u8d77\u59cb\u6642\u9593\u8207\u7d50\u675f\u6642\u9593</p> </li> <li> <p>!zipline ingest -b tquant \u5c07\u4e0a\u65b9\u8cc7\u6599 ingest \u9032 bundle\u3002</p> </li> </ul> <p>\u8a2d\u7f6e\u975e\u50f9\u91cf\u8cc7\u6599 bundle\uff08fundamentals bundle\uff09\u9700\u8981\u7684\u8cc7\u8a0a\uff1a</p> <ul> <li> <p>os.environ['fields'] = 'field1, field2, field3' \u8a2d\u7f6e\u6488\u53d6\u975e\u50f9\u91cf\u8cc7\u6599\u7684\u6b04\u4f4d\uff0c\u5176\u4e2d field1\u3001field2\u3001field3 \u4ee3\u8868\u8cc7\u6599\u6b04\u4f4d\u540d\u7a31</p> </li> <li> <p>os.environ['include_self_acc'] = 'N'(\u9810\u8a2d) \u8a2d\u7f6e\u662f\u5426\u6db5\u84cb\u516c\u53f8\u81ea\u7d50\u8ca1\u52d9\uff0c\u5176\u4e2d\u8a2d\u5b9a'Y'\u4ee3\u8868\u8ca1\u52d9\u8cc7\u6599\u5305\u542b\u81ea\u7d50\u8ca1\u52d9\uff0c'N'\u5247\u8868\u793a\u4e0d\u5305\u542b</p> </li> <li> <p>!zipline ingest -b fundamentals \u5c07\u975e\u50f9\u91cf\u8cc7\u6599 ingest \u9032 bundle\u3002</p> </li> </ul>"},{"location":"example/docume/#_2","title":"\u50f9\u91cf\u8cc7\u6599","text":"<ul> <li>\u50f9\u91cf\u8cc7\u6599\u6307 OHLCV \u8207\u9664\u6b0a\u606f\u76f8\u95dc\u8cc7\u8a0a\u3002\u4ee5\u4e0b\u7bc4\u4f8b\u8f09\u5165\u6307\u5b9a\u80a1\u7968\u50f9\u91cf\u8cc7\u6599\uff1a \u8f09\u5165\u6307\u5b9a\u80a1\u7968\u7684\u50f9\u91cf\u8cc7\u6599\uff0c\u5176\u4e2d IR0001 \u70ba\u53f0\u7063\u767c\u884c\u91cf\u52a0\u6b0a\u80a1\u50f9\u5831\u916c\u6307\u6578\u3002</li> </ul> <pre><code>tickers = 'IR0001 0050 0056 00737 1108 1101 1102 1103 6243 6451 1216 1301 1303 1326 1402 1476 1590 1605 1722 1802 2002 2105 2201 2207 2227 2301 2939 4108 4148 6431 6541 6657 2883 2891 2543 2929 2303 6505 9926 2308 2311 2317 2324 2325 2327 2330 2347 2353 2354 2357 2379 2382 2395 2408 2409 2412 2448 2454 2474 2492 2498 2603 2609 2615 2618 2633 2801 2823 2880 2881 2882 2883 2884 2885 2886 2887 2888 2890 2891 2892 2912 3008 3009 3034 3037 3045 3231 3474 3481 3673 3697 3711 4904 4938 5854 5871 5876 5880 6239 6415 6505 6669 6770 8046 8454 9904 9910'\nprint(\"\u7e3d\u5171\u6709 :\",len(tickers.split()),\"\u7b46\u8cc7\u6599\")\n\n\nos.environ[\"TEJAPI_BASE\"] = 'https://api.tej.com.tw'\nos.environ['TEJAPI_KEY'] = \"Your_Key\"\nos.environ['ticker'] = tickers\nos.environ['mdate'] = '20200103 20230530'\n\n!zipline ingest -b tquant\n</code></pre>"},{"location":"example/docume/#ingest","title":"\u7c21\u6613 ingest \u50f9\u91cf\u8cc7\u6599","text":"<p>simple_ingest()\u51fd\u6578\u63d0\u4f9b\u53e6\u4e00\u7a2e\u53d6\u5f97\u6307\u5b9a\u80a1\u7968\u50f9\u91cf\u8cc7\u6599\u7684\u65b9\u6cd5\uff0c\u8cc7\u6599\u540c\u6a23\u6703\u5b58\u5165 bundle \u4e2d\uff1a</p> <p>simple_ingest()\u51fd\u6578\u8f09\u5165\u50f9\u91cf\u8cc7\u6599\u6240\u9700\u53c3\u6578\u8cc7\u8a0a\u5982\u4e0b\uff1a</p> <ul> <li> <p>name ( str ) = 'tquant' \u5b9a\u7fa9 bundle \u540d\u7a31</p> </li> <li> <p>tickers ( list or str ) = ['xxxx', 'xxxx', 'xxxx'] or 'xxxx xxxx xxxx' \u8a2d\u7f6e\u6211\u5011\u9700\u8981\u7684\u80a1\u7968\u4ee3\u78bc</p> </li> <li> <p>start_date ( str ) = 'yyyy-mm-dd' \u8a2d\u7f6e\u8d77\u59cb\u65e5\u671f</p> </li> <li> <p>end_date ( str ) = 'yyyy-mm-dd' \u8a2d\u7f6e\u7d50\u675f\u65e5\u671f</p> </li> </ul> <pre><code>from zipline.data.run_ingest import simple_ingest\n\nstart = '2020-01-03'\nend = '2023-05-30'\n\nsimple_ingest(name = 'tquant',\n              tickers = tickers,\n              start_date = start,\n              end_date = end\n              )\n</code></pre>"},{"location":"example/docume/#_3","title":"\u66f4\u65b0\u50f9\u91cf\u8cc7\u6599","text":"<p>\u900f\u904e\u8f38\u5165 zipline update -b tquant \u6307\u4ee4\uff0c\u53ef\u4ee5\u66f4\u65b0\u7576\u524d\u4f7f\u7528\u7684 tquant bundle\uff0c\u4ee5\u7372\u5f97\u6700\u65b0\u7684\u4ea4\u6613\u50f9\u683c\u548c\u4ea4\u6613\u91cf\u8cc7\u8a0a\u3002</p> <p><pre><code># \u57f7\u884c\u524d\n!zipline bundle-info\n</code></pre> <pre><code>!zipline update -b tquant\n</code></pre> <pre><code># \u57f7\u884c\u5f8c\n!zipline bundle-info\n</code></pre></p>"},{"location":"example/docume/#_4","title":"\u65b0\u589e\u50f9\u91cf\u8cc7\u6599","text":"<p>\u4f7f\u7528 <code>zipline add -t &lt;tickers_want_to_add&gt;</code> \u6307\u4ee4\uff0c\u53ef\u4ee5\u5411\u73fe\u6709\u7684 tquant bundle \u4e2d\u65b0\u589e\u6240\u9078\u7684\u80a1\u7968\u3002</p> <p><pre><code># \u57f7\u884c\u524d\n!zipline bundle-info\n</code></pre> <pre><code>!zipline add -t \"6523 6208\"\n</code></pre> <pre><code># \u57f7\u884c\u5f8c\n!zipline bundle-info\n</code></pre></p>"},{"location":"example/docume/#data","title":"Data","text":"<p>\u904b\u7528 TEJTOOLAPI \u6574\u4f75\u8cc7\u6599\u3002TEJTOOLAPI \u4e3b\u8981\u6574\u4f75\u80a1\u50f9\u8207\u4e0d\u540c\u5c6c\u6027\u7684\u8cc7\u6599\u5eab\uff0c\u900f\u904e\u8f38\u5165\u80a1\u7968\u4ee3\u78bc (TICKERS) \u548c\u6b04\u4f4d (FIELD) \u5f8c\uff0c\u53ef\u5c07\u6b32\u6293\u53d6\u7684\u8cc7\u6599\u6574\u4f75\u70ba\u4ee5\u65e5\u983b\u7387\u7684 DataFrame\u3002</p> <ul> <li>Data Preprocess</li> </ul> <p>\u672c\u8ab2\u7a0b\u5be6\u4f5c\u5982\u4f55\u5c07\u8cc7\u6599\uff08\u5982\u50f9\u91cf\u3001\u57fa\u672c\u9762\u3001\u7c4c\u78bc\u9762...\u7b49\uff09ingest \u5230 zipline \u56de\u6e2c\u5f15\u64ce\u4e2d\u3002 \u900f\u904e\u9019\u500b\u52d5\u4f5c\uff0c\u5f8c\u7e8c\u4f7f\u7528 Pipeline API \u6642\uff0c\u5c31\u53ef\u4ee5\u5f88\u6709\u6548\u7387\u5730\u7372\u53d6\u8cc7\u6599\u4e26\u8a08\u7b97\u56e0\u5b50\u3002</p> <ul> <li>Data Collection\uff08\u50f9\u91cf\u8cc7\u6599\uff09</li> <li>Data Collection(\u975e\u50f9\u91cf\u8cc7\u6599)</li> </ul>"},{"location":"example/documents/","title":"Documents","text":""},{"location":"example/documents/#_1","title":"\u958b\u59cb\u4f7f\u7528","text":"<p>\u4ee5\u4e0b\u6587\u4ef6\u5c07\u8aaa\u660e\u5982\u4f55\u4f7f\u7528TEJ API\u4f86\u5b58\u53d6TEJ \u8cc7\u6599\u5eab\u3002</p>"},{"location":"example/documents/#api","title":"API\u8a8d\u8b49","text":""},{"location":"example/documents/#api-key","title":"\u53d6\u5f97 API key","text":"<p>\u60a8\u9808\u8981\u5148\u5411\u672c\u516c\u53f8\u8a3b\u518a\u4e00\u500b\u5e33\u865f\uff0c\u7136\u5f8c\u518d\u7533\u8acb\u53d6\u7528\u8cc7\u6599\u6240\u9700\u7684 API Key\u3002</p>"},{"location":"example/documents/#_2","title":"\u4f8b\u5982:","text":"<pre><code>api_key=a8sb1jska2lz03hc2\n</code></pre>"},{"location":"example/documents/#api-key_1","title":"\u4f55\u6642\u4f7f\u7528API Key","text":"<p>\u6bcf\u6b21\u5b58\u53d6\u8cc7\u6599\u6642\uff0c\u90fd\u9700\u8981\u63d0\u4f9b\u60a8\u7684API Key</p>"},{"location":"example/documents/#rest-api","title":"REST API","text":"<pre><code>?api_key=\"YOURAPIKEY\"\n</code></pre>"},{"location":"example/documents/#python","title":"Python","text":"<pre><code>tejapi.ApiConfig.api_key = \"YOURAPIKEY\"\n</code></pre>"},{"location":"example/documents/#_3","title":"\u514d\u8cbb\u53ca\u4ed8\u8cbb\u8cc7\u6599\u5eab","text":"<p>\u672c\u516c\u53f8\u63d0\u4f9b\u514d\u8cbb\u53ca\u4ed8\u8cbb\u8cc7\u6599\u5eab</p> <ul> <li>\u8a66\u7528\u8cc7\u6599\u5eab<ul> <li>\u50c5\u80fd\u4f7f\u7528\u8a66\u7528\u8cc7\u6599\u5eab\u5167\u63d0\u4f9b\u7684\u8868\u683c</li> <li>\u6bcf\u5929\u6700\u591a500\u6b21\u547c\u53eb</li> <li>\u6bcf\u6b21\u547c\u53eb\u6700\u591a10,000\u7b46\u8cc7\u6599(\u53ef\u5206\u9801\u53d6\u5f97\u5176\u9918\u8cc7\u6599\uff0c\u5206\u9801\u7e3d\u7b46\u6578\u4e0a\u9650\u70ba 50,000)</li> <li>\u6bcf\u5929\u6700\u591a\u63d0\u4f9b50,000\u7b46\u8cc7\u6599</li> </ul> </li> <li>\u4ed8\u8cbb\u8cc7\u6599\u5eab<ul> <li>\u6bcf\u5929\u6700\u591a2,000\u6b21\u547c\u53eb</li> <li>\u6bcf\u6b21\u547c\u53eb\u6700\u591a10,000\u7b46\u8cc7\u6599(\u53ef\u5206\u9801\u53d6\u5f97\u5176\u9918\u8cc7\u6599\uff0c\u5206\u9801\u7e3d\u7b46\u6578\u4e0a\u9650\u70ba 1,000,000)</li> <li>\u6bcf\u5929\u6700\u591a\u63d0\u4f9b3,000,000\u7b46\u8cc7\u6599</li> </ul> </li> </ul>"},{"location":"example/documents/#api_1","title":"\u5404\u985e\u7a0b\u5f0f\u8a9e\u8a00 API","text":"<p>Tejapi\u63d0\u4f9b\u5404\u985e\u7a0b\u5f0f\u8a9e\u8a00\u7528\u4ee5\u5b58\u53d6\u8cc7\u6599\uff0c\u8acb\u9078\u64c7\u4e0b\u5217\u5404\u985e\u7a0b\u5f0f\u8a9e\u8a00\u8a73\u7d30\u8aaa\u660e\u3002</p> <ul> <li> <p> REST API</p> <p>\u8aaa\u660e\u900f\u904ehttps\u5b58\u53d6REST API\u7684\u4f7f\u7528\u65b9\u5f0f</p> <p> Reference</p> </li> <li> <p> Python API</p> <p>\u8aaa\u660e\u5229\u7528 Python\u4f7f\u7528 TEJ API\u7684\u65b9\u5f0f</p> <p> Reference</p> </li> <li> <p> R API</p> <p>\u8aaa\u660e\u5229\u7528 R\u4f7f\u7528 TEJ API\u7684\u65b9\u5f0f</p> <p> Reference</p> </li> <li> <p> .NET API</p> <p>\u8aaa\u660e\u5229\u7528 .NET\u4f7f\u7528 TEJ API\u7684\u65b9\u5f0f</p> <p> Reference</p> </li> </ul>"},{"location":"example/documents1/","title":"TQuant Lab \u5b89\u88dd (Installation)","text":"<p>\u7a0b\u5f0f\u78bc</p>"},{"location":"example/documents100/","title":"ExponentialWeightedMovingAverage \u51fd\u6578\u4ecb\u7d39","text":"<p><code>ExponentialWeightedMovingAverage()</code> \u662f Zipline \u63d0\u4f9b\u7684\u79fb\u52d5\u5e73\u5747\u65b9\u6cd5\u4e4b\u4e00\uff0c\u7528\u4f86\u8a08\u7b97 \u6307\u6578\u52a0\u6b0a\u79fb\u52d5\u5e73\u5747\uff08EWMA\uff09\u3002</p> <p>\u6b64\u65b9\u6cd5\u6703\u7d66\u4e88\u8d8a\u63a5\u8fd1\u73fe\u5728\u7684\u89c0\u6e2c\u503c\u8d8a\u9ad8\u7684\u6b0a\u91cd\uff0c\u5176\u8a08\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a</p> \\[ \\text{EWMA} = \\frac{\\sum_{i=1}^{n} {decay}^i \\times x_{i}}{\\sum_{i=1}^{n} {decay}^i} \\] <p>EWMA \u76f8\u5c0d\u65bc\u7c21\u55ae\u8207\u7dda\u6027\u52a0\u6b0a\u5e73\u5747\u66f4\u80fd\u5373\u6642\u53cd\u6620\u50f9\u683c\u8b8a\u5316\u3002</p>"},{"location":"example/documents100/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>inputs</code>\uff1a\u6b32\u8a08\u7b97\u7684\u8cc7\u6599\u6b04\u4f4d\uff08\u4f8b\u5982 <code>EquityPricing.close</code>\uff09\u3002  </li> <li><code>window_length</code>\uff1a\u89c0\u5bdf\u671f\u9593\uff08n \u65e5\uff09\u3002  </li> <li><code>decay_rate</code>\uff1a\u6307\u6578\u8870\u9000\u7387\uff08\u4f8b\u5982 0.1\uff09\u3002</li> </ul> <p><pre><code>ExponentialWeightedMovingAverage(\n    inputs=[TWEquityPricing.close],\n    window_length=10,\n    decay_rate=0.1\n)\n</code></pre> \u7bc4\u4f8b <pre><code>from zipline.pipeline.factors import ExponentialWeightedMovingAverage\n\ndef make_pipeline():\n    return Pipeline(\n        columns={\n            \"EWMA\": ExponentialWeightedMovingAverage(\n                inputs=[TWEquityPricing.close],\n                window_length=10,\n                decay_rate=0.1\n            )\n        }\n    )\n\nrun_pipeline(make_pipeline(), start_time, end_time)\n</code></pre></p>"},{"location":"example/documents102/","title":"ExponentialWeightedMovingStdDev \u51fd\u6578\u4ecb\u7d39","text":"<p><code>ExponentialWeightedMovingStdDev()</code> \u662f Zipline \u63d0\u4f9b\u7684\u6ce2\u52d5\u5ea6\u8a08\u7b97\u56e0\u5b50\uff0c\u7528\u4f86\u8a08\u7b97 \u6307\u6578\u52a0\u6b0a\u79fb\u52d5\u6a19\u6e96\u5dee\uff08EWMSTD\uff09\u3002</p> <p>\u9019\u7a2e\u6a19\u6e96\u5dee\u6703\u5c0d\u8f03\u8fd1\u671f\u7684\u8cc7\u6599\u7d66\u4e88\u66f4\u9ad8\u7684\u6b0a\u91cd\uff0c\u9069\u7528\u65bc\u8b8a\u52d5\u5feb\u901f\u7684\u5e02\u5834\u689d\u4ef6\u4e0b\u9032\u884c\u98a8\u96aa\u8a55\u4f30\u3002</p>"},{"location":"example/documents102/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>inputs</code>\uff1a\u6b32\u8a08\u7b97\u7684\u8cc7\u6599\u6b04\u4f4d\uff08\u4f8b\u5982 <code>EquityPricing.close</code>\uff09\u3002  </li> <li><code>window_length</code>\uff1a\u89c0\u5bdf\u671f\u9593\uff08n \u65e5\uff09\u3002  </li> <li><code>decay_rate</code>\uff1a\u6307\u6578\u8870\u9000\u7387\uff08\u4f8b\u5982 0.1\uff09\u3002</li> </ul> <p><pre><code>ExponentialWeightedMovingStdDev(\n    inputs=[TWEquityPricing.close],\n    window_length=10,\n    decay_rate=0.1\n)\n</code></pre> \u7bc4\u4f8b</p> <p>\u4ee5\u4e0b\u7bc4\u4f8b\u5efa\u7acb\u4e00\u500b Pipeline\uff0c\u8a08\u7b97\u6bcf\u6a94\u80a1\u7968\u904e\u53bb 10 \u5929\u7684\u6307\u6578\u52a0\u6b0a\u79fb\u52d5\u6a19\u6e96\u5dee <pre><code>from zipline.pipeline.factors import ExponentialWeightedMovingStdDev\n\ndef make_pipeline():\n    return Pipeline(\n        columns={\n            \"EWMSTD\": ExponentialWeightedMovingStdDev(\n                inputs=[TWEquityPricing.close],\n                window_length=10,\n                decay_rate=0.1\n            )\n        }\n    )\n\nrun_pipeline(make_pipeline(), start_time, end_time)\n</code></pre></p>"},{"location":"example/documents103/","title":"MaxDrawdown \u51fd\u6578\u4ecb\u7d39","text":"<p><code>MaxDrawdown()</code> \u662f Zipline \u63d0\u4f9b\u7684\u4e00\u500b\u98a8\u96aa\u8a55\u4f30\u56e0\u5b50\uff0c\u7528\u4f86\u8a08\u7b97\u5728\u6307\u5b9a\u671f\u9593\u5167\u7684 \u6700\u5927\u56de\u64a4\uff08Maximum Drawdown\uff09\u3002</p> <p>\u6700\u5927\u56de\u64a4\u53cd\u6620\u8cc7\u7522\u50f9\u683c\u5f9e\u9ad8\u9ede\u4e0b\u8dcc\u5230\u4f4e\u9ede\u7684\u6700\u5927\u5e45\u5ea6\uff0c\u5e38\u7528\u65bc\u8861\u91cf\u6f5b\u5728\u640d\u5931\u98a8\u96aa\u3002</p>"},{"location":"example/documents103/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>inputs</code>\uff1a\u8a08\u7b97\u56de\u64a4\u6240\u9700\u7684\u50f9\u683c\u8cc7\u6599\u6b04\u4f4d\uff08\u4f8b\u5982 <code>EquityPricing.close</code>\uff09\u3002  </li> <li><code>window_length</code>\uff1a\u89c0\u5bdf\u671f\u9593\uff08n \u65e5\uff09\u3002</li> </ul> <p><pre><code>MaxDrawdown(\n    inputs=[TWEquityPricing.close],\n    window_length=1\n)\n</code></pre> \u7bc4\u4f8b</p> <p>\u4ee5\u4e0b\u7bc4\u4f8b\u5efa\u7acb\u4e00\u500b Pipeline\uff0c\u8a08\u7b97\u6bcf\u6a94\u80a1\u7968\u5728\u6700\u8fd1 1 \u5929\u7684\u6700\u5927\u56de\u64a4 <pre><code>from zipline.pipeline.factors import MaxDrawdown\n\ndef make_pipeline():\n    return Pipeline(\n        columns={\n            \"MaxDrawdown\": MaxDrawdown(\n                inputs=[TWEquityPricing.close],\n                window_length=1\n            )\n        }\n    )\n\nrun_pipeline(make_pipeline(), start_time, end_time)\n</code></pre></p>"},{"location":"example/documents104/","title":"Returns \u51fd\u6578\u4ecb\u7d39","text":"<p><code>Returns()</code> \u662f Zipline \u63d0\u4f9b\u7684\u4e00\u7a2e\u56e0\u5b50\uff0c\u7528\u4f86\u8a08\u7b97\u8cc7\u7522\u5728\u6307\u5b9a\u7a97\u683c\u9577\u5ea6\u5167\u7684 \u5831\u916c\u7387\u3002</p> <p>\u8207 <code>DailyReturns()</code> \u4e0d\u540c\uff0c\u6b64\u51fd\u6578\u53ef\u8a2d\u5b9a\u591a\u65e5\u7684\u5831\u916c\u8a08\u7b97\u671f\u9593\uff0c\u5e38\u7528\u65bc\u89c0\u5bdf\u9031\u671f\u6027\u7684\u7d2f\u7a4d\u5831\u916c\u3002</p>"},{"location":"example/documents104/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>inputs</code>\uff1a\u8a08\u7b97\u5831\u916c\u6240\u9700\u7684\u50f9\u683c\u8cc7\u6599\u6b04\u4f4d\uff08\u9810\u8a2d\u70ba <code>EquityPricing.close</code>\uff09\u3002  </li> <li><code>window_length</code>\uff1a\u5831\u916c\u7387\u7684\u89c0\u5bdf\u671f\u9593\uff08n \u65e5\uff09\u3002</li> </ul> <p><pre><code>Returns(\n    inputs=[TWEquityPricing.close],\n    window_length=2\n)\n</code></pre> \u7bc4\u4f8b</p> <p>\u4ee5\u4e0b\u7bc4\u4f8b\u5efa\u7acb\u4e00\u500b Pipeline\uff0c\u8a08\u7b97\u6bcf\u6a94\u80a1\u7968\u8fd1 2 \u5929\u7684\u5831\u916c\u7387 <pre><code>from zipline.pipeline.factors import Returns\n\ndef make_pipeline():\n    return Pipeline(\n        columns={\n            \"Returns\": Returns(\n                inputs=[TWEquityPricing.close],\n                window_length=2\n            )\n        }\n    )\n\nrun_pipeline(make_pipeline(), start_time, end_time)\n</code></pre></p>"},{"location":"example/documents105/","title":"RollingPearson \u51fd\u6578\u4ecb\u7d39","text":"<p><code>RollingPearson()</code> \u662f Zipline \u63d0\u4f9b\u7684\u56e0\u5b50\u51fd\u6578\uff0c\u7528\u4f86\u8a08\u7b97\u5169\u500b\u8b8a\u6578\u6216\u56e0\u5b50\u4e4b\u9593\u7684 \u6efe\u52d5\u76ae\u723e\u68ee\u76f8\u95dc\u4fc2\u6578\uff08Rolling Pearson Correlation\uff09\u3002</p> <p>\u6b64\u51fd\u6578\u53ef\u89c0\u5bdf\u8b8a\u6578\u9593\u7684\u52d5\u614b\u95dc\u806f\u7a0b\u5ea6\uff0c\u662f\u91cf\u5316\u7b56\u7565\u4e2d\u5e38\u7528\u4f86\u5075\u6e2c\u95dc\u4fc2\u7a69\u5b9a\u6027\u7684\u5de5\u5177\u3002</p>"},{"location":"example/documents105/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>base_factor</code>\uff1a\u6b32\u8a08\u7b97\u76f8\u95dc\u4fc2\u6578\u7684\u4e3b\u8981\u56e0\u5b50\u3002  </li> <li><code>target</code>\uff1a\u8207 <code>base_factor</code> \u914d\u5c0d\u8a08\u7b97\u76f8\u95dc\u4fc2\u6578\u7684\u53e6\u4e00\u8b8a\u6578\u6216\u56e0\u5b50\u3002  </li> <li><code>correlation_length</code>\uff1a\u89c0\u5bdf\u671f\u9593\uff08n \u65e5\uff09\uff0c\u5982\u6b32\u89c0\u5bdf\u8207\u524d\u4e00\u65e5\u4e4b\u76f8\u95dc\uff0c\u5247\u8a2d\u70ba 2\u3002  </li> <li><code>mask</code>\uff1a\u53ef\u9078\u7684\u689d\u4ef6\u6ffe\u7db2\uff0c\u7528\u4f86\u6392\u9664\u7279\u5b9a\u8b49\u5238\u3002</li> </ul> <p><pre><code>RollingPearson(\n    base_factor=base_factor,\n    target=target,\n    correlation_length=10\n)\n</code></pre> \u7bc4\u4f8b</p> <p>\u4ee5\u4e0b\u7bc4\u4f8b\u5efa\u7acb\u4e00\u500b Pipeline\uff0c\u8a08\u7b97\u6bcf\u65e5\u5831\u916c\u8207\u8fd1 6 \u65e5\u5831\u916c\u4e4b\u9593\u7684 10 \u65e5\u6efe\u52d5\u76f8\u95dc\u4fc2\u6578 <pre><code>from zipline.pipeline.factors import RollingPearson\nfrom zipline.pipeline.factors import DailyReturns\nfrom zipline.pipeline.factors import Returns\n\ndef make_pipeline():\n    base_factor = DailyReturns(inputs=[TWEquityPricing.close])\n    target = Returns(inputs=[TWEquityPricing.close], window_length=6)\n    return Pipeline(\n        columns={\n            \"RollingPearson\": RollingPearson(\n                base_factor=base_factor,\n                target=target,\n                correlation_length=10\n            )\n        }\n    )\n\nrun_pipeline(make_pipeline(), start_time, end_time)\n</code></pre></p>"},{"location":"example/documents106/","title":"RollingLinearRegressionOfReturns \u51fd\u6578\u4ecb\u7d39","text":"<p><code>RollingLinearRegressionOfReturns()</code> \u662f Zipline \u63d0\u4f9b\u7684\u8ff4\u6b78\u5206\u6790\u56e0\u5b50\uff0c\u6703\u91dd\u5c0d\u6bcf\u500b\u8cc7\u7522\u8207\u6307\u5b9a\u8cc7\u7522\u4e4b\u9593\u9032\u884c OLS \u7dda\u6027\u56de\u6b78\uff0c\u56de\u50b3\u5c0d\u61c9\u7684 beta\u3001alpha\u3001r \u503c\u3001p \u503c\u8207\u6a19\u6e96\u8aa4\u3002</p> <p>\u5176\u56de\u6b78\u6a21\u578b\u5982\u4e0b\u6240\u793a\uff1a</p> \\[ Return_{i,t} = \\beta_{i} \\times {Certain Return}_{i,t} + \\alpha_{i} \\] <p>\u53ef\u7528\u4f86\u89c0\u5bdf\u8cc7\u7522\u5c0d\u57fa\u6e96\u8cc7\u7522\uff08\u5982\u5e02\u5834\u56e0\u5b50\uff09\u7684\u53cd\u61c9\u7a0b\u5ea6\u8207\u7d71\u8a08\u986f\u8457\u6027\u3002</p>"},{"location":"example/documents106/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>target</code>\uff1a\u6307\u5b9a\u70ba\u81ea\u8b8a\u6578\u7684\u8cc7\u7522\uff08\u4f8b\u5982 <code>symbol(\"IR0001\")</code>\uff09\u3002  </li> <li><code>returns_length</code>\uff1a\u7528\u4f86\u8a08\u7b97\u5831\u916c\u7684\u671f\u9593\uff08\u5982\u8a2d\u70ba 2 \u5247\u70ba\u65e5\u5831\u916c\uff09\u3002  </li> <li><code>regression_length</code>\uff1a\u7528\u65bc\u57f7\u884c\u8ff4\u6b78\u7684\u6642\u9593\u7a97\u683c\u9577\u5ea6\u3002  </li> <li><code>mask</code>\uff1a\u53ef\u9078\u7684\u6ffe\u7db2\uff0c\u7528\u4f86\u6392\u9664\u7279\u5b9a\u8cc7\u7522\u3002</li> </ul> <p><pre><code>RollingLinearRegressionOfReturns(\n    target=symbol(\"IR0001\"),\n    returns_length=2,\n    regression_length=14\n)\n</code></pre> \u7bc4\u4f8b</p> <p>\u4ee5\u4e0b\u7bc4\u4f8b\u4ee5 IR0001 \u4f5c\u70ba\u8ff4\u6b78\u7684\u81ea\u8b8a\u6578\uff0c\u8a08\u7b97\u6bcf\u6a94\u80a1\u7968\u8207\u5176\u4e4b\u9593\u7684 beta\u3001alpha \u7b49\u7d71\u8a08\u91cf</p> <pre><code>from zipline.pipeline.factors import RollingLinearRegressionOfReturns\nfrom zipline.pipeline.filters import StaticAssets\nfrom zipline import run_algorithm\nfrom zipline.api import symbol, attach_pipeline, pipeline_output\n\ndef make_pipeline():\n    regressor = RollingLinearRegressionOfReturns(\n        target=symbol(\"IR0001\"),\n        returns_length=2,\n        regression_length=14\n    )\n    return Pipeline(\n        columns={\n            \"beta\": regressor.beta,\n            \"alpha\": regressor.alpha,\n            \"r_value\": regressor.r_value,\n            \"p_value\": regressor.p_value,\n            \"stderr\": regressor.stderr\n        },\n        screen=~StaticAssets([symbol(\"IR0001\")])\n    )\n\n\n# \u4ee5\u4e0b\u70ba\u56de\u6e2c\u6642\u7684\u4f7f\u7528\ndef initialize(context):\n    my_pipe = attach_pipeline(make_pipeline(), 'my_pipe')\n\ndef handle_data(context, data):\n    pipe = pipeline_output('my_pipe')\n    print(\"=\" * 100)\n    print(f\"Beta: {pipe.beta}\")\n    print(f\"alpha: {pipe.alpha}\")\n    print(f\"r_value: {pipe.r_value}\")\n    print(f\"p_value: {pipe.p_value}\")\n    print(f\"stderr: {pipe.stderr}\")\n\ndef analyze(context, perf):\n    pass\n\nresults = run_algorithm(\n    start=start_time,\n    end=end_time,\n    initialize=initialize,\n    capital_base=1e6,\n    handle_data=handle_data,\n    analyze=analyze,\n    bundle='tquant'\n)\n</code></pre>"},{"location":"example/documents107/","title":"RollingSpearmanOfReturns \u51fd\u6578\u4ecb\u7d39","text":"<p><code>RollingSpearmanOfReturns()</code> \u662f Zipline \u63d0\u4f9b\u7684\u7d71\u8a08\u56e0\u5b50\u4e4b\u4e00\uff0c\u7528\u4f86\u8a08\u7b97\u7279\u5b9a\u8cc7\u7522\u8207\u5176\u4ed6\u8cc7\u7522\u5728\u6307\u5b9a\u671f\u9593\u5167\u7684 \u65af\u5339\u723e\u66fc\u7b49\u7d1a\u76f8\u95dc\u4fc2\u6578\uff08Spearman Rank Correlation\uff09\u3002</p> <p>\u8207\u76ae\u723e\u68ee\u76f8\u95dc\u4e0d\u540c\uff0c\u65af\u5339\u723e\u66fc\u76f8\u95dc\u8861\u91cf\u7684\u662f\u8b8a\u6578\u6392\u5e8f\u7684\u55ae\u8abf\u95dc\u4fc2\uff0c\u5c0d\u65bc\u975e\u7dda\u6027\u4f46\u4ecd\u5177\u8da8\u52e2\u7684\u8cc7\u6599\u66f4\u70ba\u654f\u611f\u3002</p>"},{"location":"example/documents107/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>target</code>\uff1a\u6307\u5b9a\u70ba\u57fa\u6e96\u7684\u8cc7\u7522\uff08\u4f8b\u5982 <code>symbol(\"IR0001\")</code>\uff09\u3002  </li> <li><code>returns_length</code>\uff1a\u7528\u4f86\u8a08\u7b97\u5831\u916c\u7684\u671f\u9593\uff08n \u65e5\uff09\uff0c\u82e5\u70ba\u65e5\u5831\u916c\u5247\u8a2d\u70ba 2\u3002  </li> <li><code>correlation_length</code>\uff1a\u89c0\u5bdf\u671f\u9593\uff08n \u65e5\uff09\u4ee5\u9032\u884c\u76f8\u95dc\u8a08\u7b97\u3002  </li> <li><code>mask</code>\uff1a\u53ef\u9078\u7684\u6ffe\u7db2\uff0c\u7528\u4f86\u6392\u9664\u7279\u5b9a\u8cc7\u7522\u3002</li> </ul> <pre><code>RollingSpearmanOfReturns(\n    target=symbol(\"IR0001\"),\n    returns_length=2,\n    correlation_length=14\n)\n</code></pre> <p>\u7bc4\u4f8b</p> <p>\u4ee5\u4e0b\u7bc4\u4f8b\u5efa\u7acb\u4e00\u500b Pipeline\uff0c\u8a08\u7b97\u6240\u6709\u8cc7\u7522\u8207 IR0001 \u4e4b\u9593\u7684 14 \u65e5\u65af\u5339\u723e\u66fc\u5831\u916c\u76f8\u95dc\u4fc2\u6578 <pre><code>from zipline.pipeline.factors import RollingSpearmanOfReturns\nfrom zipline.pipeline.filters import StaticAssets\nfrom zipline import run_algorithm\nfrom zipline.api import symbol, attach_pipeline, pipeline_output\n\ndef make_pipeline():\n    regressor = RollingSpearmanOfReturns(\n        target=symbol(\"IR0001\"),\n        returns_length=2,\n        correlation_length=14\n    )\n    return Pipeline(\n        columns={\n            \"RollingSpearmanOfReturns\": regressor\n        },\n        screen=~StaticAssets([symbol(\"IR0001\")])\n    )\n\n\n# \u4ee5\u4e0b\u70ba\u56de\u6e2c\u6642\u7684\u4f7f\u7528\ndef initialize(context):\n    my_pipe = attach_pipeline(make_pipeline(), 'my_pipe')\n\ndef handle_data(context, data):\n    pipe = pipeline_output('my_pipe')\n    print(\"=\" * 100)\n    print(pipe)\n\ndef analyze(context, perf):\n    pass\n\nresults = run_algorithm(\n    start=start_time,\n    end=end_time,\n    initialize=initialize,\n    capital_base=1e6,\n    handle_data=handle_data,\n    analyze=analyze,\n    bundle='tquant'\n)\n</code></pre></p>"},{"location":"example/documents108/","title":"SimpleBeta \u51fd\u6578\u4ecb\u7d39","text":"<p><code>SimpleBeta()</code> \u662f Zipline \u63d0\u4f9b\u7684\u56de\u6b78\u56e0\u5b50\uff0c\u7528\u4f86\u8a08\u7b97\u8cc7\u7522\u76f8\u5c0d\u65bc\u7279\u5b9a\u8cc7\u7522\u7684 Beta \u503c\uff0c\u7528\u4ee5\u8861\u91cf\u5169\u8005\u5831\u916c\u7387\u7684\u7dda\u6027\u654f\u611f\u5ea6\u3002</p> <p>\u6b64\u51fd\u6578\u7b49\u50f9\u65bc <code>RollingLinearRegressionOfReturns</code> \u6240\u56de\u50b3\u7684 beta \u503c\uff0c\u4f46\u63d0\u4f9b\u66f4\u7c21\u5316\u7684\u5beb\u6cd5\u8207\u7528\u9014\u3002</p>"},{"location":"example/documents108/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>target</code>\uff1a\u6307\u5b9a\u70ba\u81ea\u8b8a\u6578\u7684\u57fa\u6e96\u8cc7\u7522\uff08\u4f8b\u5982 <code>symbol(\"IR0001\")</code>\uff09\u3002  </li> <li><code>regression_length</code>\uff1a\u89c0\u5bdf\u5831\u916c\u8207\u56de\u6b78\u7684\u7a97\u683c\u9577\u5ea6\u3002</li> </ul> <p><pre><code>SimpleBeta(\n    target=symbol(\"IR0001\"),\n    regression_length=30\n)\n</code></pre> \u7bc4\u4f8b</p> <p>\u4ee5\u4e0b\u7bc4\u4f8b\u5efa\u7acb\u4e00\u500b Pipeline\uff0c\u8a08\u7b97\u6240\u6709\u8cc7\u7522\u76f8\u5c0d\u65bc IR0001 \u7684 30 \u65e5 beta \u503c <pre><code>from zipline.pipeline.factors import SimpleBeta\nfrom zipline.pipeline.filters import StaticAssets\nfrom zipline import run_algorithm\nfrom zipline.api import symbol, attach_pipeline, pipeline_output\n\ndef make_pipeline():\n    Beta = SimpleBeta(\n        target=symbol(\"IR0001\"),\n        regression_length=30\n    )\n    return Pipeline(\n        columns={\n            \"SimpleBeta\": Beta\n        },\n        screen=~StaticAssets([symbol(\"IR0001\")])\n    )\n\ndef initialize(context):\n    my_pipe = attach_pipeline(make_pipeline(), 'my_pipe')\n\ndef handle_data(context, data):\n    pipe = pipeline_output('my_pipe')\n    print(\"=\" * 100)\n    print(pipe)\n\ndef analyze(context, perf):\n    pass\n\nresults = run_algorithm(\n    start=start_time,\n    end=end_time,\n    initialize=initialize,\n    capital_base=1e6,\n    handle_data=handle_data,\n    analyze=analyze,\n    bundle='tquant'\n)\n</code></pre></p>"},{"location":"example/documents109/","title":"RSI \u51fd\u6578\u4ecb\u7d39","text":"<p><code>RSI()</code> \u662f Zipline \u63d0\u4f9b\u7684\u52d5\u80fd\u6280\u8853\u6307\u6a19\uff0c\u7528\u4f86\u8a08\u7b97\u8cc7\u7522\u5728\u6307\u5b9a\u671f\u9593\u5167\u7684 \u76f8\u5c0d\u5f37\u5f31\u6307\u6a19\uff08Relative Strength Index, RSI\uff09\u3002</p> <p>RSI \u5e38\u7528\u65bc\u8fa8\u5225\u50f9\u683c\u662f\u5426\u8655\u65bc\u8d85\u8cb7\u6216\u8d85\u8ce3\u5340\u9593\uff0c\u662f\u6280\u8853\u5206\u6790\u4e2d\u5e38\u898b\u7684\u9707\u76ea\u6307\u6a19\u4e4b\u4e00\u3002</p>"},{"location":"example/documents109/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>inputs</code>\uff1a\u8a08\u7b97 RSI \u6240\u9700\u7684\u50f9\u683c\u8cc7\u6599\u6b04\u4f4d\uff0c\u9810\u8a2d\u70ba <code>EquityPricing.close</code>\u3002  </li> <li><code>window_length</code>\uff1a\u8a08\u7b97 RSI \u7684\u89c0\u5bdf\u671f\u9593\uff08n \u65e5\uff09\uff0c\u9810\u8a2d\u70ba 15\u3002</li> </ul> <p><pre><code>RSI(\n    inputs=[TWEquityPricing.close],\n    window_length=87\n)\n</code></pre> \u7bc4\u4f8b</p> <p>\u4ee5\u4e0b\u7bc4\u4f8b\u5efa\u7acb\u4e00\u500b Pipeline\uff0c\u8a08\u7b97\u6bcf\u6a94\u80a1\u7968\u904e\u53bb 87 \u5929\u7684 RSI \u6578\u503c</p> <pre><code>from zipline.pipeline.factors import RSI\n\ndef make_pipeline():\n    return Pipeline(\n        columns={\n            \"RSI\": RSI(\n                inputs=[TWEquityPricing.close],\n                window_length=87\n            )\n        }\n    )\n\nrun_pipeline(make_pipeline(), start_time, end_time)\n</code></pre>"},{"location":"example/documents110/","title":"VWAP \u51fd\u6578\u4ecb\u7d39","text":"<p><code>VWAP()</code> \u662f Zipline \u63d0\u4f9b\u7684\u52a0\u6b0a\u5e73\u5747\u50f9\u683c\u56e0\u5b50\uff0c\u7528\u4f86\u8a08\u7b97\u5728\u6307\u5b9a\u671f\u9593\u5167\u7684 \u6210\u4ea4\u91cf\u52a0\u6b0a\u5e73\u5747\u50f9\u683c\uff08Volume Weighted Average Price\uff09\u3002</p> <p>VWAP \u5c0d\u6a5f\u69cb\u6295\u8cc7\u4eba\u800c\u8a00\u662f\u4e00\u9805\u91cd\u8981\u6307\u6a19\uff0c\u5e38\u7528\u4f86\u8a55\u4f30\u4ea4\u6613\u57f7\u884c\u54c1\u8cea\u6216\u505a\u70ba\u9032\u51fa\u5834\u4f9d\u64da\u3002</p>"},{"location":"example/documents110/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>inputs</code>\uff1a\u8a08\u7b97 VWAP \u6240\u9700\u7684\u50f9\u683c\u8207\u6210\u4ea4\u91cf\u8cc7\u6599\uff0c\u9810\u8a2d\u70ba <code>EquityPricing.close</code> \u8207 <code>EquityPricing.volume</code>\u3002  </li> <li><code>window_length</code>\uff1aVWAP \u7684\u89c0\u5bdf\u671f\u9593\uff08n \u65e5\uff09\u3002</li> </ul> <p><pre><code>VWAP(\n    inputs=[TWEquityPricing.close, TWEquityPricing.volume],\n    window_length=87\n)\n</code></pre> \u7bc4\u4f8b</p> <p>\u4ee5\u4e0b\u7bc4\u4f8b\u5efa\u7acb\u4e00\u500b Pipeline\uff0c\u8a08\u7b97\u6bcf\u6a94\u80a1\u7968\u904e\u53bb 87 \u5929\u7684 VWAP \u503c</p> <pre><code>from zipline.pipeline.factors import VWAP\n\ndef make_pipeline():\n    return Pipeline(\n        columns={\n            \"VWAP\": VWAP(\n                inputs=[TWEquityPricing.close, TWEquityPricing.volume],\n                window_length=87\n            )\n        }\n    )\n\nrun_pipeline(make_pipeline(), start_time, end_time)\n</code></pre>"},{"location":"example/documents111/","title":"WeightedAverageValue \u51fd\u6578\u4ecb\u7d39","text":"<p><code>WeightedAverageValue()</code> \u662f Zipline \u63d0\u4f9b\u7684\u4e00\u7a2e\u52a0\u6b0a\u8a08\u7b97\u56e0\u5b50\uff0c\u7528\u4f86\u8a08\u7b97\u5728\u6307\u5b9a\u671f\u9593\u5167\u67d0\u6578\u503c\u4ee5\u6210\u4ea4\u91cf\u52a0\u6b0a\u7684\u5e73\u5747\u503c\uff0c\u908f\u8f2f\u8207 VWAP \u985e\u4f3c\u3002</p> <p>\u8207 VWAP \u4e0d\u540c\u7684\u662f\uff0c\u6b64\u51fd\u6578\u53ef\u7528\u4f86\u5c0d\u4efb\u610f\u6b04\u4f4d\uff08\u5982\u6700\u9ad8\u50f9\u3001\u6700\u4f4e\u50f9\u7b49\uff09\u9032\u884c\u52a0\u6b0a\u5e73\u5747\u8655\u7406\uff0c\u66f4\u5177\u5f48\u6027\u3002</p>"},{"location":"example/documents111/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>inputs</code>\uff1a\u9700\u8981\u52a0\u6b0a\u7684\u6578\u503c\u6b04\u4f4d\u8207\u6210\u4ea4\u91cf\u6b04\u4f4d\uff0c\u4f8b\u5982 <code>[EquityPricing.high, EquityPricing.volume]</code>\u3002  </li> <li><code>window_length</code>\uff1a\u8a08\u7b97\u52a0\u6b0a\u5e73\u5747\u7684\u89c0\u5bdf\u671f\u9593\uff08n \u65e5\uff09\u3002</li> </ul> <p><pre><code>WeightedAverageValue(\n    inputs=[TWEquityPricing.high, TWEquityPricing.volume],\n    window_length=10\n)\n</code></pre> \u7bc4\u4f8b</p> <p>\u4ee5\u4e0b\u7bc4\u4f8b\u5efa\u7acb\u4e00\u500b Pipeline\uff0c\u8a08\u7b97\u6bcf\u6a94\u80a1\u7968\u904e\u53bb 10 \u5929\u5167\u7684\u6210\u4ea4\u91cf\u52a0\u6b0a\u6700\u9ad8\u50f9</p> <pre><code>from zipline.pipeline.factors import WeightedAverageValue\n\ndef make_pipeline():\n    return Pipeline(\n        columns={\n            \"WeightedAverageValue\": WeightedAverageValue(\n                inputs=[TWEquityPricing.high, TWEquityPricing.volume],\n                window_length=10\n            )\n        }\n    )\n\nrun_pipeline(make_pipeline(), start_time, end_time)\n</code></pre>"},{"location":"example/documents112/","title":"PercentChange \u51fd\u6578\u4ecb\u7d39","text":"<p><code>PercentChange()</code> \u662f Zipline \u63d0\u4f9b\u7684\u8b8a\u5316\u7387\u8a08\u7b97\u56e0\u5b50\uff0c\u7528\u4f86\u8a08\u7b97\u67d0\u8b8a\u6578\u5728\u6307\u5b9a\u6642\u9593\u7a97\u683c\u5167\u7684 \u767e\u5206\u6bd4\u8b8a\u5316\u7387\u3002</p> <p>\u5176\u8a08\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a</p> \\[ \\frac{new - old}{|old|} \\] <p>\u6b64\u51fd\u6578\u53ef\u7528\u65bc\u89c0\u5bdf\u5831\u916c\u8b8a\u52d5\u5e45\u5ea6\u6216\u5176\u4ed6\u6b04\u4f4d\u7684\u76f8\u5c0d\u8b8a\u5316\u3002</p>"},{"location":"example/documents112/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>inputs</code>\uff1a\u6b32\u89c0\u5bdf\u8b8a\u52d5\u7684\u8cc7\u6599\u6b04\u4f4d\uff08\u4f8b\u5982 <code>EquityPricing.close</code>\uff09\u3002  </li> <li><code>window_length</code>\uff1a\u8a08\u7b97\u767e\u5206\u6bd4\u8b8a\u5316\u7684\u89c0\u5bdf\u671f\u9593\uff08n \u65e5\uff09\uff0c\u9700\u5927\u65bc\u7b49\u65bc 2\u3002</li> </ul> <pre><code>PercentChange(\n    inputs=[TWEquityPricing.close],\n    window_length=2\n)\n</code></pre> <p>\u7bc4\u4f8b</p> <p>\u4ee5\u4e0b\u7bc4\u4f8b\u5efa\u7acb\u4e00\u500b Pipeline\uff0c\u8a08\u7b97\u6bcf\u6a94\u80a1\u7968\u8fd1 2 \u65e5\u7684\u50f9\u683c\u767e\u5206\u6bd4\u8b8a\u5316</p> <pre><code>from zipline.pipeline.factors import PercentChange\n\ndef make_pipeline():\n    return Pipeline(\n        columns={\n            \"PercentChange\": PercentChange(\n                inputs=[TWEquityPricing.close],\n                window_length=2\n            )\n        }\n    )\n\nrun_pipeline(make_pipeline(), start_time, end_time)\n</code></pre>"},{"location":"example/documents113/","title":"PeerCount \u51fd\u6578\u4ecb\u7d39","text":"<p><code>PeerCount()</code> \u662f Zipline \u63d0\u4f9b\u7684\u5206\u7d44\u7d71\u8a08\u56e0\u5b50\uff0c\u53ef\u6839\u64da\u67d0\u500b factor \u6216 classifier\uff0c\u7d71\u8a08 \u6bcf\u4e00\u7d44\u5225\u4e2d\u7684\u8cc7\u7522\u6578\u91cf\u3002</p> <p>\u5e38\u898b\u7528\u9014\u5305\u62ec\u4f9d\u7167\u5831\u916c\u7387\u3001\u4f30\u503c\u6216\u5176\u4ed6\u5206\u985e\u7d50\u679c\uff0c\u4e86\u89e3\u540c\u985e\u578b\u516c\u53f8\u5206\u5e03\u60c5\u6cc1\u3002\u4ee5\u4e0b\u4f8b\u4ee5\u5831\u916c\u7387\u7684\u56db\u5206\u4f4d\u6578\u70ba\u57fa\u6e96\u3002</p>"},{"location":"example/documents113/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>inputs</code>\uff1a\u4f5c\u70ba\u5206\u985e\u4f9d\u64da\u7684\u56e0\u5b50\uff08\u5982\u5831\u916c\u7387\u5206\u985e\uff09\u3002  </li> <li><code>window_length</code>\uff1a\u8a08\u7b97\u671f\u9593\uff08n \u65e5\uff09\u3002</li> </ul> <pre><code>PeerCount(\n    inputs=[Ret.quartiles()]\n)\n</code></pre> <p>\u7bc4\u4f8b</p> <p>\u4ee5\u4e0b\u7bc4\u4f8b\u5efa\u7acb\u4e00\u500b Pipeline\uff0c\u8a08\u7b97\u6bcf\u500b\u5831\u916c\u7387\u56db\u5206\u4f4d\u4e2d\u6709\u591a\u5c11\u516c\u53f8\u843d\u5165\u8a72\u5206\u7d44</p> <pre><code>from zipline.pipeline.factors import PeerCount, Returns\n\ndef make_pipeline():\n    Ret = Returns(inputs=[TWEquityPricing.close], window_length=2)\n    quarter = Ret.quartiles()\n\n    return Pipeline(\n        columns={\n            \"PeerCount\": PeerCount(\n                inputs=[quarter]\n            )\n        }\n    )\n\nrun_pipeline(make_pipeline(), start_time, end_time)\n</code></pre>"},{"location":"example/documents114/","title":"RateOfChangePercentage \u51fd\u6578\u4ecb\u7d39","text":"<p><code>RateOfChangePercentage()</code> \u662f Zipline \u63d0\u4f9b\u7684\u52d5\u80fd\u56e0\u5b50\uff0c\u7528\u4f86\u8a08\u7b97\u67d0\u8b8a\u6578\u5728\u6307\u5b9a\u671f\u9593\u5167\u7684 \u767e\u5206\u6bd4\u8b8a\u5316\u7387\uff08% ROC\uff09\u3002</p> <p>\u5176\u516c\u5f0f\u5982\u4e0b\uff1a</p> \\[ \\frac{\\text{\u5c3e} - \\text{\u982d}}{\\text{\u982d}} \\times 100 \\] <p>\u53ef\u7528\u65bc\u8861\u91cf\u8cc7\u7522\u50f9\u683c\u8b8a\u52d5\u7684\u5f37\u5ea6\u8207\u65b9\u5411\u3002</p>"},{"location":"example/documents114/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>inputs</code>\uff1a\u4f5c\u70ba\u8a08\u7b97\u4f9d\u64da\u7684\u50f9\u91cf\u8cc7\u6599\uff08\u5982 <code>EquityPricing.close</code>\uff09\u3002  </li> <li><code>window_length</code>\uff1a\u8b8a\u5316\u8a08\u7b97\u7684\u6642\u9593\u7a97\u683c\u9577\u5ea6\uff08n \u65e5\uff09\u3002</li> </ul> <pre><code>RateOfChangePercentage(\n    inputs=[TWEquityPricing.close],\n    window_length=10\n)\n</code></pre> <p>\u7bc4\u4f8b</p> <p>\u4ee5\u4e0b\u7bc4\u4f8b\u5efa\u7acb\u4e00\u500b Pipeline\uff0c\u8a08\u7b97\u6bcf\u6a94\u80a1\u7968\u5728\u904e\u53bb 10 \u5929\u7684\u767e\u5206\u6bd4\u8b8a\u5316\u7387</p> <pre><code>from zipline.pipeline.factors import RateOfChangePercentage\n\ndef make_pipeline():\n    return Pipeline(\n        columns={\n            \"RateOfChangePercentage\": RateOfChangePercentage(\n                inputs=[TWEquityPricing.close],\n                window_length=10\n            )\n        }\n    )\n\nrun_pipeline(make_pipeline(), start_time, end_time)\n</code></pre>"},{"location":"example/documents115/","title":"Aroon \u51fd\u6578\u4ecb\u7d39","text":"<p><code>Aroon()</code> \u662f Zipline \u63d0\u4f9b\u7684\u6280\u8853\u6307\u6a19\uff0c\u7528\u4f86\u8861\u91cf\u8cc7\u7522\u50f9\u683c\u8ddd\u96e2\u8fd1\u671f\u671f\u9ad8/\u4f4e\u9ede\u7684\u6642\u9593\uff0c\u8f38\u51fa\u4e00\u7d44\u4ecb\u65bc 0 \u5230 100 \u7684\u6578\u503c <code>(up, down)</code>\u3002</p> <p>\u5176\u8a08\u7b97\u65b9\u5f0f\u5982\u4e0b\uff1a</p> <ul> <li><code>up</code> = \u5f9e\u6700\u8fd1\u7684\u6700\u9ad8\u50f9\u4f4d\u7f6e\u9664\u4ee5 <code>(window_length - 1)</code>\uff0c\u518d\u4e58\u4e0a 100  </li> <li><code>down</code> = \u5f9e\u6700\u8fd1\u7684\u6700\u4f4e\u50f9\u4f4d\u7f6e\u9664\u4ee5 <code>(window_length - 1)</code>\uff0c\u518d\u4e58\u4e0a 100  </li> </ul> <p>\u5176\u4e2d\uff1a - <code>100</code> \u8868\u793a\u5728\u671f\u9593\u6700\u5f8c\u4e00\u5929\u51fa\u73fe\u6700\u9ad8/\u6700\u4f4e\u9ede - <code>0</code> \u8868\u793a\u5728\u671f\u9593\u7b2c\u4e00\u5929\u51fa\u73fe\u6700\u9ad8/\u6700\u4f4e\u9ede  </p>"},{"location":"example/documents115/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>inputs</code>\uff1a\u50f9\u683c\u6b04\u4f4d\uff0c\u9810\u8a2d\u70ba <code>[EquityPricing.high, EquityPricing.low]</code>\u3002  </li> <li><code>window_length</code>\uff1a\u89c0\u5bdf\u671f\u9593\uff08n \u65e5\uff09\u3002  </li> </ul> <pre><code>Aroon(\n    inputs=[TWEquityPricing.high, TWEquityPricing.low],\n    window_length=10,\n    mask=StaticSids([0])\n)\n</code></pre> <p>\u7bc4\u4f8b</p> <p>\u4ee5\u4e0b\u7bc4\u4f8b\u5efa\u7acb\u4e00\u500b Pipeline\uff0c\u5206\u5225\u8a08\u7b97\u6bcf\u652f\u80a1\u7968\u7684 Aroon up \u548c Aroon down \u6307\u6a19 <pre><code>from zipline.pipeline.factors import Aroon\nfrom zipline.pipeline.filters import StaticSids\n\ndef make_pipeline():\n    aroon = Aroon(\n        inputs=[TWEquityPricing.high, TWEquityPricing.low],\n        window_length=10,\n        mask=StaticSids([0])\n    )\n\n    return Pipeline(\n        columns={\n            \"up\": aroon.up,\n            \"down\": aroon.down\n        },\n        screen=StaticSids([0])\n    )\n\nrun_pipeline(make_pipeline(), start_time, end_time)\n</code></pre></p>"},{"location":"example/documents116/","title":"FastStochasticOscillator \u51fd\u6578\u4ecb\u7d39","text":"<p><code>FastStochasticOscillator()</code> \u662f Zipline \u63d0\u4f9b\u7684\u52d5\u80fd\u6307\u6a19\u4e4b\u4e00\uff0c\u8a08\u7b97\u8cc7\u7522\u5728\u4e00\u6bb5\u671f\u9593\u5167\u7684 \u5feb\u901f\u96a8\u6a5f\u6307\u6a19\uff08K \u503c\uff09\uff0c\u5176\u503c\u4ecb\u65bc 0 \u5230 100\u3002</p> <p>\u6b64\u6307\u6a19\u53ef\u7528\u4f86\u5224\u65b7\u8d85\u8cb7\u6216\u8d85\u8ce3\u72c0\u614b\uff1a - K \u503c\u9ad8\u65bc 80\uff0c\u53ef\u80fd\u51fa\u73fe\u8d85\u8cb7 - K \u503c\u4f4e\u65bc 20\uff0c\u53ef\u80fd\u51fa\u73fe\u8d85\u8ce3 - D \u503c\u5e38\u70ba K \u503c\u7684 3 \u65e5\u7c21\u55ae\u79fb\u52d5\u5e73\u5747\uff08SMA\uff09</p> <p>\u5176\u8a08\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a</p> \\[ \\frac{\\text{\u6536\u76e4\u50f9} - \\text{\u671f\u9593\u6700\u4f4e}}{\\text{\u671f\u9593\u6700\u9ad8} - \\text{\u671f\u9593\u6700\u4f4e}} \\times 100 \\]"},{"location":"example/documents116/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>inputs</code>\uff1a\u7528\u65bc\u8a08\u7b97\u7684\u50f9\u91cf\u6b04\u4f4d\uff0c\u9810\u8a2d\u70ba <code>[EquityPricing.close, EquityPricing.low, EquityPricing.high]</code>\u3002  </li> <li><code>window_length</code>\uff1a\u89c0\u5bdf\u671f\u9593\uff08n \u65e5\uff09\uff0c\u9810\u8a2d\u70ba 14\u3002</li> </ul> <p><pre><code>FastStochasticOscillator(\n    inputs=[TWEquityPricing.close, TWEquityPricing.low, TWEquityPricing.high],\n    window_length=10,\n    mask=StaticSids([0])\n)\n</code></pre> \u7bc4\u4f8b</p> <p>\u4ee5\u4e0b\u7bc4\u4f8b\u5efa\u7acb\u4e00\u500b Pipeline\uff0c\u8a08\u7b97\u6bcf\u652f\u80a1\u7968\u5728\u904e\u53bb 10 \u5929\u7684 Fast Stochastic Oscillator\uff08K \u503c\uff09</p> <pre><code>from zipline.pipeline.factors import FastStochasticOscillator\nfrom zipline.pipeline.filters import StaticSids\n\ndef make_pipeline():\n    return Pipeline(\n        columns={\n            \"FastStochasticOscillator\": FastStochasticOscillator(\n                inputs=[TWEquityPricing.close, TWEquityPricing.low, TWEquityPricing.high],\n                window_length=10,\n                mask=StaticSids([0])\n            )\n        },\n        screen=StaticSids([0])\n    )\n\nrun_pipeline(make_pipeline(), start_time, end_time)\n</code></pre>"},{"location":"example/documents117/","title":"TrueRange \u51fd\u6578\u4ecb\u7d39","text":"<p><code>TrueRange()</code> \u662f Zipline \u63d0\u4f9b\u7684\u6ce2\u52d5\u5ea6\u8a08\u7b97\u56e0\u5b50\uff0c\u7528\u4f86\u8861\u91cf\u8cc7\u7522\u7684 \u771f\u5be6\u6ce2\u52d5\u5e45\u5ea6\uff08True Range\uff09\uff0c\u53cd\u6620\u5e02\u5834\u50f9\u683c\u7684\u5287\u70c8\u7a0b\u5ea6\u3002</p> <p>\u5176\u8a08\u7b97\u65b9\u5f0f\u5982\u4e0b\uff1a \u5f9e\u4ee5\u4e0b\u4e09\u500b\u503c\u4e2d\u64c7\u5176\u6700\u5927\u8005\uff1a 1. \u4eca\u65e5\u6700\u9ad8\u50f9 \u2212 \u4eca\u65e5\u6700\u4f4e\u50f9 2. |\u4eca\u65e5\u6700\u9ad8\u50f9 \u2212 \u6628\u65e5\u6536\u76e4\u50f9| 3. |\u4eca\u65e5\u6700\u4f4e\u50f9 \u2212 \u6628\u65e5\u6536\u76e4\u50f9|  </p> <p>\u503c\u8d8a\u5927\u8868\u793a\u6ce2\u52d5\u6027\u8d8a\u5f37\u3002</p>"},{"location":"example/documents117/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>inputs</code>\uff1a\u7528\u65bc\u8a08\u7b97\u7684\u50f9\u91cf\u6b04\u4f4d\uff0c\u9810\u8a2d\u70ba <code>[EquityPricing.high, EquityPricing.low, EquityPricing.close]</code>\u3002  </li> <li><code>window_length</code>\uff1a\u89c0\u5bdf\u671f\u9593\uff0c\u76ee\u524d\u50c5\u652f\u63f4 <code>window_length = 2</code>\u3002</li> </ul> <pre><code>TrueRange(\n    inputs=[TWEquityPricing.high, TWEquityPricing.low, TWEquityPricing.close],\n    window_length=2,\n    mask=StaticSids([0])\n)\n</code></pre> <p>\u7bc4\u4f8b</p> <p>\u4ee5\u4e0b\u7bc4\u4f8b\u5efa\u7acb\u4e00\u500b Pipeline\uff0c\u8a08\u7b97\u6bcf\u652f\u80a1\u7968\u7684\u771f\u5be6\u6ce2\u52d5\u5e45\u5ea6</p> <pre><code>from zipline.pipeline.factors import TrueRange\nfrom zipline.pipeline.filters import StaticSids\n\ndef make_pipeline():\n    return Pipeline(\n        columns={\n            \"TrueRange\": TrueRange(\n                inputs=[TWEquityPricing.high, TWEquityPricing.low, TWEquityPricing.close],\n                window_length=2,\n                mask=StaticSids([0])\n            )\n        },\n        screen=StaticSids([0])\n    )\n\nrun_pipeline(make_pipeline(), start_time, end_time)\n</code></pre>"},{"location":"example/documents118/","title":"IchimokuKinkoHyo \u51fd\u6578\u4ecb\u7d39","text":"<p><code>IchimokuKinkoHyo()</code> \u662f Zipline \u63d0\u4f9b\u7684\u591a\u5143\u6280\u8853\u6307\u6a19\uff0c\u7528\u4f86\u8a08\u7b97\u5b8c\u6574\u7684 \u4e00\u76ee\u5747\u8861\u8868 \u7d44\u6210\u8981\u7d20\uff0c\u5305\u62ec\uff1a</p> <ul> <li><code>tenkan_sen</code> \u8f49\u63db\u7dda\uff1a\\((9\u65e5\u6700\u9ad8 + 9\u65e5\u6700\u4f4e)/2\\) </li> <li><code>kijun_sen</code> \u57fa\u6e96\u7dda\uff1a\\((26\u65e5\u6700\u9ad8 + 26\u65e5\u6700\u4f4e)/2\\) </li> <li><code>senkou_span_a</code> \u5148\u884c\u5e36 A\uff1a\u524d\u5169\u9805\u5e73\u5747  </li> <li><code>senkou_span_b</code> \u5148\u884c\u5e36 B\uff1a\\((52\u65e5\u6700\u9ad8 + 52\u65e5\u6700\u4f4e)/2\\) </li> <li><code>chikou_span</code> \u9072\u884c\u5e36\uff1a26 \u65e5\u524d\u7684\u6536\u76e4\u50f9  </li> </ul> <p>\u6b64\u6307\u6a19\u5e38\u7528\u65bc\u8da8\u52e2\u5224\u65b7\u8207\u652f\u6490\u963b\u529b\u5224\u5225\uff0c\u662f\u65e5\u7cfb\u6280\u8853\u5206\u6790\u7684\u91cd\u8981\u5de5\u5177\u3002</p>"},{"location":"example/documents118/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>inputs</code>\uff1a\u8f38\u5165\u8cc7\u6599\u6b04\u4f4d\uff0c\u9810\u8a2d\u70ba <code>[EquityPricing.high, EquityPricing.low, EquityPricing.close]</code>\u3002  </li> <li><code>window_length</code>\uff1a\u89c0\u5bdf\u671f\uff0c\u9810\u8a2d\u70ba 52\u3002  </li> <li><code>tenkan_sen_length</code>\uff1a\u8f49\u63db\u7dda\u5929\u6578\u3002  </li> <li><code>kijun_sen_length</code>\uff1a\u57fa\u6e96\u7dda\u5929\u6578\u3002  </li> <li><code>chikou_span_length</code>\uff1a\u9072\u884c\u5e36\u5929\u6578\u3002</li> </ul> <pre><code>IchimokuKinkoHyo(\n    inputs=[TWEquityPricing.high, TWEquityPricing.low, TWEquityPricing.close],\n    window_length=52,\n    mask=StaticSids([0])\n)\n</code></pre> <p>\u7bc4\u4f8b</p> <p>\u4ee5\u4e0b\u7bc4\u4f8b\u5efa\u7acb\u4e00\u500b Pipeline\uff0c\u8f38\u51fa\u4e00\u76ee\u5747\u8861\u8868\u7684\u4e94\u689d\u7dda\uff1a\u8f49\u63db\u7dda\u3001\u57fa\u6e96\u7dda\u3001\u5148\u884c A\u3001\u5148\u884c B \u8207\u9072\u884c\u5e36 <pre><code>from zipline.pipeline.factors import IchimokuKinkoHyo\nfrom zipline.pipeline.filters import StaticSids\n\ndef make_pipeline():\n    Ich = IchimokuKinkoHyo(\n        inputs=[TWEquityPricing.high, TWEquityPricing.low, TWEquityPricing.close],\n        window_length=52,\n        mask=StaticSids([0])\n    )\n\n    return Pipeline(\n        columns={\n            \"tenkan_sen\": Ich.tenkan_sen,\n            \"kijun_sen\": Ich.kijun_sen,\n            \"senkou_span_a\": Ich.\n            senkou_span_a,\n            \"senkou_span_b\": Ich.senkou_span_b,\n            \"chikou_span\": Ich.chikou_span\n        },\n        screen=StaticSids([0])\n    )\n\nrun_pipeline(make_pipeline(), start_time, end_time)\n</code></pre></p>"},{"location":"example/documents119/","title":"All \u51fd\u6578\u4ecb\u7d39","text":"<p>\u5728 n \u65e5\u5167\uff0c\u82e5\u4e00\u8cc7\u7522\u6bcf\u65e5\u7686\u7b26\u5408\u689d\u4ef6\u503c\uff0c\u8a72\u8cc7\u7522\u70ba True\u3002</p> <p>Parameters: - inputs (zipline.pipeline.data.Dataset.BoundColumn \u6216 boolean)   \u8cc7\u7522\u50f9\u91cf\u8cc7\u8a0a\u8207\u689d\u4ef6\u503c\u3002 - window_length (int)   \u6c7a\u5b9a n \u65e5\u7684\u9577\u5ea6\u3002 </p> <p>```python from zipline.pipeline.filters import All from zipline.pipeline import Pipeline from zipline.TQresearch.tej_pipeline import run_pipeline from zipline.pipeline.data import TWEquityPricing import pandas as pd</p> <p>def make_pipeline():     return Pipeline(         columns = {             \"ALL\": All(                 inputs=[TWEquityPricing.close.latest &gt; 40],  # \u689d\u4ef6\uff1a\u524d\u4e00\u65e5\u6536\u76e4\u50f9 &gt; 40 \u5247 True                 window_length=1             )         }     )</p>"},{"location":"example/documents119/#start-end","title":"\u5047\u8a2d start \u8207 end \u5df2\u5b9a\u7fa9\uff0c\u4f8b\u5982\uff1a","text":""},{"location":"example/documents119/#start-pdtimestamp2018-02-06-tzutc","title":"start = pd.Timestamp(\"2018-02-06\", tz='utc')","text":""},{"location":"example/documents119/#end-pdtimestamp2022-02-06-tzutc","title":"end = pd.Timestamp(\"2022-02-06\", tz='utc')","text":"<p>run_pipeline(make_pipeline(), start, end)</p>"},{"location":"example/documents119/#pipeline-built-in-filters-filters","title":"Pipeline built-in filters (\u5167\u5efaFilters)","text":"<p>\u672c\u6587\u4ecb\u7d39\u5e38\u7528\u7684\u5167\u5efa Filters\u3002</p>"},{"location":"example/documents119/#menu","title":"Menu","text":"<ul> <li>All: \u5728 n \u65e5\u5167\uff0c\u82e5\u4e00\u8cc7\u7522\u6bcf\u65e5\u7686\u7b26\u5408\u689d\u4ef6\u503c\uff0c\u8a72\u8cc7\u7522\u70ba True\u3002</li> <li>Any: \u5728 n \u65e5\u5167\uff0c\u82e5\u4e00\u8cc7\u7522\u4efb\u4e00\u65e5\u7b26\u5408\u689d\u4ef6\u503c\uff0c\u8a72\u8cc7\u7522\u70ba True\u3002</li> <li>AtLeastN: \u5728 m \u65e5\u5167\uff0c\u82e5\u4e00\u8cc7\u7522\u81f3\u5c11\u6709 n \u65e5\u7b26\u5408\u689d\u4ef6\u503c\uff0c\u8a72\u8cc7\u7522\u70ba True\u3002</li> <li>AllPresent: \u5728 n \u65e5\u5167\uff0c\u82e5\u6bcf\u65e5\u7686\u6709\u6307\u5b9a\u8cc7\u6599\uff0c\u8a72\u8cc7\u7522\u70ba True\u3002</li> <li>StaticAssets: \u6307\u5b9a\u7279\u5b9a\u8cc7\u7522\u70ba True\u3002</li> <li>StaticSids: \u6307\u5b9a\u7279\u5b9a\u8cc7\u7522\u70ba True\u3002</li> <li>sids (int, iterable)</li> <li>SingleAsset: \u6307\u5b9a\u7279\u5b9a\u8cc7\u7522\u70ba True\u3002 </li> <li>assets (zipline.assets.Asset, iterable) </li> <li>top/bottom: \u5c07\u6700\u5927 / \u6700\u5c0f\u7684 N \u9805\u6a19\u70ba True\uff0c\u5176\u9918\u70ba False\u3002</li> <li>percentile_between: \u5c07\u6578\u503c\u5927\u5c0f\u4ecb\u65bc\u5169\u500b\u767e\u5206\u4f4d\u6578\uff08\u542b\uff09\u4e4b\u9593\u7684\u8cc7\u6599\u6a19\u70ba True\uff0c\u5176\u9918\u70ba False\u3002</li> <li>if_else: \u5728 if_else \u51fd\u6578\u524d\u6703\u5148\u7d66\u5b9a\u4e00\u500b\u689d\u4ef6\uff0c\u82e5\u7b26\u5408\u689d\u4ef6\u5247\u56de\u50b3 if_true \u7684\u503c\uff0c\u4e0d\u7b26\u5408\u689d\u4ef6\u5247\u56de\u50b3 if_false \u7684\u503c\u3002</li> </ul>"},{"location":"example/documents120/","title":"Any \u51fd\u6578\u4ecb\u7d39","text":"<p>\u5728 n \u65e5\u5167\uff0c\u82e5\u4e00\u8cc7\u7522\u4efb\u4e00\u65e5\u7b26\u5408\u689d\u4ef6\u503c\uff0c\u8a72\u8cc7\u7522\u70ba True\u3002</p> <p>Parameters: - inputs (zipline.pipeline.data.Dataset.BoundColumn \u6216 boolean)   \u8cc7\u7522\u50f9\u91cf\u8cc7\u8a0a\u8207\u689d\u4ef6\u503c\u3002 - window_length (int)   \u6c7a\u5b9a n \u65e5\u7684\u9577\u5ea6\u3002</p> <pre><code>from zipline.pipeline.filters import Any\nfrom zipline.pipeline import Pipeline\n\ndef make_pipeline():\n    return Pipeline(\n        columns = {\n            \"Any\": Any(\n                inputs=[TWEquityPricing.close.latest &gt; 40],\n                window_length=10\n            )\n        }\n    )\n\nrun_pipeline(make_pipeline(), start, end)\n</code></pre>"},{"location":"example/documents121/","title":"AtLeastN \u51fd\u6578\u4ecb\u7d39","text":"<p>\u5728 m \u65e5\u5167\uff0c\u82e5\u4e00\u8cc7\u7522\u81f3\u5c11\u6709 n \u65e5\u7b26\u5408\u689d\u4ef6\u503c\uff0c\u8a72\u8cc7\u7522\u70ba True\u3002</p> <p>Parameters: - inputs (zipline.pipeline.data.Dataset.BoundColumn \u6216 boolean)   \u8cc7\u7522\u50f9\u91cf\u8cc7\u8a0a\u8207\u689d\u4ef6\u503c\u3002 - window_length (int)   \u6c7a\u5b9a m \u65e5\u7684\u9577\u5ea6\u3002 - N (int)   \u81f3\u5c11\u9700\u8981\u7b26\u5408\u689d\u4ef6\u7684\u5929\u6578\u3002</p> <pre><code>from zipline.pipeline.filters import AtLeastN\nfrom zipline.pipeline import Pipeline\n\ndef make_pipeline():\n    return Pipeline(\n        columns = {\n            \"AtLeastN\": AtLeastN(\n                inputs=[TWEquityPricing.close.latest &gt; 40],\n                window_length=10,\n                N=2\n            )\n        }\n    )\n\nrun_pipeline(make_pipeline(), start, end)\n</code></pre>"},{"location":"example/documents122/","title":"AllPresent \u51fd\u6578\u4ecb\u7d39","text":"<p>\u5728 n \u65e5\u5167\uff0c\u82e5\u6bcf\u65e5\u7686\u6709\u6307\u5b9a\u8cc7\u6599\uff0c\u8a72\u8cc7\u7522\u70ba True\u3002</p> <p>Parameters: - inputs (zipline.pipeline.data.Dataset.BoundColumn \u6216 boolean)   \u8cc7\u7522\u50f9\u91cf\u8cc7\u8a0a\u3002 - window_length (int)   \u6c7a\u5b9a n \u65e5\u7684\u9577\u5ea6\u3002</p> <pre><code>from zipline.pipeline.filters import AllPresent\nfrom zipline.pipeline import Pipeline\n\ndef make_pipeline():\n    return Pipeline(\n        columns = {\n            \"AllPresent\": AllPresent(\n                inputs=[TWEquityPricing.close], \n                window_length=10\n            )\n        }\n    )\n\n# \u4f8b\u5982\u67e5\u8a62\u7279\u5b9a\u65e5\u671f\u7684\u8cc7\u6599\uff1a\nrun_pipeline(make_pipeline(), start, end).loc[\"2018-05-04\"]\n# \u6ce8\u610f\uff1a\u82e5\u67d0\u8cc7\u7522\u672a\u65bc n \u65e5\u5167\u6bcf\u65e5\u7686\u6709\u8cc7\u6599\uff0c\u5247\u5176\u7d50\u679c\u70ba False\u3002\n</code></pre>"},{"location":"example/documents123/","title":"StaticAssets \u51fd\u6578\u4ecb\u7d39","text":"<p>\u6307\u5b9a\u7279\u5b9a\u8cc7\u7522\u70ba True\uff0c\u5176\u5b83\u8cc7\u7522\u70ba False\u3002</p> <p>Parameters: - assets (iterable of zipline.assets.Asset)   \u6307\u5b9a\u8cc7\u7522\u5217\u8868\u3002</p> <p>Go to Menu</p> <p>```python from zipline.pipeline.filters import StaticAssets from zipline.pipeline import Pipeline from zipline.api import symbol, attach_pipeline, pipeline_output import pandas as pd</p>"},{"location":"example/documents123/#assets-bundle","title":"\u6b64\u8655\u5047\u8a2d assets \u4f86\u81ea\u524d\u9762 bundle \u7684\u8cc7\u6599\uff1a","text":""},{"location":"example/documents123/#assets-assets-bundleasset_finderretrieve_allsids","title":"assets \u5df2\u7d93\u5b9a\u7fa9\uff0c\u4f8b\u5982\uff1aassets = bundle.asset_finder.retrieve_all(sids)","text":"<p>def make_pipeline():     return Pipeline(         columns = {             \"StaticAssets\": StaticAssets(                 assets = assets[4:8]             )         }     )</p> <p>def initialize(context):     attach_pipeline(make_pipeline(), 'my_pipe')</p> <p>def handle_data(context, data):     pipe = pipeline_output('my_pipe')     print(\"=\" * 100)     print(pipe)</p> <p>def analyze(context, perf):     pass</p> <p>run_pipeline(make_pipeline(), pd.Timestamp(\"2019-01-02\", tz='utc'), pd.Timestamp(\"2019-01-02\", tz='utc'))</p>"},{"location":"example/documents124/","title":"StaticSids \u51fd\u6578\u4ecb\u7d39","text":"<p>\u6307\u5b9a\u7279\u5b9a\u8cc7\u7522\uff08\u4ee5\u5176 sid\uff09\u70ba True\u3002</p> <p>Parameters: - sids (iterable of int)   \u6307\u5b9a\u8cc7\u7522\u7684 sid \u5217\u8868\u3002</p> <p>Go to Menu</p> <p>```python from zipline.pipeline.filters import StaticSids from zipline.pipeline import Pipeline from zipline.api import symbol, attach_pipeline, pipeline_output import pandas as pd</p> <p>def make_pipeline():     return Pipeline(         columns = {             \"StaticSids\": StaticSids(                 sids = range(4,8)  # \u4f8b\u5982\uff1a\u9078\u51fa sid 4 \u81f3 7 \u7684\u8cc7\u7522             )         }     )</p> <p>def initialize(context):     attach_pipeline(make_pipeline(), 'my_pipe')</p> <p>def handle_data(context, data):     pipe = pipeline_output('my_pipe')     print(\"=\" * 100)     print(pipe)</p> <p>def analyze(context, perf):     pass</p> <p>run_pipeline(make_pipeline(), pd.Timestamp(\"2019-01-01\", tz='utc'), pd.Timestamp(\"2019-01-02\", tz='utc'))</p>"},{"location":"example/documents125/","title":"SingleAsset \u51fd\u6578\u4ecb\u7d39","text":"<p>\u6307\u5b9a\u55ae\u4e00\u7279\u5b9a\u8cc7\u7522\u70ba True\uff0c\u5176\u9918\u70ba False\u3002</p> <p>Parameters: - asset (zipline.assets.Asset)   \u6307\u5b9a\u7684\u55ae\u4e00\u8cc7\u7522\u3002</p> <p>```python from zipline.pipeline.filters import SingleAsset from zipline.pipeline import Pipeline from zipline.api import symbol, attach_pipeline, pipeline_output import pandas as pd</p> <p>def make_pipeline():     return Pipeline(         columns = {             \"SingleAsset\": SingleAsset(                 asset = assets[4]  # \u5047\u8a2d assets[4] \u70ba\u6307\u5b9a\u8cc7\u7522             )         }     )</p> <p>def initialize(context):     attach_pipeline(make_pipeline(), 'my_pipe')</p> <p>def handle_data(context, data):     pipe = pipeline_output('my_pipe')     print(\"=\" * 100)     print(pipe)</p> <p>def analyze(context, perf):     pass</p> <p>run_pipeline(make_pipeline(), pd.Timestamp(\"2019-01-02\", tz='utc'), pd.Timestamp(\"2019-01-02\", tz='utc'))</p>"},{"location":"example/documents126/","title":"top/bottom \u51fd\u6578\u4ecb\u7d39","text":"<p>\u5c07\u6700\u5927/\u6700\u5c0f\u7684 N \u9805\u6a19\u70ba True\uff0c\u5176\u9918\u70ba False\u3002</p> <p>Parameters: - N (int)   \u8981\u6a19\u8a18\u7684\u6578\u91cf\u3002 - mask (zipline.pipeline.Filter, optional)   \u82e5\u6307\u5b9a\uff0c\u50c5\u5c0d mask \u70ba True \u7684\u9805\u76ee\u9032\u884c\u6392\u540d\uff1b\u9810\u8a2d\u70ba None\u3002 - groupby (zipline.pipeline.Classifier, optional)   \u82e5\u6307\u5b9a\uff0c\u5247\u6bcf\u500b\u5206\u985e\u5167\u53d6\u6700\u5927\uff0f\u6700\u5c0f\u7684 N \u9805\uff1b\u5fc5\u9808\u70ba <code>Classifier</code>\u3002</p> <p>Go to Menu</p>"},{"location":"example/documents126/#top","title":"\u7bc4\u4f8b \u2013 top","text":"<p>\u5728\u4ee5\u4e0b\u7bc4\u4f8b\u4e2d\uff1a  - \u5148\u5229\u7528 30 \u65e5\u7c21\u55ae\u79fb\u52d5\u5e73\u5747\u7dda (SMA) \u5c07\u80a1\u7968\u5206\u6210\u56db\u500b\u7b49\u7d1a\uff08quartiles\uff09\u3002 - \u63a5\u8457\u5229\u7528 SimpleBeta \u7be9\u9078\u51fa beta \u6700\u9ad8\u7684 2 \u6a94\u80a1\u7968\uff0c\u4f46\u5148\u4ee5 AverageDollarVolume \u7be9\u51fa\u65e5\u5747\u6210\u4ea4\u984d\u8d85\u904e 5 \u5104\u7684\u80a1\u7968\uff0c - \u4e26\u900f\u904e groupby \u5c0d\u6bcf\u500b SMA \u7b49\u7d1a\u5167\u5206\u5225\u9078\u51fa top 2 \u80a1\u7968\u3002</p> <p>```python assets_ex_IR0001 = [i for i in assets if i != bundle.asset_finder.lookup_symbol('IR0001', as_of_date=None)]</p> <p>def make_pipeline():     # \u8a08\u7b97 30 \u65e5\u7c21\u55ae\u79fb\u52d5\u5e73\u5747     sma = SimpleMovingAverage(inputs=[TWEquityPricing.close], window_length=30)     # \u5c07 SMA \u4f9d quartiles \u5206\u70ba 4 \u7d1a     sma_quartiles = sma.quartiles(mask=StaticAssets(assets_ex_IR0001))</p> <pre><code># \u8a08\u7b97 beta (\u4ee5 IR0001 \u70ba\u57fa\u6e96)\nsbeta = SimpleBeta(\n    target=bundle.asset_finder.lookup_symbol('IR0001', as_of_date=None),\n    regression_length=300,\n    allowed_missing_percentage=0.25\n)\n\n# \u5e73\u5747\u6210\u4ea4\u984d\nadv = AverageDollarVolume(window_length=10)\ntop_dollar = adv &gt; 500000000\n# \u5c0d\u6bcf\u500b SMA quartile \u5167\u9078\u51fa beta \u6700\u9ad8\u7684 2 \u6a94\u80a1\u7968\ntop_beta = sbeta.top(N=2, mask=top_dollar &amp; StaticAssets(assets_ex_IR0001), groupby=sma_quartiles)\n\nreturn Pipeline(\n    columns={\n        'SMA': sma,\n        'SMA Quartile': sma_quartiles,\n        'Average Dollar Volume': adv,\n        'Simple Beta': sbeta,\n        'top_beta': top_beta\n    }\n)\n</code></pre>"},{"location":"example/documents126/#pipeline-top_beta-true-beta-2","title":"\u57f7\u884c pipeline\uff0c\u7d50\u679c\u4e2d top_beta \u70ba True \u7684\u5373\u70ba\u5404\u7b49\u7d1a\u5167 beta \u6700\u9ad8\u7684 2 \u6a94","text":"<p>result = run_pipeline(make_pipeline(), end, end) result.sort_values(by=['SMA Quartile', 'Simple Beta'], ascending=[False, False])</p>"},{"location":"example/documents127/","title":"percentile_between \u51fd\u6578\u4ecb\u7d39","text":"<p>\u5c07\u6578\u503c\u5927\u5c0f\u4ecb\u65bc\u6307\u5b9a\u767e\u5206\u4f4d\u6578\uff08\u542b\uff09\u4e4b\u9593\u7684\u8cc7\u6599\u6a19\u70ba True\uff0c\u5176\u9918\u6a19\u70ba False\u3002</p> <p>Parameters: - min_percentile (float)   \u4e0b\u9650\uff0c\u4ecb\u65bc [0.0, 100.0]\u3002 - max_percentile (float)   \u4e0a\u9650\uff0c\u4ecb\u65bc [0.0, 100.0]\u3002 - mask (zipline.pipeline.Filter, optional)   \u82e5\u6307\u5b9a\uff0c\u50c5\u91dd\u5c0d mask = True \u7684\u9805\u76ee\u9032\u884c\u6392\u540d\uff1b\u9810\u8a2d\u70ba None\u3002</p>"},{"location":"example/documents127/#_1","title":"\u7bc4\u4f8b","text":"<p>\u7be9\u9078\u51fa\u65e5\u5831\u916c\u7387\u4e2d\uff0c\u4f4d\u65bc\u524d 20%\uff08\u5373 80 \u81f3 100 \u767e\u5206\u4f4d\uff09\u7684\u80a1\u7968\uff1a ```python def make_pipeline():     daily_r = DailyReturns(inputs=[TWEquityPricing.close])     top_r = daily_r.percentile_between(                 min_percentile=80,                 max_percentile=100,                 mask=StaticAssets(assets_ex_IR0001)             )     return Pipeline(         columns={             'Daily Return': daily_r,             'top_r': top_r         }     )</p>"},{"location":"example/documents127/#pipeline-4-20-20-true","title":"\u57f7\u884c pipeline \u4e26\u6aa2\u8996\u7d50\u679c\uff0c\u61c9\u6709 4 \u6a94 (20% * 20 \u6a94) \u80a1\u7968\u88ab\u6a19\u70ba True","text":"<p>run_pipeline(make_pipeline(), start, end)</p>"},{"location":"example/documents128/","title":"if_else(if_true, if_false) \u51fd\u6578\u4ecb\u7d39","text":"<p>\u6b64\u51fd\u6578\u5148\u7d66\u5b9a\u4e00\u500b\u5e03\u6797\u689d\u4ef6\uff0c\u82e5\u689d\u4ef6\u70ba True \u5247\u56de\u50b3 if_true \u7684\u503c\uff0c\u5426\u5247\u56de\u50b3 if_false \u7684\u503c\u3002</p> <p>Parameters: - if_true (zipline.pipeline.term.ComputableTerm)   \u689d\u4ef6\u6210\u7acb\u6642\u56de\u50b3\u7684\u503c\u3002 - if_false (zipline.pipeline.term.ComputableTerm)   \u689d\u4ef6\u4e0d\u6210\u7acb\u6642\u56de\u50b3\u7684\u503c\u3002</p>"},{"location":"example/documents128/#if_else","title":"\u7bc4\u4f8b \u2013 if_else","text":"<p>\u4f8b\u5982\uff0c\u4e0b\u5217\u7bc4\u4f8b\u6aa2\u67e5\u5b50\u7522\u696d\u5225 (Sub_Industry) \u662f\u5426\u70ba\u7a7a\u5b57\u4e32\uff0c\u82e5\u70ba\u7a7a\u5247\u56de\u50b3\u4e3b\u7522\u696d\u5225 (Industry)\uff1b\u5426\u5247\u56de\u50b3\u5b50\u7522\u696d\u5225\uff1a <pre><code>ind = TQAltDataSet.Sub_Industry.latest.eq('').if_else(\n          TQAltDataSet.Industry.latest,\n          TQAltDataSet.Sub_Industry.latest\n      )\n</code></pre> \u4f60\u4e5f\u53ef\u4ee5\u5c07\u5176\u7d0d\u5165 Pipeline\uff1a <pre><code>def make_pipeline():\n    Industry = TQAltDataSet.Industry.latest\n    Sub_Industry = TQAltDataSet.Sub_Industry.latest\n    check = TQAltDataSet.Sub_Industry.latest.eq('')\n    # \u82e5 Sub_Industry \u70ba\u7a7a\uff0c\u5247\u56de\u50b3 Industry\uff0c\u5426\u5247\u56de\u50b3 Sub_Industry\n    ind = check.if_else(Industry, Sub_Industry)\n\n    return Pipeline(\n        columns={\n            '\u4e3b\u7522\u696d\u5225': Industry,\n            '\u5b50\u7522\u696d\u5225': Sub_Industry,\n            '\u662f\u5426\u7b26\u5408\u689d\u4ef6': check,\n            '\u56de\u50b3\u7522\u696d': ind\n        }\n    )\n\nrun_pipeline(make_pipeline(), end, end).head(10)\n</code></pre></p>"},{"location":"example/documents129/","title":"Pipeline built-in classifier","text":"<p>\u5728 TQuant Lab: Filters \u4e2d\uff0c\u6211\u5011\u4ecb\u7d39\u5230\u5c0d <code>Factors</code> \u548c <code>Classifier</code> \u4f7f\u7528\u6bd4\u8f03\u904b\u7b97\u5b50\uff08comparison operators\uff0c&lt;, &lt;=, !=, ==, &gt;, &gt;=\uff09\u5c31\u53ef\u4ee5\u5275\u5efa <code>Filters</code>\u3002</p> <p>\u672c\u6587\u5c07\u4ecb\u7d39\uff1a</p> <ul> <li>Classifier \u7684\u57fa\u672c\u6982\u5ff5\u8207\u4f7f\u7528\u65b9\u5f0f  </li> <li>\u5982\u4f55\u7528 <code>quartiles</code>\u3001<code>quantiles</code> \u7b49\u65b9\u6cd5\u5c0d\u80a1\u7968\u5206\u985e  </li> <li>Pipeline \u7684\u5be6\u969b\u7bc4\u4f8b\u8207\u57f7\u884c\u7d50\u679c</li> </ul>"},{"location":"example/documents129/#_1","title":"\u532f\u5165\u5957\u4ef6\u8207\u521d\u59cb\u5316\u8a2d\u5b9a","text":"<p><pre><code>import os\nimport pandas as pd\nimport numpy as np\n\ntej_key = 'your key'\napi_base = 'https://api.tej.com.tw'\n\nos.environ['TEJAPI_KEY'] = tej_key\nos.environ['TEJAPI_BASE'] = api_base\n</code></pre> <pre><code>from zipline.pipeline import Pipeline\nfrom zipline.TQresearch.tej_pipeline import run_pipeline\nfrom zipline.pipeline.data import TWEquityPricing\nfrom zipline.data.data_portal import bundles\n\nfrom zipline.pipeline.factors import *\nfrom zipline.pipeline.filters import *\n</code></pre> <pre><code>StockList = \\\n['1227', '1234', '1304', '1314', '1434', '1440', '1476', '1504', '1507', '1590', '1605', '1704', '1710', '1717', '1723', '1789',\n '1802', '1907', '2006', '2015', '2049', '2101', '2103', '2106', '2204', '2227', '2327', '2337', '2344', '2356', '2360', '2362',\n '2379', '2384', '2385', '2392', '2395', '2448', '2449', '2450', '2451', '2489', '2501', '2504', '2511', '2542', '2545', '2548',\n '2603', '2606', '2607', '2608', '2609', '2610', '2615', '2618', '2707', '2723', '2727', '2809', '2812', '2823', '2834', '2845',\n '2847', '2855', '2884', '2887', '2888', '2889', '2903', '2915', '3034', '3037', '3044', '3149', '3189', '3406', '3702', '4938',\n '4958', '5522', '5871', '6005', '6176', '6239', '6269', '6286', '8008', '8046', '8078', '8422', '9904', '9907', '9914', '9917', '9921',\n '9933', '9940', '9945', '2458', '5264', '2206', '1201', '2347', '3231', '5534', '6116', '9910', '1477', '2353', '6271', '1319',\n '1722', '2059', '3060', '3474', '3673', '2393', '2376', '2439', '3682', '1262', '2201', '2377', '3576', '2352', '2838', '8150',\n '2324', '2231', '8454', '2833', '6285', '6409', '1536', '1702', '2313', '2498', '2867', '6415', '6456', '9938', '2383', '4137', '6452',\n '1707', '1589', '2849', '6414', '8464', '2355', '2345', '3706', '2023', '2371', '1909', '2633', '3532', '9941', '2492', '3019',\n '3443', '4915', '4943', '1229', '2441', '2027', '3026', '1210', '2104', '2456', '5269', '8341', '2354', '3005', '3481', '6669',\n '2409', '3023', '6213', '2404', '3533', '6278', '6592', '3653', '3661', '3665', '2301', '3714', '2883', '2890', '6531', '1904',\n '2014', '2105', '2108', '2474', '2637', '6781', '1102', '4919', '1402', '3035', '3036', '4961', '6719', '6770', '2368', '1795',\n '6550', '6789', '3017', '1101', '1216', '1301', '1303', '1326', '2002', '2207', '2303', '2308', '2311', '2317', '2325', '2330',\n '2357', '2382', '2412', '2454', '2801', '2880', '2881', '2882', '2885', '2886', '2891', '2892', '2912', '3008', '3045', '3697',\n '4904', '5880', '6505', '2408', '3711', '5876','IR0001']\n\nstart = '2020-01-03'\nend = '2023-05-18'\n\nstart_dt = pd.Timestamp(start, tz='utc')\nend_dt = pd.Timestamp(end, tz='utc')\n\nos.environ['mdate'] = start+' '+end\nos.environ['ticker'] = ' '.join(StockList)\n\n!zipline ingest -b tquant\n</code></pre></p>"},{"location":"example/documents129/#quartilesquintilesdecilesquantiles","title":"quartiles\uff0fquintiles\uff0fdeciles\uff0fquantiles","text":"<p>Pipeline \u6709\u4e0b\u5217\u529f\u80fd\u53ef\u4ee5\u5efa\u7acb Classifier\uff0c\u4ee5\u4fbf\u5206\u985e\u80a1\u7968\uff1a</p> <ul> <li><code>quartiles</code>\uff1a\u56db\u5206\u4f4d\uff08\u5c07 Factor \u4f9d\u6578\u503c\u4f4e\u81f3\u9ad8\u8f49\u63db\u6210 0, 1, 2, 3 \u56db\u500b\u7d1a\u8ddd\uff0cNaN \u7684\u8cc7\u6599\u6703\u662f -1\uff09\u3002</li> <li><code>quintiles</code>\uff1a\u4e94\u5206\u4f4d\uff08\u5c07 Factor \u4f9d\u6578\u503c\u4f4e\u81f3\u9ad8\u8f49\u63db\u6210 0, 1, 2, 3, 4 \u4e94\u500b\u7d1a\u8ddd\uff0cNaN \u7684\u8cc7\u6599\u6703\u662f -1\uff09\u3002</li> <li><code>deciles</code>\uff1a\u5341\u5206\u4f4d\uff08\u5c07 Factor \u4f9d\u6578\u503c\u4f4e\u81f3\u9ad8\u8f49\u63db\u6210 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 \u5341\u500b\u7d1a\u8ddd\uff0cNaN \u7684\u8cc7\u6599\u6703\u662f -1\uff09\u3002</li> <li><code>quantiles</code>\uff1a\u81ea\u8a02\u5206\u4f4d\uff0cNaN \u7684\u8cc7\u6599\u6703\u662f -1\u3002</li> </ul>"},{"location":"example/documents129/#parameters","title":"Parameters","text":"<ul> <li><code>mask</code> (<code>zipline.pipeline.Filter</code>, optional)\uff1a\u9810\u8a2d\u70ba\u7121\uff0c\u82e5\u52a0\u4e0a mask\uff0c\u50c5\u6703\u5c0d <code>mask=True</code> \u7684\u9805\u76ee\u9032\u884c\u6392\u540d\uff0c<code>mask=False</code> \u90e8\u5206\u7686\u6703\u88ab\u6a19\u70ba -1\u3002</li> <li><code>bins</code> (<code>int</code>)\uff1a\u50c5\u9650 <code>quantiles</code> \u4f7f\u7528\uff0c\u7528\u4f86\u81ea\u8a02\u5206\u7d44\u6578\u3002</li> </ul>"},{"location":"example/documents129/#notes","title":"Notes","text":"<p>\u70ba\u4e86\u907f\u514d\u524d\u8996\u504f\u5dee\uff0cClassifier \u8a08\u7b97\u6642\u82e5\u4f7f\u7528\u5230 <code>zipline.pipeline.data.TWEquityPricing</code> \u7684\u6b04\u4f4d\uff08\u5982 <code>TWEquityPricing.open</code>\uff0f<code>high</code>\uff0f<code>low</code>\uff0f<code>close</code>\uff0f<code>volume</code>\uff09\uff0c\u4e0d\u6703\u4f7f\u7528\u7576\u5929\u8cc7\u6599\uff0c\u800c\u6703\u6539\u7528**\u524d\u4e00\u500b\u4ea4\u6613\u65e5**\u7684\u8cc7\u6599\u3002</p> <p>\u4f8b\u5982\uff1a<code>window_length = 10</code> \u6642\uff0c\u82e5\u7576\u5929\u7684\u6642\u9593\u9ede\u70ba <code>t</code>\uff0c\u5247\u6703\u4f7f\u7528 <code>t-1 ~ t-10</code> \u7684 <code>close</code>\u3002</p> <p>\u8a08\u7b97\u9019\u4e9b Built-in Classifier \u6642\uff0c\u82e5\u4f7f\u7528 <code>TWEquityPricing</code> \u7684\u6b04\u4f4d\uff0c\u4e5f\u6703**\u8003\u616e\u9664\u6b0a\u606f\u8abf\u6574**\u3002</p>"},{"location":"example/documents129/#examplesquartiles-quantiles","title":"Examples\uff1aquartiles &amp; quantiles","text":"<p>\u4ee5\u4e0b\u7bc4\u4f8b\u5c55\u793a\u5982\u4f55\u4f7f\u7528 <code>quartiles</code> \u8207 <code>quantiles</code>\uff1a</p> <pre><code>sma = SimpleMovingAverage(inputs=[TWEquityPricing.close], window_length=30)\nsma_quartiles = sma.quartiles(mask=(sma &gt; 200) &amp; (StaticAssets(assets_ex_IR0001)))\n</code></pre> <p>\u628a\u4e09\u5341\u65e5\u6536\u76e4\u50f9\u79fb\u52d5\u5e73\u5747\uff08SMA\uff09&gt; 200 \u7684\u80a1\u7968\u5206\u56db\u7b49\u5206\uff1bSMA &lt;= 200 \u7684\u80a1\u7968\u6216 symbol = 'IR0001' ( \u52a0\u6b0a\u80a1\u50f9\u5831\u916c\u6307\u6578 )\uff0c\u4e0d\u7d0d\u5165\u6392\u540d\u4e26\u6a19\u4e0a-1\u3002</p> <p><pre><code>vol = TWEquityPricing.volume.latest\nvol_quantiles = vol.quantiles(bins = 15, mask=StaticAssets(assets_ex_IR0001))\n</code></pre> \u5247\u662f\u628a\u6628\u65e5\u6210\u4ea4\u91cf\u5206\u70ba 15 \u7b49\u5206\uff080-14\uff09\uff0c\u4e26\u5c07 'IR0001' \u6a19\u4e0a-1\u3002</p> <p><pre><code>bundle_name = 'tquant'\nbundle = bundles.load(bundle_name)\nbenchmark_asset = bundle.asset_finder.lookup_symbol('IR0001',as_of_date = None)\n\ndef make_pipeline():\n\n    sids = bundle.asset_finder.equities_sids\n    assets = bundle.asset_finder.retrieve_all(sids)    \n    assets_ex_IR0001 = [i for i in assets if i!= bundle.asset_finder.lookup_symbol('IR0001', as_of_date=None)]\n\n#     quartiles\n    sma = SimpleMovingAverage(inputs = [TWEquityPricing.close], window_length = 30)\n    sma_quartiles = sma.quartiles(mask = (sma &gt; 200) &amp; (StaticAssets(assets_ex_IR0001)))\n\n#     quantiles\n    vol = TWEquityPricing.volume.latest   # .latest\u51fa\u4f86\u7684\u503c\u6703\u662f\u672a\u8abf\u6574\n    vol_quantiles = vol.quantiles(bins = 15, mask=StaticAssets(assets_ex_IR0001))\n\n    return Pipeline(\n        columns={\n            'SMA': sma,\n            'vol': vol,\n            'SMA Quartile': sma_quartiles,\n            'Volume Quantile':vol_quantiles\n        }\n    )\n</code></pre> \u5728 Pipeline \u8f38\u51fa\u7684 result \u8cc7\u6599\u8868\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230 'IR0001' \u5728 SMA Quartile \u53ca Volume Quantile \u5169\u6b04\u7686\u88ab\u6a19\u4e0a-1\u3002</p> <pre><code>result = run_pipeline(make_pipeline(), end, end)\nresult\n</code></pre> <p>\u67e5\u770b\u4ea4\u6613\u91cf\u5f88\u9ad8\u7684\u53f0\u7a4d\u96fb ( 2330 )\uff0c\u53ef\u4ee5\u767c\u73fe\u5176 Volume Quantile \u88ab\u5206\u5728\u6700\u9ad8\u4e00\u7d1a ( 14 )\u3002</p> <pre><code>result.loc[result.index.get_level_values(1).map(lambda x: x.symbol) == '2330']\n</code></pre> <p>\u67e5\u770b 2023-05-18 \u4ea4\u6613\u91cf\u6700\u9ad8\u7684 10 \u6a94\u8cc7\u7522 ( 'IR0001' \u9664\u5916 )\uff0c\u5176 Volume Quantile \u7686\u70ba 14\u3002</p> <pre><code>result.sort_values(by = 'vol', ascending = False).head(11)\n</code></pre>"},{"location":"example/documents13/","title":"\u56de\u6e2c\u7a0b\u5f0f\u57fa\u672c\u7d50\u69cb\u8aaa\u660e","text":"<p>\u4ee5\u4e0b\u70ba Zipline \u7b56\u7565\u56de\u6e2c\u4e2d\u5e38\u898b\u7684\u5e7e\u500b\u4e3b\u8981\u51fd\u6578\u8207\u7269\u4ef6\u7684\u7c21\u8981\u4ecb\u7d39\uff1a</p>"},{"location":"example/documents13/#1-initializecontext","title":"1. <code>initialize(context)</code>","text":"<p>\u521d\u59cb\u5316\u7b56\u7565\u8a2d\u5b9a\uff0c\u5b9a\u7fa9\u521d\u59cb\u8b8a\u6578\u3001\u80a1\u7968\u6c60\u3001\u6392\u7a0b\u7b49\u5167\u5bb9\u3002 - \u57f7\u884c\u6642\u6a5f\uff1a \u56de\u6e2c\u4e00\u958b\u59cb\u57f7\u884c\u4e00\u6b21\u3002 - \u7bc4\u4f8b\u7528\u9014\uff1a \u6307\u5b9a\u8cc7\u7522\u3001\u8a2d\u5b9a rebalance \u6392\u7a0b\u3002</p>"},{"location":"example/documents13/#2-handle_datacontext-data","title":"2. <code>handle_data(context, data)</code>","text":"<p>\u4e3b\u8981\u7684\u4ea4\u6613\u908f\u8f2f\u8655\u7406\u51fd\u6578\uff0c\u6bcf\u500b\u4ea4\u6613\u65e5\u90fd\u6703\u57f7\u884c\u3002 - \u57f7\u884c\u6642\u6a5f\uff1a \u6bcf\u500b market open \u6642\u57f7\u884c\u3002 - \u7bc4\u4f8b\u7528\u9014\uff1a \u5224\u65b7\u662f\u5426\u4e0b\u55ae\u3001\u66f4\u65b0\u6307\u6a19\u3001\u57f7\u884c\u8cb7\u8ce3\u3002</p>"},{"location":"example/documents13/#3-before_trading_startcontext-data","title":"3. <code>before_trading_start(context, data)</code>","text":"<p>\u6bcf\u65e5\u958b\u76e4\u524d\u57f7\u884c\u7684\u908f\u8f2f\uff0c\u7528\u4f86\u8655\u7406\u4e0d\u4f9d\u8cf4\u50f9\u683c\u7684\u908f\u8f2f\u3002 - \u57f7\u884c\u6642\u6a5f\uff1a \u6bcf\u500b\u4ea4\u6613\u65e5\u958b\u76e4\u524d\u3002 - \u7bc4\u4f8b\u7528\u9014\uff1a \u66f4\u65b0\u9078\u80a1\u540d\u55ae\u3001\u5132\u5b58\u8cc7\u6599\u72c0\u614b\u3002</p>"},{"location":"example/documents13/#4-analyzecontext-perf","title":"4. <code>analyze(context, perf)</code>","text":"<p>\u56de\u6e2c\u7d50\u675f\u5f8c\u7684\u5206\u6790\u51fd\u6578\u3002 - \u57f7\u884c\u6642\u6a5f\uff1a \u56de\u6e2c\u6574\u9ad4\u57f7\u884c\u5b8c\u7562\u5f8c\u3002 - \u7bc4\u4f8b\u7528\u9014\uff1a \u8f38\u51fa\u7e3e\u6548\u5831\u8868\u3001\u7e6a\u88fd\u5716\u8868\u3001\u56de\u9867\u7e3e\u6548\u3002</p>"},{"location":"example/documents13/#5-context","title":"5. <code>context</code>","text":"<p>Zipline \u81ea\u52d5\u50b3\u5165\u7684\u7269\u4ef6\uff0c\u7528\u4f86\u5132\u5b58\u7b56\u7565\u7684\u72c0\u614b\u3002 - \u7528\u9014\uff1a \u5132\u5b58\u8b8a\u6578\u8207\u72c0\u614b\uff0c\u5982\u6301\u80a1\u7d00\u9304\u3001\u53c3\u6578\u8a2d\u5b9a\u7b49\u3002</p>"},{"location":"example/documents13/#6-run_algorithm","title":"6. <code>run_algorithm(...)</code>","text":"<p>\u57f7\u884c\u6574\u9ad4 Zipline \u7b56\u7565\u56de\u6e2c\u7684\u4e3b\u8981\u51fd\u6578\u3002 - \u7528\u9014\uff1a \u7d50\u5408\u4e0a\u8ff0\u5404\u51fd\u6578\u4e26\u56de\u50b3\u56de\u6e2c\u5831\u8868\u8207\u7e3e\u6548\u8cc7\u6599\u3002</p>"},{"location":"example/documents13/#initialize","title":"Initialize \u51fd\u5f0f","text":"<p><code>initialize</code> \u70ba\u69cb\u5efa zipline \u4ea4\u6613\u7b56\u7565\u7684\u91cd\u8981\u51fd\u5f0f\uff0c\u6703\u5728\u56de\u6e2c\u958b\u59cb\u524d\u88ab\u547c\u53eb\u4e00\u6b21\uff0c\u4e3b\u8981\u4efb\u52d9\u70ba\u8a2d\u5b9a\u56de\u6e2c\u74b0\u5883\uff0c\u5e38\u898b\u7528\u65bc\u8a2d\u5b9a\u6ed1\u50f9\u6216\u624b\u7e8c\u8cbb\u3002\u5206\u5225\u53ef\u4ee5\u4f7f\u7528:</p> <ol> <li> <p>zipline.api.set_slippage</p> <p>\u8a2d\u5b9a\u6ed1\u50f9\u6a21\u5f0f\uff0czipline \u5171\u63d0\u4f9b\u56db\u7a2e\u6ed1\u50f9\u8a08\u7b97\u65b9\u6cd5\uff0c\u8a73\u8acb\u8acb\u898b\u5f8c\u7e8c\u6559\u5b78-zipline slippage\u3002</p> </li> <li> <p>zipline.api.set_commission</p> <p>\u8a2d\u5b9a\u624b\u7e8c\u8cbb\u6a21\u5f0f\uff0czipline \u5171\u63d0\u4f9b\u4e09\u7a2e\u624b\u7e8c\u8cbb\u8a08\u7b97\u65b9\u6cd5\uff0c\u8a73\u8acb\u8acb\u898b\u5f8c\u7e8c\u6559\u5b78-zipline commission\u3002</p> </li> </ol> <p>\u5e38\u898b\u7684\u5beb\u6cd5\u5982\u4e0b: <pre><code>def initialize(context):\n    set_slippage(slippage.FixedSlippage())\n    set_commission(commission.PerShare(cost=0.00285))\n</code></pre> \u9664\u6b64\u4e4b\u5916\uff0c\u6211\u5011\u53ef\u4ee5\u6ce8\u610f\u5230 initialize \u542b\u6709\u4e00\u500b\u53c3\u6578 context\uff0ccontext \u70ba\u4e00\u500b\u547d\u540d\u7a7a\u9593 (namespace)\uff0c\u53ef\u4ee5\u5728\u5132\u5b58\u5404\u7a2e\u81ea\u5b9a\u7fa9\u4e4b\u8b8a\u6578\u4e26\u4e14\u5728\u6bcf\u6b21\u4ea4\u6613\u65e5\u4e2d\u5faa\u74b0\u547c\u53eb\u3002\u8209\u4f8b\u4f86\u8aaa\uff0c\u6211\u5011\u8a2d\u7f6e\u4e00\u500b\u8b8a\u6578 (context.day = 0) \u4f86\u8a08\u7b97\u4ea4\u6613\u65e5\u5929\u6578\u8207\u4e00\u500b\u8b8a\u6578 (context.has_ordered = False) \u7d00\u9304\u662f\u5426\u5df2\u7d93\u6301\u6709\u53f0\u7a4d\u96fb\u80a1\u7968\u3002 <pre><code>def initialize(context):\n    context.day = 0\n    context.has_ordered = False\n    set_slippage(slippage.FixedSlippage())\n    set_commission(commission.PerShare(cost=0.00285))\n</code></pre></p> <pre><code>from zipline.api import set_slippage, set_commission\nfrom zipline.finance import slippage, commission\n\ndef initialize(context):\n    context.day = 0\n    context.has_ordered = False\n    set_slippage(slippage.FixedSlippage())\n    set_commission(commission.PerShare(cost=0.00285))\n</code></pre>"},{"location":"example/documents135/","title":"Pipeline DataFrameLoader - Pipeline API with Custom Data","text":"<p><code>DataFrameLoader</code> \u5141\u8a31\u5c07\u5ba2\u88fd\u5316\u7684\u6578\u64da\u900f\u904e DataFrame \u5c0e\u5165\u81f3 pipeline \u4e2d\uff0c\u672c\u7bc4\u4f8b\u5c07\u6f14\u793a <code>DataFrameLoader</code> \u7684\u7528\u6cd5\u3002</p>"},{"location":"example/documents135/#imports-settings","title":"Imports &amp; Settings","text":"<pre><code>import os\nimport pandas as pd\n\nos.environ['TEJAPI_BASE'] = 'https://api.tej.com.tw'\nos.environ['TEJAPI_KEY'] = 'YOUR KEY'\n\n\nfrom zipline.pipeline import Pipeline\nfrom zipline.pipeline.loaders import EquityPricingLoader\nfrom zipline.pipeline.loaders.frame import DataFrameLoader\nfrom zipline.pipeline.data import Column, DataSet, TQAltDataSet, EquityPricing\nfrom zipline.pipeline.engine import SimplePipelineEngine\nfrom zipline.pipeline.domain import TW_EQUITIES\n\nfrom zipline.data.data_portal import bundles\nfrom zipline.data.run_ingest import simple_ingest\n\nfrom zipline.sources.TEJ_Api_Data import get_universe\n\nfrom TejToolAPI.TejToolAPI import get_history_data\n</code></pre>"},{"location":"example/documents135/#_1","title":"\u7372\u53d6\u5916\u90e8\u8cc7\u6599\uff0c\u4e26\u9032\u884c\u6574\u7406","text":""},{"location":"example/documents135/#tquant-bundle","title":"\u8f09\u5165\u5148\u524d\u5df2\u5c0e\u5165\u7684 tquant bundle","text":"<ul> <li>\u82e5\u5c1a\u672a\u57f7\u884c tquant bundle ingest \u7684\u6d41\u7a0b\uff0c\u8acb\u5148\u57f7\u884c\u4ee5\u4e0b simple_ingest \u7a0b\u5f0f\u3002</li> <li><code>bundles.load</code> \u51fd\u5f0f\u8ca0\u8cac\u5f9e\u5148\u524d\u5df2\u7d93 ingest \u7684 bundle \u4e2d\u8f09\u5165\u6578\u64da\uff0c\u4f7f\u4f7f\u7528\u8005\u80fd\u5920\u5728 Zipline \u74b0\u5883\u4e2d\u5229\u7528 <code>AssetFinder</code> \u5b58\u53d6\u8b49\u5238 <code>SID</code>\uff08Security Identifier\uff09\u3002</li> </ul> <pre><code>start = '2020-01-03'\nend = '2025-02-07'\n\nstart_dt = pd.Timestamp(start, tz='utc')\nend_dt = pd.Timestamp(end, tz='utc')\n\npool = get_universe(start, end, idx_id=['IX0002'])\n\n#simple_ingest(name = 'tquant', tickers = pool, start_date = start , end_date = end)\n</code></pre> <pre><code>bundle_name = 'tquant'\nbundle = bundles.load(bundle_name)\n</code></pre>"},{"location":"example/documents135/#symbols","title":"\u53d6\u5f97\u8b49\u5238\u6a19\u7684\uff08Symbols\uff09","text":"<p>\u5728 Zipline \u4e2d\uff0c<code>AssetFinder</code> \u662f\u4e00\u500b\u5c08\u9580\u8ca0\u8cac\u7ba1\u7406\u8cc7\u7522\uff08<code>Asset</code>\uff09\u8cc7\u8a0a\u7684\u5de5\u5177\uff0c\u63d0\u4f9b\u67e5\u627e\u548c\u6aa2\u7d22\u8b49\u5238\u6a19\u7684\u7684\u529f\u80fd\u3002\u4ee5\u4e0b\u56db\u884c\u7a0b\u5f0f\u78bc\u5206\u5225\u57f7\u884c\uff1a 1. \u53d6\u5f97 bundle \u4e2d\u6240\u6709\u80a1\u7968\u7684 <code>SID</code>\u3002 2. \u900f\u904e SID \u53d6\u5f97\u5c0d\u61c9\u7684 <code>Asset</code> \u7269\u4ef6\u3002 3. \u900f\u904e <code>Asset</code> \u7269\u4ef6\u53d6\u5f97\u4ea4\u6613\u4ee3\u78bc\uff08<code>symbol</code>\uff09\u3002 4. \u5efa\u7acb <code>symbol</code> mapping <code>SID</code> \u7684\u5c0d\u7167\u3002</p> <pre><code>sids = bundle.asset_finder.equities_sids\nassets = bundle.asset_finder.retrieve_all(sids)\nsymbols = [i.symbol for i in assets]\nsymbol_map = dict(zip(symbols, sids))\n</code></pre>"},{"location":"example/documents135/#tej-tool-api","title":"\u5229\u7528 TEJ TOOL API \u7372\u53d6\u8cc7\u6599","text":"<p>\u9019\u908a\u53d6\u5f97\u5916\u8cc7\u8cb7\u8ce3\u8d85\u5f35\u6578\uff08<code>Qfii_Diff_Vol</code>\uff09\u8cc7\u6599\u4f5c\u70ba\u793a\u7bc4\u3002</p> <pre><code>custom_data = get_history_data(\n    ticker=symbols,\n    columns=['Qfii_Diff_Vol'],\n    start=start,\n    end=end,\n    transfer_to_chinese=False\n)\n</code></pre> <pre><code>custom_data.head()\n</code></pre> <p>\u6574\u7406\u5916\u90e8\u8cc7\u6599\u4ee5\u7b26\u5408 <code>DataFrameLoader</code> \u8981\u6c42\u7684\u683c\u5f0f - \u5c07\u5916\u90e8\u8cc7\u6599\u4f5c\u8f49\u7f6e\uff0c\u4e00\u500b\u6b04\u4f4d\u6574\u7406\u70ba\u4e00\u500b DataFrame\u3002 - \u63a5\u8457\u5c07\u5916\u90e8\u8cc7\u6599\u7684 coid \u66ff\u63db\u6210 <code>SID</code>\u3002 - \u6700\u5f8c\u5c07\u5916\u90e8\u8cc7\u6599\u7684 mdate \u8a2d\u5b9a\u70ba UTC \u6642\u5340\u3002</p> <p>\u8a3b\uff1a\u6b64\u8655\u8cc7\u6599\u63a1\u7528**\u4e0d\u5e73\u79fb**\u7684\u65b9\u5f0f\u9032\u884c\u8655\u7406</p> <pre><code>transform_data = (\n    custom_data\n    .set_index(['coid', 'mdate'])['Qfii_Diff_Vol']\n    .unstack('coid')\n    .rename(columns=symbol_map, errors='raise') # errors = 'raise' \u6703\u5728\u9047\u5230\u932f\u8aa4\u6642\u62cb\u51fa\u7570\u5e38\uff0c\u907f\u514d bundle \u8207 custom_data \u8cc7\u7522\u4e0d\u4e00\u81f4\n    .tz_localize('UTC')\n)\n</code></pre> <pre><code>transform_data.head()\n</code></pre>"},{"location":"example/documents135/#custom-dataset","title":"\u5b9a\u7fa9\u81ea\u8a02\u6578\u64da\u96c6\uff08Custom Dataset\uff09","text":"<p>\u5728 Zipline \u4e2d\uff0c\u6211\u5011\u53ef\u4ee5\u900f\u904e\u81ea\u8a02\u6578\u64da\u96c6\uff08Custom Dataset\uff09\uff0c\u5c07\u984d\u5916\u7684\u6b04\u4f4d\u8207 tquant bundle \u6578\u64da\u5408\u4f75\uff0c\u4ee5\u64f4\u5145\u56de\u6e2c\u6578\u64da\u7684\u61c9\u7528\u7bc4\u570d\u3002</p> <p>\u5728 Zipline Pipeline \u4e2d\uff0c<code>DataSet</code> \u7531\u5169\u500b\u4e3b\u8981\u90e8\u5206\u7d44\u6210\uff1a - \u4e00\u7d44 Column \u7269\u4ef6\uff1a\u63cf\u8ff0\u6578\u64da\u96c6\u5167\u53ef\u67e5\u8a62\u7684\u6578\u64da\u6b04\u4f4d\u3002 - \u4e00\u500b Domain \u7269\u4ef6\uff1a\u63cf\u8ff0\u8a72\u6578\u64da\u96c6\u9069\u7528\u7684\u8cc7\u7522\uff08assets\uff09\u548c\u4ea4\u6613\u65e5\u66c6\uff08calendar\uff09\u3002</p>"},{"location":"example/documents135/#dataset","title":"\u5b9a\u7fa9 <code>DataSet</code> \u7684\u6b65\u9a5f","text":"<ol> <li> <p>\u5b9a\u7fa9 <code>Column</code>\uff08\u6b04\u4f4d\uff09</p> <ul> <li> <p><code>Column</code> \u4ee3\u8868 <code>DataSet</code> \u5167\u7684\u6578\u64da\u6b04\u4f4d\uff0c\u6bcf\u500b <code>Column</code> \u9700\u8981\u6307\u5b9a\u4e00\u500b numpy \u8cc7\u6599\u578b\u5225\uff08<code>np.dtype</code>\uff09\uff0c\u7528\u4f86\u63cf\u8ff0\u6578\u64da\u683c\u5f0f\u3002\u5e38\u7528\u7684 type \u5982\u4e0b\uff1a</p> <ul> <li>\u4f7f\u7528 <code>float</code> \u8868\u793a\u6578\u503c\u578b\uff08Numeric\uff09\u6578\u64da\u3002\u7531\u65bc NumPy \u4e0d\u539f\u751f\u652f\u63f4\u5e36\u6709\u7f3a\u5931\u503c\u7684 <code>int</code> \u578b\u5225\uff0c\u5efa\u8b70\u5c0d\u6240\u6709\u6578\u503c\u578b\u6578\u64da\u4f7f\u7528 <code>float</code>\uff0c\u5373\u4f7f\u8a72\u6578\u64da\u6982\u5ff5\u4e0a\u662f\u6574\u6578\u3002\u9019\u6a23\u53ef\u4ee5\u5229\u7528 <code>NaN</code>\uff08Not a Number\uff09\u4f5c\u70ba\u81ea\u7136\u7684\u7f3a\u5931\u503c\uff0c\u4e26\u7372\u5f97\u66f4\u597d\u7684\u6578\u64da\u8655\u7406\u80fd\u529b\u3002</li> <li>\u4f7f\u7528 <code>object</code> \u5132\u5b58\u5b57\u4e32\u985e\u578b\uff08String\uff09\u6578\u64da\u3002</li> <li>\u4f7f\u7528 <code>int</code> \u8868\u793a\u985e\u5225\u578b\uff08Categorical\uff09\u6578\u64da\u3002\u6574\u6578\u578b\u5225\uff08<code>int</code>\uff09\u9700\u8981\u986f\u5f0f\u6307\u5b9a missing_value\uff0c\u4f8b\u5982 -1\uff0c\u7528\u4f86\u6a19\u8a18\u7576\u67d0\u500b\u8b49\u5238\u5728\u7279\u5b9a\u65e5\u671f\u6c92\u6709\u503c\u6642\u7684\u9810\u8a2d\u503c\u3002</li> <li>\u4f7f\u7528 <code>bool</code> \u8868\u793a\u5e03\u6797\u578b\uff08Boolean\uff09\u6578\u64da\u3002</li> </ul> <pre><code># \u4e00\u500b\u7c21\u6613\u7684\u7bc4\u4f8b\nclass CustomDataset(DataSet):\n    # float\n    shares_outstanding = Column(float)\n\n    # object\n    industry = Column(object)\n\n    # int\n    mch_prd = Column(int, missing_value=-1)\n\n    # bool\n    is_suspend = Column(bool)\n</code></pre> </li> </ul> </li> <li> <p>\u5b9a\u7fa9 <code>Domain</code>\uff08\u9069\u7528\u7bc4\u570d\uff09</p> <ul> <li>\u7279\u5b9a <code>Domain</code>\uff08\u5982 <code>TW_EQUITIES</code>\uff09\uff1a\u7576\u6578\u64da\u4f86\u81ea\u7279\u5b9a\u5e02\u5834\u6642\uff0c\u53ef\u900f\u904e <code>domain</code> \u5c6c\u6027\u6307\u5b9a\u9069\u7528\u7bc4\u570d\u3002</li> </ul> </li> </ol> <p>\u4ee5\u4e0b\u7bc4\u4f8b\u5b9a\u7fa9\u4e86\u4e00\u500b <code>CustomDataset</code> \u985e\u5225\uff0c\u5b83\u7e7c\u627f\u81ea <code>zipline.pipeline.DataSet</code>\uff0c\u4e26\u5305\u542b\u4e00\u500b\u578b\u5225\u70ba float \u7684 <code>zipline.pipeline.Column</code>\uff0c\u9069\u7528\u65bc <code>TW_EQUITIES</code> domain\u3002\uff08\u8a3b\uff1a\u53ef\u540c\u6642\u7d0d\u5165\u591a\u500b\u4e0d\u540c<code>Column</code>\uff09</p> <pre><code>class CustomDataset(DataSet):\n    Qfii_Diff_Vol = Column(dtype=float)\n    domain = TW_EQUITIES\n</code></pre>"},{"location":"example/documents135/#pipeline-loaders","title":"\u5b9a\u7fa9 Pipeline Loaders","text":"<p>\u5728 Zipline Pipeline \u4e2d\uff0c<code>PipelineLoader</code> \u8ca0\u8cac\u8f09\u5165 Pipeline \u6240\u9700\u7684\u6578\u64da\u3002\u6211\u5011\u53ef\u4ee5\u4f7f\u7528 <code>DataFrameLoader</code> \u4f86\u5f9e pandas.DataFrame \u8b80\u53d6\u6578\u64da\uff0c\u4e26\u8b93 Pipeline \u53d6\u5f97\u9019\u4e9b\u6578\u64da\u9032\u884c\u8a08\u7b97\u3002</p> <p>\u4ee5\u4e0b\u4ee3\u78bc\u5efa\u7acb\u4e00\u500b\u5b57\u5178 <code>Custom_loader</code>\uff1a - \u5b57\u5178\u7684key\u662f <code>Column</code> \u7269\u4ef6\uff0c\u8a72\u7269\u4ef6\u5305\u542b\u8a72\u6b04\u4f4d\u7684 metadata\u3002 - \u5b57\u5178\u7684 value \u662f <code>DataFrameLoader</code> \u7269\u4ef6\uff0c\u9700\u50b3\u5165\u5169\u500b\u53c3\u6578\uff1a<code>column</code>\uff08<code>Column</code>\u7269\u4ef6\uff09\u53ca <code>baseline</code>\uff08\u8cc7\u6599\uff09\u3002</p> <pre><code>Custom_loader= {CustomDataset.Qfii_Diff_Vol: DataFrameLoader(column=CustomDataset.Qfii_Diff_Vol, baseline=transform_data)}\nCustom_loader\n</code></pre> <pre><code>CustomDataset.columns\n</code></pre>"},{"location":"example/documents135/#pipeline-engine","title":"\u5efa\u7acb Pipeline engine\uff0c\u4e26\u57f7\u884c\u8a08\u7b97","text":"<ul> <li>\u5728 Zipline Pipeline \u4e2d\uff0c\u6211\u5011\u9700\u8981\u5efa\u7acb Pipeline engine \u4f86\u57f7\u884c\u5ba2\u88fd\u5316\u6578\u64da\u7684\u67e5\u8a62\uff0c\u4e26\u5c07\u5ba2\u88fd\u5316\u6b04\u4f4d\u52a0\u5165 Pipeline \u4ee5\u4f9b\u7b56\u7565\u958b\u767c\u4f7f\u7528\u3002</li> <li>\u5728\u5efa\u69cb Pipeline engine \u6642\uff0c\u6211\u5011\u9808\u5148\u5b9a\u7fa9 <code>choose_loader</code> \u51fd\u5f0f\uff1a<ul> <li>\u5728 Zipline Pipeline \u6846\u67b6\u4e2d\uff0c\u7576 Pipeline \u9700\u8981\u6578\u64da\u6642\uff0c\u5b83\u6703\u6839\u64da loadable term\uff08\u53ef\u8f09\u5165\u7684\u6578\u64da\u9805\u76ee\uff0c\u5982 <code>Column</code>\uff09\u4f86\u67e5\u627e\u5c0d\u61c9\u7684 <code>PipelineLoader</code>\u3002\u6211\u5011\u53ef\u4ee5\u64b0\u5beb\u4e00\u500b\u51fd\u5f0f\uff0c\u6839\u64da\u8f38\u5165\u7684 term \u56de\u50b3\u9069\u7576\u7684 <code>PipelineLoader</code> \u4f86\u8f09\u5165\u5c0d\u61c9\u7684\u6578\u64da\u3002</li> <li><code>choose_loader</code> \u51fd\u5f0f\u5c07\u6703\u78ba\u8a8d\u8a72\u6b04\u4f4d\u662f\u5426\u5728 <code>CustomDataset.columns</code> \u4e2d\uff0c\u82e5 column \u5b58\u5728\uff0c\u5247\u56de\u50b3\u6211\u5011\u524d\u9762\u5efa\u7acb\u7684 <code>Custom_loader</code> \u81f3 Pipeline engine\u3002</li> </ul> </li> </ul> <pre><code># Loader for pricing\npricing_loader = EquityPricingLoader.without_fx(bundle.equity_daily_bar_reader, bundle.adjustment_reader)\n\n# Define the function for the get_loader parameter\ndef choose_loader(column):\n    if column in CustomDataset.columns:\n        return Custom_loader[column]\n    elif column.unspecialize() in EquityPricing.columns:\n         return pricing_loader\n    else:\n        raise Exception('Column not available')\n\n# Create a Pipeline engine\nengine = SimplePipelineEngine(\n    get_loader = choose_loader,\n    asset_finder = bundle.asset_finder,\n    default_domain = TW_EQUITIES\n)\n</code></pre> <p>\u73fe\u5728\uff0c\u6211\u5011\u5c07\u5728 make_pipeline() \u51fd\u5f0f\u4e2d\u5be6\u4f8b\u5316\uff08instantiate\uff09\u6211\u5011\u7684\u6578\u64da\uff0c\u4e26\u5c07\u5176\u52a0\u5165 Pipeline</p> <pre><code>def make_pipeline():\n    qfii_custom = CustomDataset.Qfii_Diff_Vol.latest\n    close = EquityPricing.close.latest\n    longs = qfii_custom.top(10)\n\n    return Pipeline(\n        columns={\n            'qfii_custom': qfii_custom,\n            'close': close,\n            'longs': longs\n        }\n    )\n</code></pre> <p>\u6700\u5f8c\uff0c\u57f7\u884c Pipeline \u6578\u64da\u8a08\u7b97\uff08\u5f9e start_date \u5230 end_date\uff09</p> <p>\u8a3b\uff1a\u82e5\u8981\u4f7f\u7528 CustomDataset \u4f86\u57f7\u884c\u8a08\u7b97\uff0c\u5fc5\u9808\u4f7f\u7528 <code>SimplePipelineEngine.run_pipeline</code>\uff0c\u800c\u4e0d\u80fd\u4f7f\u7528 <code>zipline.TQresearch.tej_pipeline.run_pipeline</code></p> <pre><code>result = engine.run_pipeline(make_pipeline(), start_dt, end_dt)\nresult.head()\n</code></pre>"},{"location":"example/documents135/#custom-loader","title":"\u5229\u7528 custom loader \u9032\u884c\u56de\u6e2c","text":"<p>\u5c07\u5148\u524d\u5efa\u7acb\u7684 Custom_loader \u50b3\u5165 <code>run_algorithm</code> \u51fd\u5f0f\u7684 <code>custom_loader</code> \u53c3\u6578\u4e2d\u3002</p> <pre><code>from zipline import run_algorithm\nfrom zipline.utils.calendar_utils import get_calendar\nfrom zipline.api import (\n    attach_pipeline,\n    order,\n    pipeline_output,\n    schedule_function,\n    date_rules,\n    set_slippage,\n    set_commission,\n    order_target,\n    order_target_percent\n)\nfrom zipline.finance.commission import Custom_TW_Commission\nfrom zipline.finance.slippage import VolumeShareSlippage\nfrom zipline.sources.TEJ_Api_Data import get_Benchmark_Return\n\n\ncapital_base = 1e6\ncalendar_name = 'TEJ'\n\n# Get benchmark returns\nBindex = get_Benchmark_Return(start=start_dt, end=end_dt, symbol='IR0001').sort_index(ascending=True).tz_convert('utc')\n\ndef initialize(context):\n    set_commission(Custom_TW_Commission())\n    set_slippage(VolumeShareSlippage())\n    attach_pipeline(make_pipeline(), 'my_pipeline')\n    schedule_function(rebalance, date_rules.month_end())\n\ndef before_trading_start(context, data):\n    context.pipeline_data = pipeline_output('my_pipeline')\n\ndef rebalance(context, data):\n\n    pipeline_data = context.pipeline_data\n    longs = pipeline_data[pipeline_data['longs']==True].index.tolist()\n\n    if len(longs) &gt; 0:\n        ratio = 1 / len(longs)\n        for asset in longs:\n            order_target_percent(asset, ratio)\n\n        positions = context.portfolio.positions.keys()\n        for asset in set(positions) - set(longs):\n            order_target(asset, 0)\n\n\n# Running a Backtest\nresults = run_algorithm(\n    start=start_dt,\n    end=end_dt,\n    initialize=initialize,\n    before_trading_start=before_trading_start,\n    capital_base=capital_base,\n    data_frequency='daily',\n    benchmark_returns =Bindex,\n    bundle=bundle_name,\n    trading_calendar=get_calendar(calendar_name),\n    custom_loader=Custom_loader\n)\n</code></pre> <pre><code>results.T\n</code></pre>"},{"location":"example/documents135/#_2","title":"\u88dc\u5145\u8aaa\u660e","text":"<ul> <li>DataSet<ul> <li>\u56e0 Zipline \u70ba\u4e86\u9810\u9632\u4f7f\u7528\u8005\u7528\u5230\u672a\u4f86\u8cc7\u6599\uff0c\u6240\u4ee5\u5167\u5efa <code>DataSet</code>\uff08<code>zipline.pipeline.data.TQAltDataSet\uff0fTQDataSet\uff0fEquityPricing\uff0fTWEquityPricing</code>\uff09\u5747\u6703\u5c07\u539f\u59cb\u8cc7\u6599\u5e73\u79fb\u4e00\u500b\u4ea4\u6613\u65e5\u3002\u82e5\u8981\u81ea\u884c\u6c7a\u5b9a\u5e73\u79fb\u5929\u6578\uff0c\u5247\u53ef\u4ee5\u900f\u904e\u5ba2\u88fd\u5316 <code>DataSet</code> \u4f86\u5be6\u73fe\uff0c\u672c\u7bc4\u4f8b\u5373\u662f\u63a1\u7528\u4e0d\u5e73\u79fb\u7684\u65b9\u5f0f\u9032\u884c\u8655\u7406\u3002</li> </ul> </li> <li>run_pipeline<ul> <li>\u82e5\u8981\u4f7f\u7528 CustomDataset \u4f86\u57f7\u884c run_pipeline \u8a08\u7b97\uff0c\u5fc5\u9808\u4f7f\u7528 <code>SimplePipelineEngine.run_pipeline</code>\uff0c\u800c\u4e0d\u80fd\u4f7f\u7528 <code>zipline.TQresearch.tej_pipeline.run_pipeline</code></li> </ul> </li> </ul>"},{"location":"example/documents14/","title":"\u80a1\u7968\u6c60(Universe API)","text":""},{"location":"example/documents14/#universe-analysis-using-get_universe","title":"Universe Analysis\uff0dusing get_universe","text":"<p>\u5206\u6790\u80a1\u7968\u6c60\u7684\u7522\u696d\u5206\u5e03\u8207\u6210\u4ea4\u91d1\u984d</p>"},{"location":"example/documents14/#_1","title":"\u9078\u55ae","text":"<ol> <li>\u5206\u6790\u81fa\u706350\u6307\u6578\u6210\u4efd\u80a1\u516c\u53f8\u7684\u7522\u696d\u5206\u4f48</li> <li>\u5206\u6790\u81fa\u7063\u4e2d\u578b100\u6307\u6578\u6210\u4efd\u80a1\u516c\u53f8\u7684\u7522\u696d\u5206\u4f48</li> <li>\u5206\u6790\u81fa\u7063\u9ad8\u80a1\u606f\u6307\u6578\u6210\u4efd\u80a1\u516c\u53f8\u7684\u7522\u696d\u5206\u4f48</li> <li>\u5206\u6790\u96fb\u5b50\u5de5\u696d\u516c\u53f8\u7684\u7522\u696d\u5206\u4f48</li> <li>\u5206\u6790\u4e0a\u5e02ETF\u6210\u4ea4\u91d1\u984d</li> </ol> <pre><code>import tejapi\nimport os\nimport numpy as np\nimport pandas as pd\n\n# set tej_key and base\nos.environ['TEJAPI_KEY'] = \"your key\" \nos.environ['TEJAPI_BASE'] = \"https://api.tej.com.tw\"\n\n# set date\nstart = end = '2024-05-31'\n\nfrom matplotlib import pyplot as plt\nplt.rc(\"font\",family='MicroSoft YaHei',weight=\"bold\")\n\nimport TejToolAPI\nfrom zipline.sources.TEJ_Api_Data import get_universe\nfrom zipline.utils.calendar_utils import get_calendar\n</code></pre> <p>\u5229\u7528<code>get_universe</code>\u53d6\u5f97\u53f0\u706350\u6307\u6578\u6210\u4efd\u80a1</p> <pre><code>tw50_ = get_universe(start, end, idx_id='IX0002')\n</code></pre> <pre><code>tw50_ \n</code></pre> <p><code>getUniverseSector</code>\uff1a\u7e6a\u88fd\u80a1\u7968\u6c60\u7522\u696d\u5206\u4f48\u67f1\u72c0\u5716\u8207\u5713\u9905\u5716</p> <pre><code>def plot_sector_counts(sector_counts):\n\n    # create bar chart of number of companies in each sector    \n    from matplotlib import pyplot as plt\n    plt.rc(\"font\",family='MicroSoft YaHei',weight=\"normal\")\n\n    from matplotlib.ticker import MaxNLocator\n    import matplotlib.ticker as ticker\n\n    plt.figure(figsize=(12, 15), dpi=100)\n\n    bar = plt.subplot2grid((5,5), (0,0), rowspan=2, colspan=5)\n    pie = plt.subplot2grid((5,5), (2,0), rowspan=3, colspan=5)\n\n    # Bar chart\n    sector_counts.plot(\n        kind='barh',        \n        color='b',\n#         rot=90,\n        grid=True,\n        fontsize=12,\n        ax=bar,\n    )\n\n    plt.gca().yaxis.set_major_locator(ticker.MaxNLocator(integer=True))\n    bar.set_title('\u80a1\u7968\u6c60\u7522\u696d\u5206\u5e03\u5bb6\u6578')\n    bar.set_xlabel('\u5bb6\u6578')     \n\n\n    num = list(sector_counts.values)\n    explode = [0.1 if x == max(num) else 0 for x in num]\n\n    # Pie chart\n    sector_counts.plot(\n        kind='pie', \n        colormap='Set3', \n        autopct='%.1f %%', # '%.2f %%'\n        fontsize=12,\n        ax=pie,\n        labeldistance=1.1,\n        pctdistance=0.9,\n        explode = explode\n    ) \n    pie.set_ylabel('')      \n    pie.set_title('\u80a1\u7968\u6c60\u7522\u696d\u5206\u5e03\u5360\u6bd4 - %')\n\n\n    plt.tight_layout(pad=5);\n\ndef getUniverseSector(start_date,\n                      end_date,\n                      trading_calendar=get_calendar('TEJ_XTAI'),\n                      **kwargs):\n\n    tickers = get_universe(start_date,\n                           end_date,\n                           trading_calendar = trading_calendar,\n                           **kwargs)\n\n    df_sector = TejToolAPI.get_history_data(ticker=tickers,\n                                            columns=['Industry'], transfer_to_chinese=True,\n                                            start = start_date,\n                                            end = end_date)   \n\n    counts = (df_sector.groupby('\u4e3b\u7522\u696d\u5225_\u4e2d\u6587').size())\n    _c =[]\n    counts.index = [ x.split(' ')[1]  if len(x)&gt;0 else ' ' for x in counts.index]\n\n    plot_sector_counts(counts[counts&gt;0].sort_values(ascending=False)) \n</code></pre> <p></p>"},{"location":"example/documents14/#50","title":"\u5206\u6790\u81fa\u706350\u6307\u6578\u6210\u4efd\u80a1\u516c\u53f8\u7684\u7522\u696d\u5206\u4f48","text":"<p>Return to Menu</p> <pre><code>getUniverseSector(start, end, idx_id='IX0002')\n</code></pre> <p></p>"},{"location":"example/documents14/#100","title":"\u5206\u6790\u81fa\u7063\u4e2d\u578b100\u6307\u6578\u6210\u4efd\u80a1\u516c\u53f8\u7684\u7522\u696d\u5206\u4f48","text":"<p>Return to Menu</p> <pre><code>getUniverseSector(start, end, idx_id='IX0003')\n</code></pre> <p></p>"},{"location":"example/documents14/#_2","title":"\u5206\u6790\u81fa\u7063\u9ad8\u80a1\u606f\u6307\u6578\u6210\u4efd\u80a1\u516c\u53f8\u7684\u7522\u696d\u5206\u4f48","text":"<p>Return to Menu</p> <pre><code>getUniverseSector(start, end, idx_id='IX0006')\n</code></pre> <p></p>"},{"location":"example/documents14/#_3","title":"\u5206\u6790\u96fb\u5b50\u5de5\u696d\u516c\u53f8\u7684\u7522\u696d\u5206\u4f48","text":"<p>Return to Menu</p> <pre><code>getUniverseSector(start, end, main_ind_c='M2300 \u96fb\u5b50\u5de5\u696d')\n</code></pre> <p></p>"},{"location":"example/documents14/#etf","title":"\u5206\u6790\u4e0a\u5e02ETF\u6210\u4ea4\u91d1\u984d","text":"<p>Return to Menu</p> <pre><code>etf = get_universe(start, end, stktp_c=['ETF', '\u570b\u5916ETF'], mkt=['TWSE'])\n</code></pre> <pre><code>df_amount = TejToolAPI.get_history_data(ticker=etf, \n                                        columns=['Value_Dollars'], \n                                        transfer_to_chinese=False,\n                                        start = '2023-01-01',\n                                        end = end\n                                        )  \n</code></pre> <pre><code>df_top = (df_amount.\n          set_index(['coid','mdate']).\n          unstack('coid').\n          rolling(30).\n          mean().\n          iloc[-1].\n          sort_values(ascending=False)['Value_Dollars'] #['\u6210\u4ea4\u91d1\u984d_\u5143']\n         )\n</code></pre> <pre><code>df_top = (df_top.to_frame().\n          join(tejapi.get('TWN/APISTOCK')[['coid','stk_name']].\n               set_index('coid')).\n          set_index('stk_name').iloc[:,0]\n         )\n</code></pre> <pre><code>plt.figure(figsize=(8, 12), dpi=150)\n\nbar = plt.subplot2grid((5,5), (0,0), rowspan=2, colspan=5)\n\ndf_top.nlargest(20).plot(\n        kind='barh',        \n        color='b',\n#         rot=90,\n        grid=True,\n        ax=bar\n    )\n\nbar.set_xlabel('TWD')\nbar.set_ylabel('')\nbar.set_title('\u4e0a\u5e02ETF \u904e\u53bb30\u65e5\u7684\u5e73\u5747\u6210\u4ea4\u91d1\u984d Top20\uff08{}\uff09'.format(df_amount.mdate.max().strftime('%Y-%m-%d')))\n</code></pre> <p>Return to Menu</p>"},{"location":"example/documents14/#get_universe","title":"get_universe\u8aaa\u660e","text":""},{"location":"example/documents14/#import-and-setting","title":"Import and Setting","text":"<pre><code>import pandas as pd\nimport datetime\nimport tejapi\nimport os\nimport numpy as np\n\n# set tej_key and base\nos.environ['TEJAPI_KEY'] = \"your key\" \nos.environ['TEJAPI_BASE'] = \"https://api.tej.com.tw\"\n\n# set date\nstart='2023-01-01'\nend='2023-10-24'\n\nfrom logbook import Logger, StderrHandler, INFO\nlog_handler = StderrHandler(format_string='[{record.time:%Y-%m-%d %H:%M:%S.%f}]: ' +\n                            '{record.level_name}: {record.func_name}: {record.message}',\n                            level=INFO)\nlog_handler.push_application()\nlog = Logger('get_universe')\n</code></pre>"},{"location":"example/documents14/#get_universe_1","title":"get_universe","text":"<p>\u7528\u4f86\u53d6\u5f97\u67d0\u4e00\u6bb5\u6642\u9593\u4e2d\u7b26\u5408\u7279\u5b9a\u689d\u4ef6\u7684\u80a1\u7968\u6c60\uff08\u4f7f\u7528\u6b64\u51fd\u6578\u6703\u6d88\u8017API\u6d41\u91cf\uff09\u3002</p>"},{"location":"example/documents14/#ziplinesourcestej_api_dataget_universe","title":"zipline.sources.TEJ_Api_Data.get_universe","text":"<pre><code>(start,\n end=datetime.datetime.now().date().strftime('%Y-%m-%d'),\n trading_calendar = get_calendar('TEJ_XTAI'),\n **kwargs)\n</code></pre>"},{"location":"example/documents14/#parameters","title":"Parameters","text":"<ul> <li>start(datetime or str)\uff0d\u8d77\u59cb\u65e5\u3002get_universe\u5c07\u6703\u56de\u50b3start\u81f3end\u6642\u9593\u6bb5\u5167\u7b26\u5408\u689d\u4ef6\u7684\u6a23\u672c\u3002</li> <li>end(datetime or str, optional)\uff0d\u8fc4\u65e5\uff0c\u9810\u8a2d\u70ba\u7a0b\u5f0f\u57f7\u884c\u7576\u5929\u65e5\u671f\u3002get_universe\u5c07\u6703\u56de\u50b3start\u81f3end\u6642\u9593\u6bb5\u5167\u7b26\u5408\u689d\u4ef6\u7684\u6a23\u672c\u3002</li> <li>trading_calendar(TradingCalendar, optional)\uff0d\u8a2d\u7f6e\u4ea4\u6613\u65e5\u66c6\u3002\u9810\u8a2d\u662f<code>get_calendar('TEJ_XTAI')</code>\u3002</li> <li>available kwargs properties\uff08\u81f3\u5c11\u9700\u8981\u6307\u5b9a\u4e00\u500b\uff0c\u82e5\u6c92\u6307\u5b9a\u5247\u8fd4\u56de\u5168\u6a23\u672c\uff09</li> <li>mkt(list or str)\uff0d\u5e02\u5834\u5225\u3002<ul> <li>valid mkt\uff1a<code>['TWSE', 'OTC']</code>\u3002</li> <li>\u82e5\u5728**\u8b49\u5238\u4ea4\u6613\u6240**\u639b\u724c\uff0c\u8a3b\u8a18\u70ba\u300cTWSE\u300d\uff1b\u82e5\u5728**\u6ac3\u8cb7\u4e2d\u5fc3**\u639b\u724c\uff0c\u8a3b\u8a18\u70ba\u300cOTC\u300d\u3002</li> <li>\u5e02\u5834\u5225\uff08mkt\uff09 \u3001**\u677f\u584a\u5225\uff08mkt_bd_c\u3001mkt_bd_e\uff09**\u7684\u6982\u5ff5\u8acb\u53c3\u8003\u4ee5\u4e0b\u8aaa\u660e\uff1a\u5e02\u5834\u5225\uff08mkt\uff09 \u8207\u677f\u584a\u5225\uff08mkt_bd_c\u3001mkt_bd_e\uff09\u3002</li> </ul> </li> <li>mkt_bd_c(list or str)\uff0d\u677f\u584a\u5225(\u4e2d)\u3002<ul> <li>valid mkt_bd_c\uff1a<code>['\u4e0a\u5e02\u4e00\u822c\u7248', '\u4e0a\u6ac3\u4e00\u822c\u7248', '\u5275\u65b0\u7248']</code>\u3002</li> <li>\u82e5\u5728**\u4e0a\u5e02\u4e00\u822c\u677f**\uff0c\u8a3b\u8a18\u70ba\u300c\u4e0a\u5e02\u4e00\u822c\u7248\u300d\uff1b\u82e5\u5728**\u4e0a\u5e02\u5275\u65b0\u677f**\uff0c\u8a3b\u8a18\u70ba\u300c\u5275\u65b0\u7248\u300d\uff1b\u82e5\u5728**\u4e0a\u6ac3\u4e00\u822c\u677f**\uff0c\u8a3b\u8a18\u70ba\u300c\u4e0a\u6ac3\u4e00\u822c\u7248\u300d\u3002</li> </ul> </li> <li>mkt_bd_e(list or str)\uff0d\u677f\u584a\u5225(\u82f1)\u3002<ul> <li>valid mkt_bd_e\uff1a<code>['TSE', 'OTC', 'TIB']</code>\u3002</li> <li>\u82e5\u5728**\u4e0a\u5e02\u4e00\u822c\u677f**\uff0c\u8a3b\u8a18\u70ba\u300cTSE\u300d\uff1b\u82e5\u5728**\u4e0a\u5e02\u5275\u65b0\u677f**\uff0c\u8a3b\u8a18\u70ba\u300cTIB\u300d\uff1b\u82e5\u5728**\u4e0a\u6ac3\u4e00\u822c\u677f**\uff0c\u8a3b\u8a18\u70ba\u300cOTC\u300d\u3002</li> </ul> </li> <li>stktp_c(list or str)\uff0d\u8b49\u5238\u7a2e\u985e(\u4e2d)\u3002<ul> <li>valid stktp_c\uff1a<code>['\u6307\u6578', '\u666e\u901a\u80a1-\u6d77\u5916', '\u666e\u901a\u80a1', '\u7279\u5225\u80a1', '\u5c01\u9589\u578b\u57fa\u91d1', 'ETF', 'REIT', '\u570b\u5916ETF', '\u53f0\u7063\u5b58\u8a17\u6191\u8b49']</code>\u3002</li> <li><code>'\u666e\u901a\u80a1-\u6d77\u5916'</code>\uff1a\u50c5\u5305\u542bF\u80a1\u6216KY\u80a1\u3002<code>'\u666e\u901a\u80a1'</code>\uff1a\u4e0d\u542bF\u80a1\u6216KY\u80a1\u3002\u82e5\u540c\u6642\u60f3\u53d6\u5f97\u6240\u6709\u7b2c\u4e00\u4e0a\u5e02\u7684\u666e\u901a\u80a1\uff0c\u8acb\u4f7f\u7528stktp_c=<code>['\u666e\u901a\u80a1-\u6d77\u5916', '\u666e\u901a\u80a1']</code>\u3002</li> <li><code>'ETF'</code>\uff1a\u50c5\u5305\u542b\u6295\u8cc7\u65bc\u570b\u5167\u6a19\u7684\u7684ETF\u3002<code>'\u570b\u5916ETF'</code>\uff1a\u50c5\u5305\u542b\u6295\u8cc7\u65bc\u570b\u5916\u6a19\u7684\u7684ETF\u3002\u82e5\u540c\u6642\u60f3\u53d6\u5f97\u6240\u6709ETF\uff0c\u8acb\u4f7f\u7528stktp_c=<code>['ETF', '\u570b\u5916ETF']</code>\u3002</li> </ul> </li> <li>stktp_e(list or str)\uff0d\u8b49\u5238\u7a2e\u985e(\u82f1)\u3002<ul> <li>valid stktp_e\uff1a<code>['Index', 'Common Stock-Foreign', 'Common Stock', 'Preferred Stock', 'Close End Fund', 'ETF', 'REIT', 'Foreign ETF', 'TDR']</code>\u3002</li> <li><code>'Common Stock-Foreign'</code>\uff1a\u50c5\u5305\u542bF\u80a1\u6216KY\u80a1\u3002<code>'Common Stock'</code>\uff1a\u4e0d\u542bF\u80a1\u6216KY\u80a1\u3002\u82e5\u540c\u6642\u60f3\u53d6\u5f97\u6240\u6709\u7b2c\u4e00\u4e0a\u5e02\u7684\u666e\u901a\u80a1\uff0c\u8acb\u4f7f\u7528stktp_e=<code>['Common Stock-Foreign', 'Common Stock']</code>\u3002</li> <li><code>'ETF'</code>\uff1a\u50c5\u5305\u542b\u6295\u8cc7\u65bc\u570b\u5167\u6a19\u7684\u7684ETF\u3002<code>'Foreign ETF'</code>\uff1a\u50c5\u5305\u542b\u6295\u8cc7\u65bc\u570b\u5916\u6a19\u7684\u7684ETF\u3002\u82e5\u540c\u6642\u60f3\u53d6\u5f97\u6240\u6709ETF\uff0c\u8acb\u4f7f\u7528stktp_c=<code>['ETF', 'Foreign ETF']</code>\u3002</li> </ul> </li> <li> <p>main_ind_c(list or str)\uff0d\u4e3b\u7522\u696d\u5225(\u4e2d)\u3002\uff08\u8acb\u8f38\u5165\u5b8c\u6574\u5b57\u4e32\uff0c\u4f8b\u5982\uff1a'M1100 \u6c34\u6ce5\u5de5\u696d'\uff09      \u9ede\u9078\u67e5\u770bvalid main_ind_c\uff1a <pre>\n<ul>\n<li>M1100 \u6c34\u6ce5\u5de5\u696d</li>\n<li>M1200 \u98df\u54c1\u5de5\u696d</li>\n<li>M1300 \u5851\u81a0\u5de5\u696d</li>\n<li>M1400 \u7d21\u7e54\u7e96\u7dad</li>\n<li>M1500 \u96fb\u6a5f\u6a5f\u68b0</li>\n<li>M1600 \u96fb\u5668\u96fb\u7e9c</li>\n<li>M1700 \u5316\u5b78\u751f\u6280\u91ab\u7642</li>\n<li>M1800 \u73bb\u7483\u9676\u74f7</li>\n<li>M1900 \u9020\u7d19\u5de5\u696d</li>\n<li>M2000 \u92fc\u9435\u5de5\u696d</li>\n<li>M2100 \u6a61\u81a0\u5de5\u696d</li>\n<li>M2200 \u6c7d\u8eca\u5de5\u696d</li>\n<li>M2300 \u96fb\u5b50\u5de5\u696d</li>\n<li>M2500 \u5efa\u6750\u71df\u9020</li>\n<li>M2600 \u822a\u904b\u696d</li>\n<li>M2700 \u89c0\u5149\u9910\u65c5</li>\n<li>M2800 \u91d1\u878d\u696d</li>\n<li>M2900 \u8cbf\u6613\u767e\u8ca8</li>\n<li>M3000 \u8a3c\u5238</li>\n<li>M3500 \u7da0\u80fd\u74b0\u4fdd</li>\n<li>M3600 \u6578\u4f4d\u96f2\u7aef</li>\n<li>M3700 \u904b\u52d5\u4f11\u9592</li>\n<li>M3800 \u5c45\u5bb6\u751f\u6d3b</li>\n<li>M9700 \u6cb9\u96fb\u71c3\u6c23\u696d</li>\n<li>M9900 \u5176\u4ed6</li>\n<li>OTC12 OTC \u98df\u54c1\u5de5\u696d</li>\n<li>OTC13 OTC \u5851\u81a0\u5de5\u696d</li>\n<li>OTC14 OTC \u7d21\u7e54\u7e96\u7dad</li>\n<li>OTC15 OTC \u96fb\u6a5f\u6a5f\u68b0</li>\n<li>OTC16 OTC \u96fb\u5668\u96fb\u7e9c</li>\n<li>OTC17 OTC \u5316\u5b78\u751f\u6280</li>\n<li>OTC18 OTC \u73bb\u7483</li>\n<li>OTC20 OTC \u92fc\u9435\u5de5\u696d</li>\n<li>OTC21 OTC \u6a61\u81a0\u985e</li>\n<li>OTC22 OTC \u6c7d\u8eca\u985e</li>\n<li>OTC23 OTC \u96fb\u5b50\u985e</li>\n<li>OTC25 OTC \u5efa\u6750\u71df\u9020</li>\n<li>OTC26 OTC \u822a\u904b\u696d</li>\n<li>OTC27 OTC \u89c0\u5149\u9910\u65c5</li>\n<li>OTC28 OTC \u91d1\u878d\u696d</li>\n<li>OTC29 OTC \u767e\u8ca8\u985e</li>\n<li>OTC30 OTC \u8b49\u5238\u985e</li>\n<li>OTC32 \u6587\u5316\u5275\u610f\u696d</li>\n<li>OTC33 OTC \u8fb2\u696d\u79d1\u6280</li>\n<li>OTC34 OTC \u96fb\u5b50\u5546\u52d9</li>\n<li>OTC35 OTC \u7da0\u80fd\u74b0\u4fdd</li>\n<li>OTC36 OTC \u6578\u4f4d\u96f2\u7aef</li>\n<li>OTC37 OTC \u904b\u52d5\u4f11\u9592</li>\n<li>OTC38 OTC \u5c45\u5bb6\u751f\u6d3b</li>\n<li>OTC89 OTC \u5176\u5b83</li>\n<li>OTC97 OTC \u6cb9\u96fb\u71c3\u6c23\u696d</li>\n<li>\u91d1\u878d\u8207\u8b49\u5238\u696d</li>\n<li>\u4e00\u822c\u7522\u696d </li>\n</ul>\n<p>\n</p>\n\n<li>\n<p>main_ind_e(list or str)\uff0d\u4e3b\u7522\u696d\u5225(\u82f1)\u3002\uff08\u8acb\u8f38\u5165\u5b8c\u6574\u5b57\u4e32\uff0c\u4f8b\u5982\uff1a'M1100 Cement'\uff09\n    \n    \u9ede\u9078\u67e5\u770bvalid main_ind_e\uff1a\n    <pre>\n<ul>\n<li>M1100 Cement</li>\n<li>M1200 Foods</li>\n<li>M1300 Plastics</li>\n<li>M1400 Textiles</li>\n<li>M1500 Electric Machinery</li>\n<li>M1600 Electrical and Cable</li>\n<li>M1700 Chemical Biotechnology &amp; Medical Care</li>\n<li>M1800 Glass and Ceramics</li>\n<li>M1900 Paper and Pulp</li>\n<li>M2000 Iron and Steel</li>\n<li>M2100 Rubber</li>\n<li>M2200 Automobile</li>\n<li>M2300 Electronics</li>\n<li>M2500 Building Material and Construction</li>\n<li>M2600 Shipping and Transportation</li>\n<li>M2700 Tourism</li>\n<li>M2800 Financial Industry</li>\n<li>M2900 Trading and Consumers' Goods</li>\n<li>M3000 Securities</li>\n<li>M3500 TSE Green Energy and Environmental Services</li>\n<li>M3600 TSE Digital and Cloud Services</li>\n<li>M3700 TSE Sports and Leisure</li>\n<li>M3800 TSE Household</li>\n<li>M9700 Oil Gas and Electricity</li>\n<li>M9900 Others</li>\n<li>OTC12 OTC Foods</li>\n<li>OTC13 OTC Plastic</li>\n<li>OTC14 OTC Textile</li>\n<li>OTC15 OTC Electronical</li>\n<li>OTC16 OTC Wire &amp; Cable</li>\n<li>OTC17 OTC Chemical &amp; Biotech</li>\n<li>OTC18 OTC Glass</li>\n<li>OTC20 OTC Steel</li>\n<li>OTC21 OTC Rubbers</li>\n<li>OTC22 OTC Automobile</li>\n<li>OTC23 OTC Electronic</li>\n<li>OTC25 OTC Construction</li>\n<li>OTC26 OTC Transporation</li>\n<li>OTC27 OTC Tourism</li>\n<li>OTC28 OTC Banking</li>\n<li>OTC29 OTC Retailing</li>\n<li>OTC30 OTC Securities</li>\n<li>OTC32 Cultural &amp; Creative Industry</li>\n<li>OTC33 OTC Agricultural Science and Technology</li>\n<li>OTC34 OTC E-commerce</li>\n<li>OTC35 OTC Green Energy and Environmental Services</li>\n<li>OTC36 OTC Digital and Cloud Services</li>\n<li>OTC37 OTC Sports and Leisure</li>\n<li>OTC38 OTC Household</li>\n<li>OTC89 OTC Others</li>\n<li>OTC97 OTC Gas and Electricity Industry</li>\n<li>Financial and Securities Industry</li>\n<li>General Industry </li>\n</ul>\n<p>\n</p>\n\n<li>\n<p>sub_ind_c(list or str)\uff0d\u5b50\u7522\u696d\u5225(\u4e2d)\u3002\uff08\u8acb\u8f38\u5165\u5b8c\u6574\u5b57\u4e32\uff0c\u4f8b\u5982\uff1a'M1721 \u5316\u5b78\u5de5\u696d'\uff09\n    \n    \u9ede\u9078\u67e5\u770bvalid sub_ind_c\uff1a\n    <pre>\n<ul>\n<li>M1721 \u5316\u5b78\u5de5\u696d</li>\n<li>M1722 \u751f\u6280\u91ab\u7642\u696d</li>\n<li>M2324 \u534a\u5c0e\u9ad4\u696d</li>\n<li>M2325 \u96fb\u8166\u53ca\u9031\u908a\u8a2d\u5099\u696d</li>\n<li>M2326 \u5149\u96fb\u696d</li>\n<li>M2327 \u901a\u4fe1\u7db2\u8def\u696d</li>\n<li>M2328 \u96fb\u5b50\u96f6\u7d44\u4ef6</li>\n<li>M2329 \u96fb\u5b50\u901a\u8def\u696d</li>\n<li>M2330 \u8cc7\u8a0a\u670d\u52d9\u696d</li>\n<li>M2331 \u5176\u4ed6\u96fb\u5b50\u696d</li>\n<li>O1721 OTC \u5316\u5b78\u5de5\u696d</li>\n<li>O1722 OTC \u751f\u6280\u91ab\u7642</li>\n<li>O2324 OTC \u534a\u5c0e\u9ad4\u696d</li>\n<li>O2325 OTC \u96fb\u8166\u53ca\u9031\u908a\u8a2d\u5099\u696d</li>\n<li>O2326 OTC \u5149\u96fb\u696d</li>\n<li>O2327 OTC \u901a\u4fe1\u7db2\u8def\u696d</li>\n<li>O2328 OTC \u96fb\u5b50\u96f6\u7d44\u4ef6</li>\n<li>O2329 OTC \u96fb\u5b50\u901a\u8def\u696d</li>\n<li>O2330 OTC \u8cc7\u8a0a\u670d\u52d9\u696d</li>\n<li>O2331 OTC \u5176\u4ed6\u96fb\u5b50\u696d</li>\n</ul>\n<p>\n</p>\n\n<li>\n<p>sub_ind_e(list or str)\uff0d\u5b50\u7522\u696d\u5225(\u82f1)\u3002\uff08\u8acb\u8f38\u5165\u5b8c\u6574\u5b57\u4e32\uff0c\u4f8b\u5982\uff1a'M1721 Chemical'\uff09\n    \n    \u9ede\u9078\u67e5\u770bvalid sub_ind_e\uff1a\n    <pre>\n<ul>\n<li>M1721 Chemical</li>\n<li>M1722 Biotechnology and Medical Care</li>\n<li>M2324 Semiconductor</li>\n<li>M2325 Computer and Peripheral Equipment</li>\n<li>M2326 Optoelectronic</li>\n<li>M2327 Communications and Internet</li>\n<li>M2328 Electronic Parts and Components</li>\n<li>M2329 Electronic Products Distribution</li>\n<li>M2330 Information Service</li>\n<li>M2331 Other Electronic</li>\n<li>O1721 OTC Chemical Industry</li>\n<li>O1722 OTC Biotechnology and Medical Care Industry</li>\n<li>O2324 OTC Semiconductor Industry</li>\n<li>O2325 OTC Computer and Peripheral Equipment Industry</li>\n<li>O2326 OTC Optoelectronic Industry</li>\n<li>O2327 OTC Communications and Internet Industry</li>\n<li>O2328 OTC Electronic Parts and Components Industry</li>\n<li>O2329 OTC Electronic Products Distribution Industry</li>\n<li>O2330 OTC Information Service Industry</li>\n<li>O2331 OTC Other Electronic</li>\n</ul>\n<p>\n</p>\n\n<li>\n<p>idx_id(list or str)\uff0d\u6307\u6578\u540d\u7a31\u3002\uff08\u8acb\u8f38\u5165\u6307\u6578\u5c31\u597d\uff0c\u5f8c\u9762\u7684\u4e2d\u6587\u4e0d\u9700\u8f38\u5165\uff0c\u4f8b\u5982\uff1a'IX0001'\uff09</p>\n<p>\n\u9ede\u9078\u67e5\u770bvalid idx_id\uff1a\n<pre> \n<ul>\n<li>IX0001    \u52a0\u6b0a\u6307\u6578</li>\n<li>IX0002    \u53f0\u706350\u6307\u6578</li>\n<li>IX0003    \u53f0\u7063\u4e2d\u578b\u6307\u6578</li>\n<li>IX0006    \u53f0\u7063\u9ad8\u80a1\u606f\u6307\u6578</li>\n<li>IX0010    \u6c34\u6ce5\u5de5\u696d\u985e\u6307\u6578</li>\n<li>IX0011    \u98df\u54c1\u5de5\u696d\u985e\u6307\u6578</li>\n<li>IX0012    \u5851\u81a0\u5de5\u696d\u985e\u6307\u6578</li>\n<li>IX0016    \u7d21\u7e54\u7e96\u7dad\u985e\u6307\u6578</li>\n<li>IX0017    \u96fb\u6a5f\u6a5f\u68b0\u985e\u6307\u6578</li>\n<li>IX0018    \u96fb\u5668\u96fb\u7e9c\u985e\u6307\u6578</li>\n<li>IX0019    \u5316\u5b78\u751f\u6280\u91ab\u7642\u985e\u6307\u6578</li>\n<li>IX0020    \u5316\u5b78\u5de5\u696d\u6307\u6578</li>\n<li>IX0021    \u751f\u6280\u91ab\u7642\u6307\u6578</li>\n<li>IX0022    \u73bb\u7483\u9676\u74f7\u985e\u6307\u6578</li>\n<li>IX0023    \u9020\u7d19\u5de5\u696d\u985e\u6307\u6578</li>\n<li>IX0024    \u92fc\u9435\u5de5\u696d\u985e\u6307\u6578</li>\n<li>IX0025    \u6a61\u81a0\u985e\u6307\u6578</li>\n<li>IX0026    \u6c7d\u8eca\u5de5\u696d\u985e\u6307\u6578</li>\n<li>IX0027    \u96fb\u5b50\u985e\u6307\u6578</li>\n<li>IX0028    \u534a\u5c0e\u9ad4\u696d\u6307\u6578</li>\n<li>IX0029    \u96fb\u8166\u53ca\u9031\u908a\u8a2d\u5099\u696d\u6307\u6578</li>\n<li>IX0030    \u5149\u96fb\u696d\u6307\u6578</li>\n<li>IX0031    \u901a\u4fe1\u7db2\u8def\u696d\u6307\u6578</li>\n<li>IX0032    \u96fb\u5b50\u96f6\u7d44\u4ef6\u696d\u6307\u6578</li>\n<li>IX0033    \u96fb\u5b50\u901a\u8def\u696d\u6307\u6578</li>\n<li>IX0034    \u8cc7\u8a0a\u670d\u52d9\u696d\u6307\u6578</li>\n<li>IX0035    \u5176\u4ed6\u96fb\u5b50\u696d\u6307\u6578</li>\n<li>IX0036    \u5efa\u6750\u71df\u9020\u985e\u6307\u6578</li>\n<li>IX0037    \u822a\u904b\u696d\u985e\u6307\u6578</li>\n<li>IX0038    \u89c0\u5149\u4e8b\u696d\u985e\u6307\u6578</li>\n<li>IX0039    \u91d1\u878d\u4fdd\u96aa\u985e\u6307\u6578</li>\n<li>IX0040    \u8cbf\u6613\u767e\u8ca8\u985e\u6307\u6578</li>\n<li>IX0041    \u6cb9\u96fb\u71c3\u6c23\u696d\u6307\u6578</li>\n<li>IX0042    \u5176\u4ed6\u985e\u6307\u6578</li>\n<li>IX0043    OTC \u6307\u6578</li>\n<li>IX0044    OTC \u7d21\u7e54\u7e96\u7dad\u985e</li>\n<li>IX0045    OTC \u96fb\u6a5f\u6a5f\u68b0\u985e</li>\n<li>IX0046    OTC \u92fc\u9435\u985e</li>\n<li>IX0047    OTC \u96fb\u5b50\u985e</li>\n<li>IX0048    OTC \u71df\u9020\u5efa\u6750\u985e</li>\n<li>IX0049    OTC \u822a\u904b\u985e</li>\n<li>IX0050    OTC \u89c0\u5149\u985e\u6307\u6578</li>\n<li>IX0051    OTC \u5316\u5b78\u5de5\u696d\u6307\u6578</li>\n<li>IX0052    OTC \u751f\u6280\u91ab\u7642\u6307\u6578</li>\n<li>IX0053    OTC \u534a\u5c0e\u9ad4\u696d\u6307\u6578</li>\n<li>IX0054    OTC \u96fb\u8166\u53ca\u9031\u908a\u8a2d\u5099\u696d\u6307\u6578</li>\n<li>IX0055    OTC \u5149\u96fb\u696d\u6307\u6578</li>\n<li>IX0056    OTC \u901a\u4fe1\u7db2\u8def\u696d\u6307\u6578</li>\n<li>IX0057    OTC \u96fb\u5b50\u96f6\u7d44\u4ef6\u6307\u6578</li>\n<li>IX0058    OTC \u96fb\u5b50\u901a\u8def\u696d\u6307\u6578</li>\n<li>IX0059    OTC \u8cc7\u8a0a\u670d\u52d9\u696d\u6307\u6578</li>\n<li>IX0060    \u5bcc\u6ac3\u4e94\u5341\u6307\u6578</li>\n<li>IX0063    \u7dda\u4e0a\u904a\u6232\u6307\u6578</li>\n<li>IX0075    \u6587\u5316\u5275\u610f\u696d\u6307\u6578</li>\n<li>IX0082    \u81fa\u7063\u8b49\u5238\u4ea4\u6613\u6240\u516c\u53f8\u6cbb\u7406100 \u6307\u6578</li>\n<li>IX0085    \u6ac3\u8cb7\u6cbb\u7406</li>\n<li>IX0099    \u5176\u4ed6\u96fb\u5b50\u696d\u6307\u6578</li>\n<li>IX0118    \u6ac3\u8cb7\u5bcc\u6ac3200\u6307\u6578</li>\n</ul>\n<p>\n</p>"},{"location":"example/documents14/#returns","title":"Returns","text":"<p>List of symbols.</p>"},{"location":"example/documents14/#return-type","title":"Return type","text":"<p>list</p>"},{"location":"example/documents14/#note","title":"Note","text":"<ul>\n<li><code>main_ind_c</code>\u7684\u7279\u6b8a\u7522\u696d</li>\n<li>main_ind_c=<code>'\u91d1\u878d\u8207\u8b49\u5238\u696d'</code>\uff1a**\u5c6c\u65bc**\u4ee5\u4e0b4\u7a2e\u7522\u696d\u7684\u6240\u6709\u516c\u53f8<ul>\n<li>M2800 \u91d1\u878d\u696d</li>\n<li>OTC28 OTC \u91d1\u878d\u696d</li>\n<li>M3000 \u8a3c\u5238</li>\n<li>OTC30 OTC \u8b49\u5238\u985e</li>\n</ul>\n</li>\n<li>main_ind_c=<code>'\u4e00\u822c\u7522\u696d'</code>\uff1a**\u975e**\u4ee5\u4e0b4\u7a2e\u7522\u696d\u7684\u6240\u6709\u516c\u53f8<ul>\n<li>M2800 \u91d1\u878d\u696d</li>\n<li>OTC28 OTC \u91d1\u878d\u696d</li>\n<li>M3000 \u8a3c\u5238</li>\n<li>OTC30 OTC \u8b49\u5238\u985e</li>\n</ul>\n</li>\n<li><code>main_ind_e</code>\u7684\u7279\u6b8a\u7522\u696d</li>\n<li>main_ind_e=<code>'Financial and Securities Industry'</code>\uff1a**\u5c6c\u65bc**\u4ee5\u4e0b4\u7a2e\u7522\u696d\u7684\u6240\u6709\u516c\u53f8<ul>\n<li>M2800 Financial Industry</li>\n<li>OTC30 OTC Securities</li>\n<li>M3000 Securities</li>\n<li>OTC28 OTC Banking</li>\n</ul>\n</li>\n<li>main_ind_e=<code>'General Industry'</code>\uff1a**\u975e**\u4ee5\u4e0b4\u7a2e\u7522\u696d\u7684\u6240\u6709\u516c\u53f8<ul>\n<li>M2800 Financial Industry</li>\n<li>OTC30 OTC Securities</li>\n<li>M3000 Securities</li>\n<li>OTC28 OTC Banking</li>\n</ul>\n</li>\n</ul>"},{"location":"example/documents14/#mkt-mkt_bd_cmkt_bd_e","title":"\u5e02\u5834\u5225\uff08mkt\uff09 \u8207\u677f\u584a\u5225\uff08mkt_bd_c\u3001mkt_bd_e\uff09","text":"<p>\u4ee5 '\u666e\u901a\u80a1' \u70ba\u4f8b\uff08\u4e0d\u542bF\u80a1\u6216KY\u80a1\uff09\uff1a</p>\n<ul>\n<li>'\u666e\u901a\u80a1' \uff08stktp_c='\u666e\u901a\u80a1'\uff09\uff1a\u5305\u542b\u5728**\u8b49\u5238\u4ea4\u6613\u6240\uff08mkt='TWSE'\uff09\u639b\u724c\u7684\u666e\u901a\u80a1** \u8207\u5728**\u6ac3\u8cb7\u4e2d\u5fc3\uff08mkt='OTC'\uff09\u639b\u724c\u7684\u666e\u901a\u80a1**\u3002</li>\n<li>\u5728**\u8b49\u5238\u4ea4\u6613\u6240\u639b\u724c\u7684\u666e\u901a\u80a1**\uff1a\u5305\u542b**\u4e0a\u5e02\u4e00\u822c\u677f\uff08mkt_bd_e='TSE'\u3001mkt_bd_c='\u4e0a\u5e02\u4e00\u822c\u7248'\uff09** \u8207 \u4e0a\u5e02\u5275\u65b0\u677f\uff08mkt_bd_e='TIB'\u3001mkt_bd_c='\u5275\u65b0\u7248'\uff09\u3002</li>\n<li>\n<p>\u5728**\u6ac3\u8cb7\u4e2d\u5fc3\u639b\u724c\u7684\u666e\u901a\u80a1**\uff1a\u5305\u542b**\u4e0a\u6ac3\u4e00\u822c\u677f\uff08mkt_bd_e='OTC'\u3001mkt_bd_c='\u4e0a\u6ac3\u4e00\u822c\u7248'\uff09**\uff0c\u4e0d\u542b\u8208\u6ac3\u3002</p>\n</li>\n<li>\n<p>\u7d71\u6574\u4e0a\u8ff0\u95dc\u4fc2\uff1a</p>\n\n<p></p>\n\n</li>\n</ul>"},{"location":"example/documents14/#import-get_universe","title":"Import get_universe","text":"<pre><code>from zipline.sources.TEJ_Api_Data import get_universe\n</code></pre>"},{"location":"example/documents14/#examples","title":"Examples","text":"<p>\u5305\u542b\u4ee5\u4e0b\u4e5d\u500b\u7bc4\u4f8b\uff1a\n1. case1 \u53d6\u66fe\u7d93\u5728\u4e0a\u5e02\u4e00\u822c\u677f+\u4e0a\u6ac3\u4e00\u822c\u677f\u7684\u8b49\u5238\n2. case2 \u53d6\u66fe\u7d93\u5728\u8b49\u5238\u4ea4\u6613\u6240\uff0f\u6ac3\u8cb7\u4e2d\u5fc3\u639b\u724c\u7684\u8b49\u5238\n3. case3 \u53d6\u66fe\u7d93\u4e0a\u5e02+\u4e0a\u6ac3\u7684\u666e\u901a\u80a1\n4. case4 \u53d6\u5b50\u7522\u696d\u5225\u66fe\u7d93\u70ba\"M2324 \u534a\u5c0e\u9ad4\u696d\"\u7684\u8b49\u5238\n5. case5 \u53d6\u5b50\u7522\u696d\u5225\u66fe\u7d93\u70ba\"M2324 Semiconductor\"&amp;\"M2325 Computer and Peripheral Equipment\"\u7684\u8b49\u5238\n6. case6 \u53d6\u8b49\u5238\u7a2e\u985e\u70ba\"ETF\"\u53ca\"\u666e\u901a\u80a1\"\u4e14\u639b\u724c\u65bc\u8b49\u5238\u4ea4\u6613\u6240\u7684\u8b49\u5238\n7. case7 \u53d6\u66fe\u7d93\u70ba\"IX0002\"\uff08\u53f0\u706350\u6307\u6578\uff09\u6210\u4efd\u80a1\u7684\u8b49\u5238\n8. case8 \u53d6\u4e3b\u7522\u696d\u5225\u66fe\u7d93\u70ba\"M1100 \u6c34\u6ce5\u5de5\u696d\"\u4e14\u70ba\"IX0006\"\uff08\u53f0\u7063\u9ad8\u80a1\u606f\u6307\u6578\uff09\u6210\u4efd\u80a1\u7684\u8b49\u5238\n9. case9 \u53d6\u975e\u91d1\u878d\u696d\u7684\u666e\u901a\u80a1</p>\n<p></p>"},{"location":"example/documents14/#case1","title":"case1 \u53d6\u66fe\u7d93\u5728\u4e0a\u5e02\u4e00\u822c\u677f+\u4e0a\u6ac3\u4e00\u822c\u677f\u7684\u8b49\u5238\uff08\u4e0d\u9650\u65bc\u666e\u901a\u80a1\uff09","text":"<p>\u9019\u6a23\u7684\u4f7f\u7528\u65b9\u5f0f\u4e0d\u6703\u53d6\u51fa<code>mkt_bd_e</code>=TIB\uff08\u5275\u65b0\u677f\uff09\u7684\u8b49\u5238</p>\n<p>Return to Examples Menu</p>\n<pre><code># \u50c5\u986f\u793a\u524d10\u7b46\nget_universe(start, end, mkt_bd_e=['TSE','OTC'])[0:10]\n</code></pre>\n<p></p>"},{"location":"example/documents14/#case2","title":"case2 \u53d6\u66fe\u7d93\u5728\u8b49\u5238\u4ea4\u6613\u6240\uff0f\u6ac3\u8cb7\u4e2d\u5fc3\u639b\u724c\u7684\u8b49\u5238\uff08\u4e0d\u9650\u65bc\u666e\u901a\u80a1\uff09","text":"<p>Return to Examples Menu</p>"},{"location":"example/documents14/#_4","title":"\u53d6\u66fe\u7d93\u5728\u8b49\u5238\u4ea4\u6613\u6240\u639b\u724c\u7684\u8b49\u5238","text":"<pre><code># \u50c5\u986f\u793a\u524d10\u7b46\nget_universe(start, end, mkt=['TWSE'])[0:10]\n</code></pre>"},{"location":"example/documents14/#_5","title":"\u53d6\u66fe\u7d93\u5728\u6ac3\u8cb7\u4e2d\u5fc3\u639b\u724c\u7684\u8b49\u5238","text":"<pre><code># \u50c5\u986f\u793a\u524d10\u7b46\nget_universe(start, end, mkt=['OTC'])[0:10]\n</code></pre>"},{"location":"example/documents14/#case3-fky","title":"case3 \u53d6\u66fe\u7d93\u4e0a\u5e02+\u4e0a\u6ac3\u7684\u666e\u901a\u80a1\uff08\u4e0d\u542bF\u80a1\u6216KY\u80a1\uff09","text":"<ul>\n<li>\n<p>case1\u8207case2\u53d6\u51fa\u7684\u8b49\u5238**\u4e0d\u9650\u65bc\u666e\u901a\u80a1**\uff0c\u82e5**\u50c5\u60f3\u53d6\u51fa\u666e\u901a\u80a1**\uff08\u4e0d\u542bF\u80a1\u6216KY\u80a1\uff09\uff0c\u5247\u53ef\u4ee5\u65b0\u589e<code>stktp_c=['\u666e\u901a\u80a1']</code>\u7684\u689d\u4ef6\u3002</p>\n</li>\n<li>\n<p>\u4ee5\u4e0b\u5169\u7a2e\u65b9\u5f0f\u7686\u80fd\u53d6\u5f97\u66fe\u7d93\u4e0a\u5e02+\u4e0a\u6ac3\u7684\u666e\u901a\u80a1\uff08\u4e0d\u542bF\u80a1\u6216KY\u80a1\uff09\uff1a</p>\n</li>\n<li><code>get_universe(start, end, mkt=['TWSE','OTC'], stktp_c=['\u666e\u901a\u80a1'])</code></li>\n<li>\n<p><code>get_universe(start, end, mkt_bd_e=['TSE','OTC','TIB'], mkt=['TWSE','OTC'], stktp_c=['\u666e\u901a\u80a1'])</code></p>\n</li>\n<li>\n<p>\u82e5\u9700\u8981\u6392\u9664**\u4e0a\u5e02\u5275\u65b0\u677f\uff08mkt_bd='TIB'\uff09** \u7684\u666e\u901a\u80a1\uff08\u4e0d\u542bF\u80a1\u6216KY\u80a1\uff09\uff0c\u53ef\u4f7f\u7528\uff1a</p>\n</li>\n<li><code>get_universe(start, end, mkt_bd_e=['TSE','OTC'], mkt=['TWSE','OTC'], stktp_c=['\u666e\u901a\u80a1'])</code></li>\n</ul>\n<p>Return to Examples Menu</p>\n<pre><code># \u50c5\u986f\u793a\u524d10\u7b46\nget_universe(start, end, mkt=['TWSE','OTC'], stktp_c=['\u666e\u901a\u80a1'])[0:10]\n</code></pre>\n<pre><code>get_universe(start, end, mkt_bd_e=['TSE','OTC','TIB'], mkt=['TWSE','OTC'], stktp_c=['\u666e\u901a\u80a1'])[0:10]\n</code></pre>\n<p></p>"},{"location":"example/documents14/#case4-m2324","title":"case4 \u53d6\u5b50\u7522\u696d\u5225\u66fe\u7d93\u70ba\"M2324 \u534a\u5c0e\u9ad4\u696d\"\u7684\u8b49\u5238","text":"<p>Return to Examples Menu</p>\n<pre><code># \u50c5\u986f\u793a\u524d10\u7b46\nget_universe(start, end, sub_ind_c=['M2324 \u534a\u5c0e\u9ad4\u696d'])[0:10]\n</code></pre>\n<p></p>"},{"location":"example/documents14/#case5-m2324-semiconductorm2325-computer-and-peripheral-equipment","title":"case5 \u53d6\u5b50\u7522\u696d\u5225\u66fe\u7d93\u70ba\"M2324 Semiconductor\"&amp;\"M2325 Computer and Peripheral Equipment\"\u7684\u8b49\u5238","text":"<p>Return to Examples Menu</p>\n<pre><code># \u50c5\u986f\u793a\u524d10\u7b46\nget_universe(start, end, sub_ind_e=['M2324 Semiconductor',\n                                    'M2325 Computer and Peripheral Equipment'])[0:10]\n</code></pre>\n<p></p>"},{"location":"example/documents14/#case6-etffky","title":"case6 \u53d6\u8b49\u5238\u7a2e\u985e\u70ba\"ETF\"\u53ca\"\u666e\u901a\u80a1\"\uff08\u4e0d\u542bF\u80a1\u6216KY\u80a1\uff09\u4e14\u639b\u724c\u65bc\u8b49\u5238\u4ea4\u6613\u6240\u7684\u8b49\u5238","text":"<p>Return to Examples Menu</p>\n<pre><code># \u50c5\u986f\u793a\u524d10\u7b46\nget_universe(start, end, stktp_c=['ETF', '\u666e\u901a\u80a1'], mkt=['TWSE'])[0:10]\n</code></pre>\n<p></p>"},{"location":"example/documents14/#case7-ix000250","title":"case7 \u53d6\u66fe\u7d93\u70ba\"IX0002\"\uff08\u53f0\u706350\u6307\u6578\uff09\u6210\u4efd\u80a1\u7684\u8b49\u5238","text":"<p>Return to Examples Menu</p>\n<pre><code># \u50c5\u986f\u793a\u524d10\u7b46\nget_universe(start, end, idx_id='IX0002')[0:10]\n</code></pre>\n<p></p>"},{"location":"example/documents14/#case8-m1100-ix0006","title":"case8 \u53d6\u4e3b\u7522\u696d\u5225\u66fe\u7d93\u70ba\"M1100 \u6c34\u6ce5\u5de5\u696d\"\u4e14\u70ba\"IX0006\"\uff08\u53f0\u7063\u9ad8\u80a1\u606f\u6307\u6578\uff09\u6210\u4efd\u80a1\u7684\u8b49\u5238","text":"<p>Return to Examples Menu</p>\n<pre><code># \u50c5\u986f\u793a\u524d10\u7b46\nget_universe(start, end, main_ind_c='M1100 \u6c34\u6ce5\u5de5\u696d', idx_id='IX0006')[0:10]\n</code></pre>\n<p></p>"},{"location":"example/documents14/#case9-fky","title":"case9 \u53d6\u975e\u91d1\u878d\u696d\u7684\u666e\u901a\u80a1\uff08\u4e0d\u542bF\u80a1\u6216KY\u80a1\uff09","text":"<p>Return to Examples Menu</p>\n<pre><code># \u50c5\u986f\u793a\u524d10\u7b46\nget_universe(start, end, main_ind_c=['\u4e00\u822c\u7522\u696d']\n             , stktp_c='\u666e\u901a\u80a1')[0:10]\n</code></pre>"},{"location":"example/documents15/","title":"Zipline \u8cc7\u6599\u7269\u4ef6\u4ecb\u7d39","text":"<p>\u5728 Zipline \u4e2d\uff0c\u6709\u591a\u7a2e\u5167\u5efa\u8cc7\u6599\u7269\u4ef6\u53ef\u4f9b\u6f14\u7b97\u6cd5\u5b58\u53d6\u8cc7\u6599\u8207\u8ffd\u8e64\u8b8a\u6578\u3002\u5e38\u898b\u7684\u8cc7\u6599\u7269\u4ef6\u5305\u62ec <code>context</code>\u3001<code>data</code>\u3001<code>pipeline_output()</code>\u3001<code>record()</code>\u3001<code>get_bundle_price()</code>\u3001<code>portfolio</code>\u3001<code>account</code> \u53ca <code>get_open_orders()</code> \u7b49\uff0c\u4ee5\u4e0b\u5c07\u9010\u4e00\u4ecb\u7d39\u5176\u7528\u9014\u8207\u4f7f\u7528\u65b9\u5f0f\u3002</p>"},{"location":"example/documents15/#context","title":"context \u7269\u4ef6","text":"<p><code>context</code> \u662f Zipline \u7b56\u7565\u7684\u6838\u5fc3\uff0c\u7528\u4f86\u5132\u5b58\u7b56\u7565\u57f7\u884c\u904e\u7a0b\u4e2d\u7684\u72c0\u614b\u8207\u8b8a\u6578\uff0c\u8b93\u4f60\u5728\u4e0d\u540c\u7684\u51fd\u6578\uff08\u5982 <code>initialize</code>\u3001<code>before_trading_start</code>\u3001<code>handle_data</code>\uff09\u4e2d\u90fd\u80fd\u5b58\u53d6\u8207\u5171\u4eab\u8cc7\u6599\u3002\u4f8b\u5982\u4f60\u53ef\u4ee5\u5728 <code>initialize()</code> \u4e2d\u5b9a\u7fa9\u6295\u8cc7\u6a19\u7684\u6e05\u55ae\u8207\u53c3\u6578\uff0c\u4e26\u65bc\u5f8c\u7e8c\u7b56\u7565\u57f7\u884c\u4e2d\u6301\u7e8c\u4f7f\u7528\uff1a</p> <pre><code>def initialize(context):\n    context.stocklist = ['2330', '2317']\n    context.max_leverage = 1.0\n</code></pre>"},{"location":"example/documents15/#data","title":"data \u7269\u4ef6","text":"<p><code>data</code> \u63d0\u4f9b\u6bcf\u65e5\u5e02\u5834\u8cc7\u6599\uff0c\u5305\u542b\u5831\u50f9\uff08price\uff09\u3001\u6210\u4ea4\u91cf\uff08volume\uff09\u3001\u662f\u5426\u53ef\u4ea4\u6613\uff08can_trade\uff09\u7b49\u8cc7\u8a0a\u3002\u5e38\u898b\u7528\u6cd5\u5982\u4e0b\uff1a</p> <pre><code>def handle_data(context, data):\n    price = data.current(symbol(\"2330\"), 'price')\n    volume = data.current(symbol(\"2330\"), 'volume')\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u900f\u904e\uff1a</p> <pre><code>data.can_trade(symbol(\"2330\"))\n</code></pre> <p>\u4f86\u78ba\u8a8d\u67d0\u80a1\u7968\u7576\u65e5\u662f\u5426\u53ef\u4ee5\u9032\u884c\u4ea4\u6613\uff08\u5982\u672a\u505c\u724c\u3001\u6d41\u52d5\u6027\u8db3\u5920\u7b49\uff09\u3002</p>"},{"location":"example/documents15/#pipeline_output","title":"pipeline_output()","text":"<p>\u82e5\u4f60\u6709\u5efa\u7acb Pipeline \u7528\u4f86\u9032\u884c\u689d\u4ef6\u7be9\u9078\u6216\u56e0\u5b50\u8a08\u7b97\uff0c\u53ef\u4ee5\u900f\u904e <code>pipeline_output()</code> \u4f86\u53d6\u5f97\u7d50\u679c\u3002\u5b83\u6703\u56de\u50b3\u4e00\u500b DataFrame\uff0c\u5305\u542b\u901a\u904e\u689d\u4ef6\u7684\u6a19\u7684\u8207\u5c0d\u61c9\u7684\u6b04\u4f4d\u6578\u503c\u3002</p> <pre><code>def before_trading_start(context, data):\n    context.output = pipeline_output('my_pipeline')\n</code></pre> <p>\u9019\u4e9b\u7d50\u679c\u53ef\u7528\u4f86\u8a2d\u5b9a\u6bcf\u65e5\u7684\u6295\u8cc7\u6e05\u55ae\uff0c\u642d\u914d\u76ee\u6a19\u6b0a\u91cd\u9032\u884c\u518d\u5e73\u8861\u3002</p>"},{"location":"example/documents15/#record","title":"record()","text":"<p><code>record()</code> \u53ef\u7528\u4f86\u5728\u56de\u6e2c\u904e\u7a0b\u4e2d\u8a18\u9304\u91cd\u8981\u8b8a\u6578\uff0c\u4f8b\u5982\u69d3\u687f\u6bd4\u7387\u3001\u73fe\u91d1\u6c34\u4f4d\u3001\u6295\u8cc7\u5831\u916c\u7b49\uff0c\u4e4b\u5f8c\u53ef\u7522\u88fd\u5716\u8868\u9032\u884c\u8996\u89ba\u5316\u5206\u6790\u3002</p> <pre><code>def handle_data(context, data):\n    record(leverage=context.account.leverage, cash=context.portfolio.cash)\n</code></pre> <p>\u8a18\u9304\u7684\u8b8a\u6578\u6703\u5728\u56de\u6e2c\u5b8c\u6210\u5f8c\uff0c\u81ea\u52d5\u986f\u793a\u65bc\u5716\u8868\u4e2d\u3002</p>"},{"location":"example/documents15/#get_bundle_price","title":"get_bundle_price()","text":"<p><code>get_bundle_price()</code> \u662f TEJ \u5c08\u5c6c\u7684 Zipline \u64f4\u5145\u51fd\u6578\uff0c\u7528\u4f86\u8b80\u53d6\u67d0\u6bb5\u671f\u9593\u5167\u7684\u80a1\u7968\u6b77\u53f2\u8cc7\u6599\uff0c\u4e26\u4ee5 DataFrame \u7684\u5f62\u5f0f\u8f38\u51fa\uff0c\u9069\u5408\u7528\u65bc\u5206\u6790\u6216\u4f5c\u70ba\u5916\u90e8\u8f38\u5165\u8cc7\u6599\u3002</p> <pre><code>from zipline.data.data_portal import get_bundle_price\n\ndf = get_bundle_price(\n    bundle_name='tej_bundle',\n    calendar_name='XTAI',\n    start_dt='2020-01-01',\n    end_dt='2020-12-31'\n)\n</code></pre> <p>\u4f60\u53ef\u4ee5\u4f7f\u7528\u9019\u4efd\u8cc7\u6599\u505a\u70ba\u56de\u6e2c\u57fa\u790e\uff0c\u4e5f\u53ef\u4ee5\u642d\u914d TA-Lib \u6216\u81ea\u88fd\u56e0\u5b50\u9032\u884c\u8a08\u7b97\u3002</p>"},{"location":"example/documents15/#portfolio","title":"portfolio \u7269\u4ef6","text":"<p><code>context.portfolio</code> \u63d0\u4f9b\u7576\u524d\u6295\u8cc7\u7d44\u5408\u7684\u7e3d\u89bd\u8cc7\u8a0a\uff0c\u5305\u542b\u7e3d\u8cc7\u7522\u3001\u73fe\u91d1\u9918\u984d\u3001\u6bcf\u6a94\u80a1\u7968\u7684\u6301\u80a1\u72c0\u6cc1\u7b49\uff0c\u662f\u76e3\u63a7\u90e8\u4f4d\u8207\u4e0b\u55ae\u908f\u8f2f\u7684\u91cd\u8981\u4f9d\u64da\u3002</p> <p>\u5e38\u898b\u5c6c\u6027\u5305\u62ec\uff1a</p> <ul> <li><code>portfolio.cash</code>\uff1a\u76ee\u524d\u6301\u6709\u7684\u73fe\u91d1</li> <li><code>portfolio.positions</code>\uff1a\u6bcf\u6a94\u6301\u80a1\u8cc7\u8a0a\uff08\u5305\u542b\u80a1\u6578\u3001\u6210\u672c\u3001\u6700\u65b0\u5e02\u503c\uff09</li> <li><code>portfolio.positions[symbol(\"2330\")].amount</code>\uff1a\u67d0\u6a94\u80a1\u7968\u7684\u6301\u80a1\u6578\u91cf</li> <li><code>portfolio.positions[symbol(\"2330\")].cost_basis</code>\uff1a\u8a72\u6a94\u80a1\u7968\u7684\u5e73\u5747\u6210\u672c</li> </ul> <pre><code>def handle_data(context, data):\n    cash = context.portfolio.cash\n    amount = context.portfolio.positions[symbol(\"2330\")].amount\n</code></pre>"},{"location":"example/documents15/#account","title":"account \u7269\u4ef6","text":"<p><code>context.account</code> \u662f Zipline \u63d0\u4f9b\u7684\u5e33\u6236\u5c64\u7d1a\u8cc7\u8a0a\uff0c\u4e3b\u8981\u7528\u4f86\u8ffd\u8e64\u69d3\u687f\u4f7f\u7528\u3001\u6de8\u503c\u7b49\u7b56\u7565\u7e3d\u9ad4\u8ca1\u52d9\u72c0\u6cc1\u3002</p> <p>\u5e38\u898b\u5c6c\u6027\u5305\u62ec\uff1a</p> <ul> <li><code>account.leverage</code>\uff1a\u7576\u524d\u69d3\u687f\u6bd4\u7387</li> <li><code>account.net_leverage</code>\uff1a\u8003\u616e\u7a7a\u982d\u5f8c\u7684\u6de8\u69d3\u687f</li> <li><code>account.portfolio_value</code>\uff1a\u6574\u9ad4\u6295\u8cc7\u7d44\u5408\u50f9\u503c\uff08\u542b\u80a1\u7968\u8207\u73fe\u91d1\uff09</li> </ul> <pre><code>def handle_data(context, data):\n    record(leverage=context.account.leverage)\n</code></pre>"},{"location":"example/documents15/#get_open_orders","title":"get_open_orders()","text":"<p><code>get_open_orders()</code> \u662f Zipline \u63d0\u4f9b\u7684\u67e5\u8a62\u51fd\u6578\uff0c\u53ef\u7528\u4f86\u6aa2\u8996\u76ee\u524d\u6709\u54ea\u4e9b\u639b\u55ae\u5c1a\u672a\u6210\u4ea4\uff08\u5982\u9650\u50f9\u55ae\u3001\u505c\u640d\u55ae\u7b49\uff09\u3002</p> <pre><code>open_orders = get_open_orders()\n</code></pre> <p>\u4f60\u4e5f\u53ef\u4ee5\u6307\u5b9a\u67d0\u4e00\u6a94\u80a1\u7968\u9032\u884c\u67e5\u8a62\uff1a</p> <pre><code>open_orders_tsmc = get_open_orders(symbol(\"2330\"))\n</code></pre> <p>\u56de\u50b3\u5167\u5bb9\u70ba dictionary \u683c\u5f0f\uff1a</p> <ul> <li>key \u70ba\u8cc7\u7522\uff08\u5982 symbol(\"2330\")\uff09</li> <li>value \u70ba\u8a72\u8cc7\u7522\u7684\u639b\u55ae\u5217\u8868</li> </ul> <p>\u901a\u5e38\u642d\u914d <code>cancel_order()</code> \u4f7f\u7528\uff0c\u53ef\u5728\u7279\u5b9a\u908f\u8f2f\u689d\u4ef6\u4e0b\u81ea\u52d5\u53d6\u6d88\u672a\u6210\u4ea4\u639b\u55ae\u3002</p>"},{"location":"example/documents16/","title":"\u5efa\u7acb Pipeline","text":"<p>Pipeline \u5e6b\u52a9\u4f7f\u7528\u8005\u65bc\u6bcf\u500b\u4ea4\u6613\u65e5\u6574\u7406\u6578\u64da\uff0c\u4e26\u8a08\u7b97\u5404\u7a2e\u4ea4\u6613\u6240\u9700\u7684\u6307\u6a19\u3002\u5728\u7de8\u5beb\u4ea4\u6613\u7b56\u7565\u6642\uff0c\u6703\u5728 <code>initialize</code> \u51fd\u5f0f\u4e2d\u4f7f\u7528 <code>attach_pipeline</code> \u51fd\u6578\u5c07 Pipeline \u5c0e\u5165\u7b56\u7565\u7576\u4e2d\uff0c\u5354\u52a9\u6211\u5011\u7522\u51fa\u4ea4\u6613\u6240\u9700\u7684\u6307\u6a19\u3002</p>"},{"location":"example/documents16/#ziplinepipelinepipeline","title":"zipline.pipeline.Pipeline","text":""},{"location":"example/documents16/#parameters","title":"Parameters:","text":"<ul> <li>columns: dict, optional         columns \u70ba\u4e00\u500b\u5c07\u6b04\u4f4d\u540d\u7a31\u6620\u5c04\u5230 factors\u3001 filters \u6216 classifiers \u7684\u5b57\u5178\uff0c\u8b93 pipeline \u77e5\u9053\u8981\u8f38\u51fa\u54ea\u4e9b\u8cc7\u6599</li> <li>screen: zipline.pipeline.Filter, optional         \u7528\u4f86\u8a2d\u5b9a\u904e\u6ffe\u6a19\u7684\u689d\u4ef6\u3002</li> </ul> <p>\u65bc\u6b64\u4f8b\u4e2d\uff0c\u6211\u5011\u9996\u5148 ingest \u53f0\u7a4d\u96fb\u8207\u65fa\u5b8f\u80a1\u50f9\u3002</p> <pre><code>import tejapi\nimport pandas as pd\nimport numpy as np\n\nimport os\nos.environ['TEJAPI_BASE'] = 'https://api.tej.com.tw'\nos.environ['TEJAPI_KEY'] = 'your key'\n\nos.environ['ticker'] = '2330 2337'\nos.environ['mdate'] = '20170101 20230701'\n\nfrom zipline.pipeline import Pipeline\nfrom zipline.pipeline.data import TWEquityPricing\n</code></pre> <pre><code>!zipline ingest -b tquant\n</code></pre> <p>\u63a5\u8457\u5ba3\u544a\u4e00\u500b <code>make_pipeline</code>\uff0c\u4e26\u8a2d\u5b9a Pipeline \u7684 columns \u53c3\u6578\u3002</p> <p>\u5728\u9019\u908a\uff0c\u6211\u5011\u8a2d\u5b9a <code>columns</code> \u70ba <code>TWEquityPricing</code> \u4e2d\u7684\u6700\u65b0\u6536\u76e4\u50f9\u683c\u3002<code>TWEquityPricing</code> \u70ba\u50f9\u91cf\u8cc7\u6599\u7684\u8cc7\u6599\u96c6</p> <pre><code>def make_pipeline():\n    return Pipeline(columns={'close':TWEquityPricing.close.latest})\n</code></pre> <pre><code>my_pipe = make_pipeline()\n</code></pre>"},{"location":"example/documents16/#pipeline_1","title":"\u904b\u884c Pipeline","text":"<p>\u63a5\u8457\u6211\u5011\u4f7f\u7528 <code>run_pipeline</code>\uff0c<code>run_pipeline</code> \u50c5\u7528\u65bc\u7814\u7a76\uff0c\u4e26\u4e0d\u7528\u65bc\u7de8\u5beb\u4ea4\u6613\u7b56\u7565\u3002</p> <p>\u89c0\u5bdf Pipeline \u8f38\u51fa\u8cc7\u6599\uff0c\u53ef\u4ee5\u767c\u73fe Pipeline \u6703\u63d0\u4f9b\u6bcf\u9593\u516c\u53f8\u6bcf\u65e5\u7684\u6536\u76e4\u50f9\u3002\u7531\u65bc\u6211\u5011\u9019\u908a\u6c92\u6709\u8a2d\u5b9a <code>screen</code> \u8207 <code>mask</code>\uff0c\u6240\u4ee5\u7e3d\u5171\u5c31\u662f\u6211\u5011\u524d\u9762 ingest \u7684\u5169\u5bb6\u516c\u53f8\uff082330 \u8207 2327\uff09\u3002</p>"},{"location":"example/documents16/#ziplinetqresearchtej_pipelinerun_pipeline","title":"zipline.TQresearch.tej_pipeline.run_pipeline","text":""},{"location":"example/documents16/#parameters_1","title":"Parameters:","text":"<ul> <li>pipeline: zipline.pipeline.Pipeline         \u5df2\u7d93\u5b9a\u7fa9\u7684 pipeline\u3002</li> <li>start_date: str or pd.Timestamp         \u8d77\u59cb\u65e5\u671f\u3002</li> <li>end_date: str or pd.Timestamp         \u7d50\u675f\u65e5\u671f\u3002</li> </ul> <pre><code>from zipline.TQresearch.tej_pipeline import run_pipeline\n</code></pre> <pre><code>result = run_pipeline(my_pipe, '2018-01-03', '2022-12-30')\n</code></pre> <pre><code>result.head()\n</code></pre>"},{"location":"example/documents19/","title":"\u7b56\u7565\u64b0\u5beb","text":"<pre><code>from zipline.api import set_slippage, set_commission, set_benchmark, attach_pipeline, order, order_target, symbol, pipeline_output, record\nfrom zipline.finance import commission, slippage\nfrom zipline.data import bundles\nfrom zipline import run_algorithm\nfrom zipline.pipeline import Pipeline\nfrom zipline.pipeline.filters import StaticAssets, StaticSids\nfrom zipline.pipeline.factors import BollingerBands\nfrom zipline.pipeline.data import EquityPricing\n\nbundle = bundles.load('tquant')\nir0001_asset = bundle.asset_finder.lookup_symbol('IR0001', as_of_date=None)\n\ndef make_pipeline():\n    perf = BollingerBands(inputs=[EquityPricing.close], window_length=20, k=2)\n    upper, middle, lower = perf.upper, perf.middle, perf.lower\n    curr_price = EquityPricing.close.latest\n\n    return Pipeline(\n        columns={\n            'upper': upper,\n            'middle': middle,\n            'lower': lower,\n            'curr_price': curr_price\n        },\n        screen=~StaticAssets([ir0001_asset])\n    )\n\ndef initialize(context):\n    context.last_buy_price = 0\n    set_commission(commission.PerShare(cost=0.00285))\n    set_benchmark(symbol('IR0001'))\n    attach_pipeline(make_pipeline(), 'mystrategy')\n    context.last_signal_price = 0\n\ndef handle_data(context, data):\n    out_dir = pipeline_output('mystrategy')\n    for i in out_dir.index:\n        sym = i.symbol\n        upper = out_dir.loc[i, 'upper']\n        middle = out_dir.loc[i, 'middle']\n        lower = out_dir.loc[i, 'lower']\n        curr_price = out_dir.loc[i, 'curr_price']\n        cash_position = context.portfolio.cash\n        stock_position = context.portfolio.positions[i].amount\n\n        buy, sell = False, False\n\n        record(\n            **{\n                f'price_{sym}': curr_price,\n                f'upper_{sym}': upper,\n                f'lower_{sym}': lower,\n                f'buy_{sym}': buy,\n                f'sell_{sym}': sell\n            }\n        )\n\n        if stock_position == 0:\n            if (curr_price &lt;= lower) and (cash_position &gt;= curr_price * 1000):\n                order(i, 1000)\n                context.last_signal_price = curr_price\n                buy = True\n                record(\n                    **{\n                        f'buy_{sym}': buy\n                    }\n                )\n        elif stock_position &gt; 0:\n            if (curr_price &lt;= lower) and (curr_price &lt;= context.last_signal_price) and (cash_position &gt;= curr_price * 1000):\n                order(i, 1000)\n                context.last_signal_price = curr_price\n                buy = True\n                record(\n                    **{\n                        f'buy_{sym}': buy\n                    }\n                )\n            elif (curr_price &gt;= upper):\n                order_target(i, 0)\n                context.last_signal_price = 0\n                sell = True\n                record(\n                    **{\n                        f'sell_{sym}': sell\n                    }\n                )\n            else:\n                pass\n        else:\n            pass\n\ndef analyze(context, perf):\n    pass\n\nresults = run_algorithm(\n    start=pd.Timestamp('2008-07-02', tz='UTC'),\n    end=pd.Timestamp('2022-07-02', tz='UTC'),\n    initialize=initialize,\n    bundle='tquant',\n    analyze=analyze,\n    capital_base=5e4,\n    handle_data=handle_data\n)\n\nresults\n</code></pre>"},{"location":"example/documents19/#_2","title":"\u63d0\u53d6\u4ea4\u6613\u6578\u64da","text":"<pre><code>from pyfolio.utils import extract_rets_pos_txn_from_zipline\n\nreturns, positions, transactions = extract_rets_pos_txn_from_zipline(results)\nbenchmark_rets = results.benchmark_return\n\n# \u6642\u5340\u6a19\u6e96\u5316\nreturns.index = returns.index.tz_localize(None).tz_localize('UTC')\npositions.index = positions.index.tz_localize(None).tz_localize('UTC')\ntransactions.index = transactions.index.tz_localize(None).tz_localize('UTC')\nbenchmark_rets.index = benchmark_rets.index.tz_localize(None).tz_localize('UTC')\n</code></pre>"},{"location":"example/documents19/#_3","title":"\u751f\u6210\u5b8c\u6574\u7e3e\u6548\u5831\u544a","text":"<p><code>python pyfolio.tears.create_full_tear_sheet(returns=returns,                                      positions=positions,                                      transactions=transactions,                                      benchmark_rets=benchmark_rets                                     )</code>P</p>"},{"location":"example/documents2/","title":"TQuant Lab \u5206\u6790\u6d41\u7a0b","text":""},{"location":"example/documents2/#_1","title":"\u7c21\u6613\u6d41\u7a0b\u5716","text":""},{"location":"example/documents2/#_2","title":"\u8a73\u7d30\u6d41\u7a0b\u5716","text":""},{"location":"example/documents23/","title":"Information Analysis","text":"<ul> <li>Information Coefficient\uff08IC\uff09\u662f\u53e6\u4e00\u7a2e\u89c0\u5bdf\u56e0\u5b50\u9810\u6e2c\u6027\u7684\u65b9\u6cd5\uff0c\u900f\u904e\u8a08\u7b97**\u56e0\u5b50\u503c**\u8207**\u6301\u6709\u671f\u5831\u916c**\u7684**\u65af\u76ae\u723e\u66fc\u7b49\u7d1a\u76f8\u95dc\u4fc2\u6578\uff08Spearman rank correlation coefficient\uff09**\u800c\u5f97\u3002</li> <li>\u7c21\u800c\u8a00\u4e4b\uff0cIC\u63d0\u4f9b\u4e86\u4e00\u7a2e\u8a55\u4f30\u65b9\u5f0f\uff0c\u4f86\u78ba\u5b9a\u8f03\u9ad8\u7684\u56e0\u5b50\u503c\u662f\u5426\u610f\u5473\u8457\u66f4\u9ad8\u7684\u5831\u916c\u7387\uff0c\u5373\u662f\u5426\u5b58\u5728\u55ae\u8abf\u905e\u589e\u7684\u95dc\u4fc2\u3002\u56e0\u6b64\uff0c\u7406\u60f3\u60c5\u6cc1\u4e0b\uff0c\u6211\u5011\u5e0c\u671bIC\u503c\u8d8a\u9ad8\u8d8a\u597d\u3002\u5728\u4e3b\u52d5\u6295\u8cc7\u7b56\u7565\u4e2d\uff0cIC\u4e5f\u5e38\u88ab\u7528\u4f86\u8a55\u4f30\u57fa\u91d1\u7d93\u7406\u4eba\u7684\u9810\u6e2c\u80fd\u529b\u3002</li> <li>\u7531\u65bcIC\u662f\u7b49\u7d1a\u76f8\u95dc\u4fc2\u6578\uff0c\u5176\u503c\u7684\u7bc4\u570d\u662f\u4ecb\u65bc+1\u5230-1\u4e4b\u9593\u3002\u7576IC=1\u6642\uff0c\u610f\u5473\u8457\u8a72\u56e0\u5b50\u5b8c\u5168\u6c92\u6709\u96dc\u8a0a\uff0c\u4e26\u53ef\u4ee5\u505a\u51fa\u5b8c\u7f8e\u7684\u9810\u6e2c\uff1bIC=0\u6642\uff0c\u8868\u793a\u8a72\u56e0\u5b50\u7121\u9810\u6e2c\u80fd\u529b\uff0c\u5168\u70ba\u96dc\u8a0a\uff1b\u82e5IC\u503c\u70ba\u8ca0\u6642\uff0c\u5247\u4ee3\u8868\u9810\u6e2c\u65b9\u5411\u8207\u771f\u5be6\u65b9\u5411\u5b8c\u5168\u76f8\u53cd\uff0c\u9019\u6642\u6211\u5011\u53ef\u4ee5\u900f\u904e\u8abf\u6574\u9810\u6e2c\u65b9\u5411\u4f86\u61c9\u5c0d\u3002</li> <li>\u90a3\u9ebc\uff0cIC\u503c\u5230\u5e95\u8981\u591a\u9ad8\u624d\u7b97\u662f\u597d\u5462\uff1f\u4e0d\u540c\u7684\u7814\u7a76\u6216\u6295\u8cc7\u4eba\u5c0d\u6b64\u6709\u5404\u81ea\u7684\u898b\u89e3\u3002\u4f8b\u5982\uff0cGrinold and Kahn\uff082000\uff09\u6307\u51fa\uff1a\u4e00\u500b\u826f\u597d\u7684\u56e0\u5b50\u5176IC\u503c\u61c9\u9054\u5230**0.05**\uff1b\u4e00\u500b\u51fa\u8272\u7684\u56e0\u5b50\uff0c\u5176IC\u503c\u61c9\u9054\u52300.10\uff1b\u800c\u4e00\u500b\u9802\u5c16\u7684\u56e0\u5b50\uff0c\u5176IC\u503c\u61c9\u9054\u52300.15\u3002\u7136\u800c\uff0c\u5982\u679cIC\u503c\u9ad8\u90540.20\uff0c\u53ef\u80fd\u4ee3\u8868\u5b58\u5728\u56de\u6e2c\u504f\u5dee\u6216\u662f\u975e\u6cd5\u7684\u5167\u7dda\u4ea4\u6613\u884c\u70ba\u3002</li> <li>\u7136\u800c\uff0c\u9019\u7a2e\u8a55\u5224\u6a19\u6e96\u6703\u56e0\u4eba\u6216\u6240\u6295\u8cc7\u7684\u5e02\u5834\u800c\u7570\uff0c\u53ef\u6839\u64da\u500b\u4eba\u9700\u6c42\u8a2d\u5b9a\u66f4\u56b4\u683c\u6216\u66f4\u5bec\u9b06\u7684\u6a19\u6e96\u3002\u6b64\u5916\uff0c\u7576\u5b58\u5728\u591a\u500b\u5019\u9078\u56e0\u5b50\u6642\uff0c\u4e5f\u53ef\u4ee5\u5229\u7528IC\u5c0d\u5b83\u5011\u9032\u884c\u6bd4\u8f03\uff0c\u9078\u64c7IC\u503c\u8f03\u9ad8\u7684\u56e0\u5b50\u3002</li> </ul>"},{"location":"example/documents23/#information-analysis-vs-returns-analysis","title":"Information Analysis vs. Returns Analysis","text":"<ul> <li>\u5728\u5831\u916c\u7387\u5206\u6790\u4e2d\uff0c\u6211\u5011\u6703\u6309\u7167\u80a1\u7968\u7684\u56e0\u5b50\u503c\u5927\u5c0f\u9032\u884c\u5206\u7d44\uff0c\u7136\u5f8c\u5206\u6790\u6bcf\u500b\u5206\u7d44\u7684\u5831\u916c\u7387\u3002\u900f\u904e\u89c0\u5bdf**\u5404\u5206\u7d44\u7684\u5831\u916c\u7387\uff08quantiles return\uff0cQR\uff09\uff0c\u6211\u5011\u53ef\u4ee5\u4e86\u89e3\u4e00\u500b\u56e0\u5b50\u5728\u80a1\u7968\u6c60\u4e2d\u7684**\u9810\u6e2c\u80fd\u529b\u5206\u4f48\uff0c\u4f8b\u5982\uff0c\u67d0\u500b\u56e0\u5b50\u662f\u5426\u53ea\u5728top quantile\u7684\u80a1\u7968\u4e2d\u986f\u793a\u51fa\u9810\u6e2c\u80fd\u529b\uff0c\u6216\u8005\u5b83\u662f\u5426\u5c0d\u6574\u500b\u80a1\u7968\u6c60\u90fd\u5177\u6709\u9810\u6e2c\u529b\u3002</li> <li>\u8cc7\u8a0a\u4fc2\u6578\u5247\u662f\u63cf\u8ff0\u56e0\u5b50\u8207\u5176\u6301\u6709\u671f\u5831\u916c\u7387\u9593\u7dda\u6027\u95dc\u4fc2\u7684\u76f8\u95dc\u4fc2\u6578\u3002\u96d6\u7136\u8f03\u9ad8\u7684IC\u503c\u4ee3\u8868\u8a72\u56e0\u5b50\u5177\u6709\u8f03\u4f73\u7684\u9810\u6e2c\u80fd\u529b\uff0c\u4f46\u7531\u65bc\u8a08\u7b97IC\u6642\u6c92\u6709\u9032\u884c\u6a23\u672c\u5206\u7d44\uff0c\u6211\u5011\u7121\u6cd5\u660e\u78ba\u77e5\u9053\u9019\u9810\u6e2c\u80fd\u529b\u662f\u4f86\u81ea\u80a1\u7968\u6c60\u7684\u54ea\u90e8\u5206\u3002\u4e5f\u5c31\u662f\u8aaa\uff0c\u4e00\u500b\u56e0\u5b50\u53ef\u80fd\u53ea\u5728\u80a1\u7968\u6c60\u7684\u67d0\u4e00\u5b50\u96c6\u4e2d\u5177\u6709\u9810\u6e2c\u6548\u679c\u3002</li> <li>\u70ba\u4e86\u66f4\u5168\u9762\u8a55\u4f30\u4e00\u500b\u56e0\u5b50\uff0c\u6700\u597d\u662f\u7d50\u5408\u4f7f\u7528\u5169\u7a2e\u5206\u6790\u5de5\u5177\u3002IC\u63d0\u4f9b\u4e86\u8f03\u70ba\u4e00\u822c\u5316\u7684\u8996\u89d2\uff0c\u800cQR\u5247\u63d0\u4f9b\u4e86\u66f4\u6df1\u5165\u7684\u89c0\u9ede\uff0c\u80fd\u5920\u660e\u78ba\u986f\u793a\u56e0\u5b50\u5728\u54ea\u4e9b\u5206\u7d44\u4e2d\u7684\u9810\u6e2c\u80fd\u529b\u6700\u5f37\uff0c\u4ee5\u53ca\u5728\u54ea\u4e9b\u5206\u7d44\u4e2d\u6548\u679c\u4e0d\u90a3\u9ebc\u660e\u986f\u3002\u82e5\u50c5\u4f9d\u8cf4IC\uff0c\u53ef\u80fd\u6703**\u907a\u6f0f\u56e0\u5b50\u5728\u4e0d\u540c\u80a1\u7968\u4e4b\u9593\u7684\u8868\u73fe\u5dee\u7570**\u3002\u53cd\u4e4b\uff0c\u82e5\u53ea\u8003\u616eQR\u800c\u4e0d\u8003\u91cfIC\uff0c\u5247\u53ef\u80fd\u6703\u5ffd\u7565\u6389**\u56e0\u5b50\u6574\u9ad4\u7684\u9810\u6e2c\u5f37\u5ea6**\u3002</li> </ul>"},{"location":"example/documents23/#performance-metrics-plotting-functions","title":"Performance Metrics &amp; Plotting Functions","text":""},{"location":"example/documents23/#ic-time-series","title":"IC Time Series","text":"<p>\u5229\u7528<code>factor_information_coefficient</code>\u51fd\u6578\u8a08\u7b97\u5404\u6301\u6709\u671f\u4e0b\u6bcf\u4e00\u65e5\u7684IC\u503c\uff0c\u89c0\u5bdf\u56e0\u5b50\u9810\u6e2c\u529b\u96a8\u6642\u9593\u8b8a\u52d5\u7684\u60c5\u6cc1\u3002</p>"},{"location":"example/documents23/#_1","title":"\u8a08\u7b97\u65b9\u5f0f\uff1a","text":"<p>\\(\\({\u5728\u6642\u9edet\u7684IC\u503c\uff08IC_{t, n}\uff09=}{Corr(\u56e0\u5b50\u503c_{i,t}}{ ,}{\u6301\u6709\u671f\u5831\u916c\u7387_{i,t,n})}\\)\\) - \u5176\u4e2d\uff0ci\u70ba\u516c\u53f8\u3001n\u70ba\u6301\u6709\u671f\u3001Corr\u70ba\u65af\u76ae\u723e\u66fc\u76f8\u95dc\u4fc2\u6578\u3002 - \u82e5date=2013-01-03\uff0c\u6301\u6709\u671f=10D\uff1a   Corr(date=2013-01-03\u7576\u5929\u6240\u6709\u80a1\u7968\u7684**\u56e0\u5b50\u503c**, date=2013-01-03\u7576\u5929\u6240\u6709\u80a1\u7968\u6301\u670910D\u7684**\u5831\u916c\u7387**)</p> <pre><code>ic = alphalens.performance.factor_information_coefficient(factor_data)\nic.head()\n</code></pre> <p>\u5229\u7528<code>plotting.plot_ic_ts</code>\u51fd\u6578\u628a\u4e0d\u540c\u6642\u9ede\u7684IC\u503c\u7e6a\u88fd\u6210\u6298\u7dda\u5716\uff0c\u53ef\u4ee5\u4e86\u89e3\u56e0\u5b50\u9810\u6e2c\u80fd\u529b\u96a8\u8457\u6642\u9593\u7684\u8b8a\u5316\u60c5\u6cc1\u3002 - \u901a\u5e38\u6703\u5e0c\u671b\u770b\u5230IC\u5728\u6642\u9593\u5e8f\u5217\u4e0a\u5927\u90e8\u5206\u7684\u6642\u9593\u9ede\u7686**\u7a69\u5b9a\u70ba\u6b63\uff08\u751a\u81f3\uff1e0.05\uff09\uff0c\u4e14**\u64c1\u6709\u8f03\u5927\u7684IC\u5747\u503c**\u4ee5\u53ca**\u8f03\u5c0f\u7684IC\u6a19\u6e96\u5dee\u3002 - \u5176\u4e2d\uff0c\u5716\u4e2d\u85cd\u8272\u7dda\u70ba\u6bcf\u65e5\u7684IC\u503c\uff1b\u7da0\u8272\u7dda\u70ba\u8fd1\u4e00\u500b\u6708\uff08\u904e\u53bb22\u5929\uff09\u7684IC\u5747\u503c\uff1b\u5de6\u4e0a\u89d2\u986f\u793aIC\u5747\u503c\u53caIC\u6a19\u6e96\u5dee\uff08\u5229\u7528\u6bcf\u65e5\u7684IC\u503c\u8a08\u7b97\u5e73\u5747\u6578\u53ca\u6a19\u6e96\u5dee\uff09\u3002 - \u8fd1\u4e00\u500b\u6708\u7684IC\u5747\u503c\u8a08\u7b97\u65b9\u5f0f\u70ba<code>ic.rolling(window=22,min_periods=None).mean()</code>\uff0c\u56e0\u6b64\u7576\u904e\u53bb22\u5929\u7684\u8cc7\u6599\u4e2d\u6709\u4e00\u7b46\u662fNA\u6642\uff0c\u8fd1\u4e00\u500b\u6708\u7684IC\u5747\u503c\u5c31\u662fNA\u3002</p> <pre><code>alphalens.plotting.plot_ic_ts(ic)\n</code></pre>"},{"location":"example/documents23/#ic-histograms","title":"IC Histograms","text":"<ul> <li>\u5229\u7528<code>plotting.plot_ic_hist</code>\u51fd\u6578\u5c07\u4e0d\u540c\u6301\u6709\u671f\u7684IC\u5e8f\u5217\u8cc7\u6599\u7e6a\u88fd\u6210\u76f4\u65b9\u5716\u89c0\u5bdfIC\u503c\u7684\u5206\u4f48\u60c5\u6cc1\uff08Alphalens\u5229\u7528<code>seaborn.histplot()</code>\u51fd\u6578\u7e6a\u88fd\uff09\u3002</li> <li>\u901a\u5e38\u6703\u5e0c\u671b\u6709**\u8f03\u9ad8\u7684IC\u5747\u503c**\u4ee5\u53ca**\u8f03\u70ba\u96c6\u4e2d\u7684\u5206\u4f48\uff08\u6a19\u6e96\u5dee\u4f4e\uff09**\u3002  </li> <li>\u5716\u4e2d\u767d\u8272\u865b\u7dda\u70baIC\u5747\u503c\uff1b\u85cd\u8272\u5be6\u7dda\u70ba\u5229\u7528kernel density estimate\u65b9\u6cd5\u4f30\u8a08\u7684\u6a5f\u7387\u5bc6\u5ea6\u51fd\u6578\u3002\u56e0\u76f4\u65b9\u5716\u53d7\u9650\u65bc\u9577\u689d\u5bec\u5ea6\uff08bin\uff09\uff0c\u800c\u4e0d\u5920\u6e96\u78ba\u3002Alphalens\u5c07<code>seaborn.histplot()</code>\u7684<code>kde</code>\u53c3\u6578\u8a2d\u70baTrue\uff0c\u5229\u7528kernel density estimate\u7684\u65b9\u5f0f\u4f30\u8a08\u6a5f\u7387\u5bc6\u5ea6\uff0c\u5f97\u5230\u5e73\u6ed1\u4e14\u9023\u7e8c\u7684\u7d50\u679c\u3002</li> </ul> <pre><code>alphalens.plotting.plot_ic_hist(ic)\n</code></pre>"},{"location":"example/documents23/#ic-q-q-plot","title":"IC Q-Q Plot","text":"<p>QQ\u5716\uff08\u4f7f\u7528<code>plot_ic_qq</code>\u51fd\u6578\uff09\u53ef\u4ee5\u89c0\u5bdf**IC\u503c\u7684\u6a5f\u7387\u5206\u914d\u662f\u5426\u8fd1\u4f3c\u65bc\u5e38\u614b\u5206\u914d**\u3002\u4ee5\u4e0b\u5716\u4f86\u89c0\u5bdf\uff0c\u82e5\u85cd\u8272\u9ede\u7684\u5206\u4f48\u5927\u81f4\u8cbc\u5408\u7d05\u8272\u7dda\uff08y=x\uff09\uff0c\u4ee3\u8868IC\u7684\u5206\u4f48\u63a5\u8fd1\u5e38\u614b\u5206\u914d\u3002</p> <pre><code>alphalens.plotting.plot_ic_qq(ic)\n</code></pre>"},{"location":"example/documents23/#monthly-ic-heatmap","title":"Monthly IC Heatmap","text":"<p>\u5c07IC\u503c\u6309\u6708\u53d6\u5e73\u5747\u3002</p> <p><pre><code>mean_monthly_ic = alphalens.performance.mean_information_coefficient(factor_data, \n                                                                     by_time='M')\nmean_monthly_ic.head()\n</code></pre> \u5229\u7528\u71b1\u5340\u5716\u89c0\u5bdf\u56e0\u5b50\u662f\u5426\u6709\u6708\u4efd\u6548\u61c9\u3002</p> <pre><code>alphalens.plotting.plot_monthly_ic_heatmap(mean_monthly_ic)\n</code></pre>"},{"location":"example/documents23/#information-coefficient-by-year","title":"Information Coefficient by Year","text":"<p>\u5c07IC\u503c\u6309\u5e74\u53d6\u5e73\u5747\u3002</p> <p><pre><code>mean_yearly_ic = alphalens.performance.mean_information_coefficient(factor_data,\n                                                                    by_time='1Y')\nmean_yearly_ic.head()\n</code></pre> <pre><code>fig = plt.figure(dpi=200)\nmean_yearly_ic.index = mean_yearly_ic.index.year\nmean_yearly_ic.plot.bar(figsize=(8, 4),rot=0,ax=plt.gca())\nplt.tight_layout()\n</code></pre></p>"},{"location":"example/documents23/#information-table","title":"Information Table","text":"<ul> <li> <p><code>IC Mean</code>\uff08IC\u5747\u503c\uff09\uff1a\u628a\u5404\u6301\u6709\u671f\u4e0b\u7684IC\u503c\u53d6\u5e73\u5747\u3002  </p> </li> <li> <p><code>IC Std.</code>\uff08IC\u6a19\u6e96\u5dee\uff09\uff1a\u5229\u7528\u5404\u6301\u6709\u671f\u4e0b\u7684IC\u503c\u8a08\u7b97\u6a23\u672c\u6a19\u6e96\u5dee\u3002  </p> </li> <li> <p><code>Risk-Adjusted IC</code>\uff08\u98a8\u96aa\u8abf\u6574\u5f8c\u7684IC\u503c\uff09\uff1a</p> </li> <li>= <code>IC Mean</code> / <code>IC Std.</code>\u3002</li> <li>\u98a8\u96aa\u8abf\u6574\u5f8c\u7684IC\u80fd\u517c\u9867\u56e0\u5b50**\u9078\u80a1\u80fd\u529b\u8207\u7a69\u5b9a\u6027**\uff0c\u76f8\u8f03\u65bcIC\u5747\u503c\uff0c\u662f\u66f4\u597d\u7684\u8861\u91cf\u6307\u6a19\u3002\u6295\u8cc7\u7d44\u5408\u7684\u8cc7\u8a0a\u6bd4\u7387\uff08information ratio\uff0cIR\uff09\u5927\u81f4\u4e0a\u7b49\u65bc\u98a8\u96aa\u8abf\u6574\u5f8c\u7684IC\u3002\u4e14\u56e0IR\u7684\u503c\u8d8a\u5927\u8d8a\u597d\uff0c\u6240\u4ee5\u98a8\u96aa\u8abf\u6574\u5f8c\u7684IC\u4e5f\u662f\u8d8a\u5927\u8d8a\u597d\u3002\uff08Qian and Hua, 2004\uff09  </li> <li> <p>\u95dc\u65bcIR\u7684\u9ad8\u4f4e\u6a19\u6e96\uff0c\u4e0d\u540c\u7684\u7814\u7a76\u6216\u6295\u8cc7\u4eba\u5c0d\u6b64\u6709\u5404\u81ea\u7684\u770b\u6cd5\u3002\u4f8b\u5982\uff0cGrinold and Kahn\uff082000\uff09\u8a8d\u70ba\u597d\u7684\u6295\u8cc7\u7d44\u5408IR\u61c9\u9054\u5230**0.5**\uff1b\u4e00\u500b\u51fa\u8272\u7684\u6295\u8cc7\u7d44\u5408IR\u5247\u61c9\u9054\u52301.0\u3002\u800c\u5168\u7403\u77e5\u540d\u7684\u8cc7\u7522\u7ba1\u7406\u516c\u53f8\u5bcc\u9054\u570b\u969b\uff08Fidelity International\uff09\u8a8d\u70ba\uff0cIR&gt;=0.4\u662f\u76f8\u5c0d\u8f03\u4f73\u7684\u3002</p> </li> <li> <p><code>IC Skew</code>\uff1a</p> </li> <li>\u5229\u7528<code>scipy.stats.skew()</code>\u51fd\u6578\u8a08\u7b97IC\u503c\u7684\u504f\u614b\u4fc2\u6578\uff08SciPy\u662f\u4e00\u500b\u958b\u6e90\u7684Python\u6f14\u7b97\u6cd5\u5eab\u548c\u6578\u5b78\u5de5\u5177\u5305\uff09\u3002</li> <li><code>scipy.stats.skew()</code>\u7684<code>bias</code>\u53c3\u6578\u8a2d\u5b9a\u70ba\u70baTrue\uff0c\u4ee3\u8868\u672a\u5c07\u5229\u7528\u5c0f\u6a23\u672c\u8cc7\u6599\u8a08\u7b97\u504f\u614b\u4fc2\u6578\u9020\u6210\u7684\u504f\u8aa4\u9032\u884c\u4fee\u6b63\u3002</li> <li> <p>\u5e38\u614b\u5206\u914d\u7684\u504f\u614b\u4fc2\u6578\u70ba0\uff08by Fisher\u2019s definition\uff09\u3002scipy.stats.skew </p> </li> <li> <p><code>IC Kurtosis</code>\uff1a</p> </li> <li>\u5229\u7528<code>scipy.stats.kurtosis()</code>\u51fd\u6578\u8a08\u7b97IC\u503c\u7684\u5cf0\u614b\u4fc2\u6578\u3002</li> <li><code>scipy.stats.skew()</code>\u7684<code>bias</code>\u53c3\u6578\u8a2d\u5b9a\u70ba\u70baTrue\uff0c\u4ee3\u8868\u672a\u5c07\u5229\u7528\u5c0f\u6a23\u672c\u8cc7\u6599\u8a08\u7b97\u5cf0\u614b\u4fc2\u6578\u9020\u6210\u7684\u504f\u8aa4\u9032\u884c\u4fee\u6b63\u3002</li> <li> <p>\u5e38\u614b\u5206\u914d\u7684\u5cf0\u614b\u4fc2\u6578\u70ba0\uff08by Fisher\u2019s definition\uff09\u3002scipy.stats.kurtosis </p> </li> <li> <p><code>t-stat(IC)</code>\u8207<code>p-value(IC)</code>\uff1a\u5229\u7528<code>scipy.stats.ttest_lsamp()</code>\uff0c\u5c07IC\u8cc7\u6599\u9032\u884cT\u6aa2\u5b9a\uff0c\u6aa2\u9a57\u5176\u662f\u5426\u986f\u8457\u7570\u65bc0\u3002   \\(\\({\u6aa2\u5b9a\u7d71\u8a08\u91cf=}\\frac{IC Mean\uff0d0}{\\sqrt{\\frac {IC Std.}{\u6a23\u672c\u6578}}}\\)\\) </p> </li> </ul> <p><pre><code>alphalens.plotting.plot_information_table(ic)\n</code></pre> <pre><code>print(stats.skew(ic))  #Alphalens\u8a08\u7b97\u7684\u7248\u672c\nprint(stats.skew(ic, bias=False)) #EXCEL\u8a08\u7b97\u7684\u7248\u672c\n\nprint(stats.kurtosis(ic))  #Alphalens\u8a08\u7b97\u7684\u7248\u672c\nprint(stats.kurtosis(ic, bias=False)) #EXCEL\u8a08\u7b97\u7684\u7248\u672c\n</code></pre></p>"},{"location":"example/documents23/#information-tear-sheet","title":"Information Tear Sheet","text":"<p>Information analysis \u6240\u6709\u5716\u8868</p> <pre><code>alphalens.tears.create_information_tear_sheet(factor_data)\n</code></pre>"},{"location":"example/documents25/","title":"Turnover Analysis","text":"<ul> <li>\u56e0\u5b50\u5468\u8f49\u7387\u9593\u63a5\u8861\u91cf**\u56e0\u5b50\u7684\u7a69\u5b9a\u6027**\u53ca**\u6f5b\u5728\u7684\u4ea4\u6613\u6210\u672c**\uff08Aphalens\u4e26\u6c92\u6709\u8003\u616e\u4f63\u91d1\u3001\u6ed1\u50f9\u7b49\u4ea4\u6613\u6210\u672c\uff09\u3002\u5468\u8f49\u7387\u4f4e\u7684\u56e0\u5b50\u80fd\u4f7f\u6295\u8cc7\u7d44\u5408\u4e0d\u9700\u8981\u983b\u7e41\u8abf\u6574\u6301\u80a1\uff0c\u4e5f\u9593\u63a5\u4ee3\u8868\u56e0\u5b50\u6709\u66f4\u597d\u7684\u6301\u7e8c\u6027\u4e14\u4eab\u6709\u8f03\u4f4e\u7684\u4ea4\u6613\u6210\u672c\u3002</li> <li>\u5728\u904e\u5f80\u6587\u737b\u4e2d\uff0cCarhart\uff081997\uff09\u548cChampagne, Karoui and Patel\uff082018\uff09\u90fd\u767c\u73fe\uff0c\u5468\u8f49\u7387\u8d8a\u9ad8\u7684\u5171\u540c\u57fa\u91d1\u7e3e\u6548\u5c31\u8d8a\u5dee\u3002\u56e0\u6b64\uff0c\u904e\u9ad8\u7684\u5468\u8f49\u7387\u6703\u4fb5\u8755\u6295\u8cc7\u7b56\u7565\u7684\u7372\u5229\uff0c\u4e26\u4e14\u7121\u8ad6\u8a72\u7b46\u4ea4\u6613\u6700\u7d42\u7d50\u679c\u662f\u8cfa\u9322\u6216\u8ce0\u9322\uff0c\u90fd\u9700\u8981\u652f\u4ed8\u56e0\u5468\u8f49\u7387\u9ad8\u800c\u7522\u751f\u7684\u6210\u672c\uff0c\u9019\u662f\u4e0d\u53ef\u5ffd\u8996\u7684\u3002</li> <li>\u9664\u6b64\u4e4b\u5916\uff0c\u5468\u8f49\u7387\u4e5f\u6703\u96a8**\u56e0\u5b50\u7684\u8cc7\u8a0a\u6642\u57df**\u4e0d\u540c\u800c\u6709\u6240\u5dee\u7570\u3002</li> <li>\u8cc7\u8a0a\u6642\u57df\uff08\u4e5f\u7a31\u70bashelf life\u6216information horizon\uff09\uff0c\u8cc7\u8a0a\u6642\u57df\u6307\u7684\u662f\u5229\u7528\u7279\u5b9a\u56e0\u5b50\u8cc7\u8a0a\u6240\u80fd\u9810\u6e2c\u7684\u6642\u9593\u7bc4\u570d\u3002\u6709\u4e9b\u56e0\u5b50\u7684\u8a0a\u865f\u53ef\u80fd\u5728\u5e7e\u5929\u5167\u8fc5\u901f\u6d88\u5931\uff0c\u800c\u6709\u4e9b\u5247\u53ef\u80fd\u6301\u7e8c\u4e00\u5e74\u4ecd\u4fdd\u6709\u5176\u9810\u6e2c\u80fd\u529b\uff08Grinold and Kahn, 2000\uff09\u3002</li> <li>\u5982\u679c\u4e00\u500b\u56e0\u5b50\u5177\u6709\u76f8\u5c0d\u77ed\u7684\u8cc7\u8a0a\u6642\u57df\uff08\u4f8b\u5982\u77ed\u671f\u53cd\u8f49\u56e0\u5b50\uff09\uff0c\u4ee3\u8868\u5b83\u53ea\u80fd\u9810\u6e2c\u77ed\u671f\u5167\u7684\u80a1\u50f9\u5831\u916c\uff0c\u9019\u6a23\u7684\u56e0\u5b50\u8a0a\u865f\u6703\u8fc5\u901f\u8870\u6e1b\uff08signal decays\uff09\uff0c\u5c0e\u81f4\u8f03\u9ad8\u5468\u8f49\u7387\uff0c\u56e0\u70ba\u6211\u5011\u9700\u8981\u4e0d\u65b7\u8abf\u6574\u6295\u8cc7\u90e8\u4f4d\u3002\u5982\u679c\u4e00\u500b\u56e0\u5b50\u5177\u6709\u76f8\u5c0d\u9577\u7684\u8cc7\u8a0a\u6642\u57df\uff08\u4f8b\u5982\u57fa\u672c\u9762\u56e0\u5b50\uff09\uff0c\u56e0\u5b50\u8a0a\u865f\u8870\u6e1b\u901f\u5ea6\u5c31\u6703\u8f03\u6162\uff0c\u5468\u8f49\u7387\u4e5f\u6703\u76f8\u5c0d\u8f03\u4f4e\uff08Qian, Sorensen and Hua, 2007\uff09\u3002</li> <li>Alphalens\u4e2d\u63d0\u4f9b\u4e86\u5468\u8f49\u7387\u5206\u6790\u7684\u5169\u7a2e\u5de5\u5177\uff08\u56e0\u5b50\u5468\u8f49\u7387\u53ca\u56e0\u5b50\u81ea\u6211\u76f8\u95dc\u4fc2\u6578\uff09\u4f9b\u6211\u5011\u4f7f\u7528\u3002\u5728\u6709\u591a\u500b\u5019\u9078\u56e0\u5b50\u7684\u60c5\u5f62\u4e0b\uff0c\u6211\u5011\u53ef\u4ee5\u5229\u7528\u9019\u4e9b\u5de5\u5177\u4f5c\u70ba\u56e0\u5b50\u9078\u64c7\u6a19\u6e96\u4e4b\u4e00\u3002\u800c\u7576\u6211\u5011\u5728\u5be6\u969b\u56de\u6e2c\u4e2d\u4f7f\u7528\u67d0\u500b\u56e0\u5b50\u6642\uff0c\u6211\u5011\u4e5f\u53ef\u4ee5\u5229\u7528\u9019\u4e9b\u5de5\u5177\u4f86\u8003\u616e\u8981\u4f7f\u7528\u54ea\u4e00\u7a2e\u518d\u5e73\u8861\u65b9\u6848\u3002</li> </ul>"},{"location":"example/documents25/#turnover","title":"\u56e0\u5b50\u5468\u8f49\u7387 Turnover","text":"<p>\u7b2cN\u7d44\uff08quantile\uff09\u5728\u6642\u9edet\u7684\u5468\u8f49\u7387 = \u672c\u671f\u5728\u7b2cN\u7d44\u4f46\u524dP\u671f\u4e0d\u5728\u9019\u4e00\u7d44\u7684\u80a1\u7968\u6578\u91cf\uff0f\u672c\u671f\u5728\u7b2cN\u7d44\u7684\u80a1\u7968\u6578\u91cf - \u82e5\u8cc7\u6599\u70ba\u65e5\u983b\u7387\u4e14\u6301\u6709\u671f\u70ba10\u65e5\uff0c\u5247\u524dP\u671f\u5c31\u4ee3\u8868\u524d10\u65e5\u3002 - \u6839\u64da\u4e0a\u8ff0\u516c\u5f0f\uff0c\u82e5\u8cc7\u6599\u70ba\u65e5\u983b\u7387\u4e14\u6301\u6709\u671f\u70ba10\u65e5\uff0c\u5247\u524dP\u671f\u5373\u4ee3\u8868\u524d10\u65e5\u3002\u82e5\u67d0\u4e00\u7d44\u7684\u5468\u8f49\u7387\u70ba5%\uff0c\u9019\u610f\u5473\u8457\u572810\u5929\u524d\u5c6c\u65bc\u9019\u500b\u5206\u7d44\u7684\u80a1\u7968\uff0c\u67095%\u5df2\u7d93\u4e0d\u518d\u5c6c\u65bc\u9019\u500b\u5206\u7d44\u3002 - \u5468\u8f49\u7387\u672c\u8eab\u6c92\u6709\u56fa\u5b9a\u7684\u6a19\u6e96\u4f86\u5224\u5b9a\u5176\u7406\u60f3\u7bc4\u570d\uff0c\u6709\u4e9b\u7d93\u7406\u4eba\u53ef\u80fd\u6703\u8a2d\u5b9a\u7279\u5b9a\u7684\u6295\u8cc7\u653f\u7b56\uff0c\u4f8b\u5982\uff1a\u6295\u8cc7\u7d44\u5408\u5468\u8f49\u7387\u4e0d\u5f97\u8d85\u904e20%\u3002\u6b64\u5916\uff0c\u6295\u8cc7\u98a8\u683c\u4e5f\u6703\u5f71\u97ff\u5468\u8f49\u7387\u3002\u7576\u6709\u591a\u500b\u540c\u98a8\u683c\u7684\u56e0\u5b50\u6642\uff0c\u53ef\u6bd4\u8f03\u5b83\u5011\u7684\u5468\u8f49\u7387\uff0c\u4e26\u5728IC\u503c\u76f8\u8fd1\u6642\uff0c\u512a\u5148\u9078\u64c7\u5468\u8f49\u7387\u8f03\u4f4e\u7684\u56e0\u5b50\u3002</p>"},{"location":"example/documents25/#autocorrelation","title":"\u56e0\u5b50\u81ea\u6211\u76f8\u95dc\u4fc2\u6578 Autocorrelation","text":"<ul> <li>\u56e0\u5b50\u81ea\u6211\u76f8\u95dc\u4fc2\u6578\u8861\u91cf**\u7576\u671f\u56e0\u5b50\u503c\u6392\u5e8f**\u8207**\u524d\u4e00\u671f\u56e0\u5b50\u503c\u6392\u5e8f**\u7684\u76f8\u95dc\u7a0b\u5ea6\u3002</li> <li>\u5468\u8f49\u7387\u8207\u81ea\u6211\u76f8\u95dc\u4fc2\u6578\u5448\u73fe\u8ca0\u76f8\u95dc\u3002\u56e0\u6b64\uff0c\u56e0\u5b50\u81ea\u6211\u76f8\u95dc\u4fc2\u6578\u63d0\u4f9b\u4e86\u53e6\u4e00\u7a2e\u8861\u91cf\u56e0\u5b50\u5468\u8f49\u7387\u7684\u65b9\u5f0f\u3002\u5982\u679c\u81ea\u6211\u76f8\u95dc\u6027\u4f4e\uff0c\u9019\u610f\u5473\u8457\u56e0\u5b50\u7684\u7576\u524d\u6392\u5e8f\u8207\u4e4b\u524d\u7684\u6392\u5e8f\u95dc\u806f\u5ea6\u4e0d\u5927\uff0c\u6240\u4ee5\u6295\u8cc7\u7d44\u5408\u53ef\u80fd\u9700\u8981\u983b\u7e41\u8abf\u6574\u6301\u80a1\uff0c\u5c0e\u81f4\u9ad8\u5468\u8f49\u7387\u3002\u800c\u81ea\u6211\u76f8\u95dc\u6027\u9ad8\u5247\u4ee3\u8868\u56e0\u5b50\u5728\u4e0d\u540c\u6642\u671f\u4e4b\u9593\u5b58\u5728\u8f03\u5927\u7684\u76f8\u95dc\u6027\u548c\u7a69\u5b9a\u6027\uff08\u5118\u7ba1\u9019\u4e0d\u6703\u5f71\u97ff\u5176\u9810\u6e2c\u50f9\u683c\u8b8a\u52d5\u7684\u80fd\u529b\uff09\u3002\u6240\u4ee5**\u81ea\u6211\u76f8\u95dc\u4fc2\u6578\u53ef\u4ee5\u8207\u56e0\u5b50\u5468\u8f49\u7387\u76f8\u4e92\u5370\u8b49\u3002**</li> <li>\u8a08\u7b97\u56e0\u5b50\u81ea\u6211\u76f8\u95dc\u7684\u516c\u5f0f\uff1a  </li> </ul> <p>\\(\\({\u5728\u6642\u9edet\u7684\u81ea\u6211\u76f8\u95dc\u4fc2\u6578 =}{Corr(\u56e0\u5b50\u503c_{i,t}}{ ,}{\u56e0\u5b50\u503c_{i,t-p})}\\)\\)   $$$$   - \u5176\u4e2d\uff0ci\u4ee3\u8868\u516c\u53f8\uff0cp\u662f\u6301\u6709\u671f\uff0cCorr\u8868\u793a\u65af\u76ae\u723e\u66fc\u76f8\u95dc\u4fc2\u6578\u3002   - \u82e5\u8cc7\u6599\u70ba\u65e5\u983b\u7387\u4e14\u6301\u6709\u671f\u70ba10\u65e5\uff0c\u5247\u524dP\u671f\u5c31\u4ee3\u8868\u524d10\u65e5\u3002  </p>"},{"location":"example/documents25/#performance-metrics-plotting-functions","title":"Performance Metrics &amp; Plotting Functions","text":""},{"location":"example/documents25/#quantile-turnover","title":"Quantile Turnover","text":"<p><code>quantile_turnover</code>\u51fd\u6578\u8a08\u7b97\u7b2cN\u7d44\u5468\u8f49\u7387\u7684\u516c\u5f0f\u70ba\uff1a\u672c\u671f\u5728\u7b2cN\u7d44\u4f46\u524dP\u671f\u4e0d\u5728\u9019\u4e00\u7d44\u7684\u8cc7\u7522\u6578\u91cf\uff0f\u672c\u671f\u5728\u7b2cN\u7d44\u7684\u8cc7\u7522\u6578\u91cf\u3002</p> <ul> <li>P\u7531period\u53c3\u6578\u63a7\u5236\u3002\u82e5\u8cc7\u6599\u70ba\u65e5\u983b\u7387\u4e14period\uff1d10\uff0c\u5247\u524dP\u671f\u5c31\u4ee3\u8868\u524d10\u65e5\uff1b\u901a\u5e38period\u6703\u8a2d\u5b9a\u8207\u6301\u6709\u671f\u76f8\u540c\u3002  </li> <li>N\u7531quantile\u53c3\u6578\u4f86\u6307\u5b9a\u3002\u82e5quantile\uff1d1\u5247\u8a08\u7b97\u7b2c1\u7d44\u7684\u5468\u8f49\u7387\u3002 </li> <li>\u901a\u5e38\u96a8\u8457**\u6301\u6709\u671f\u7684\u589e\u9577**\uff0c\u5468\u8f49\u7387\u4e5f\u76f8\u61c9\u4e0a\u5347\uff0c\u800c\u5468\u8f49\u7387\u7684\u6ce2\u52d5\u6027\u4ea6\u589e\u52a0\u3002\u9019\u662f\u56e0\u70ba\u8f03\u9577\u7684\u6642\u9593\u9593\u9694\u6703\u5e36\u4f86\u66f4\u591a\u7684\u65b0\u8cc7\u8a0a\uff0c\u56e0\u6b64\u6295\u8cc7\u7d44\u5408\u65bc**\u6bcf\u4e00\u6b21\u518d\u5e73\u8861**\u6642\u9700\u8981\u9032\u884c\u66f4\u983b\u7e41\u7684\u8abf\u6574\u3002\u9019\u4e26\u4e0d\u610f\u5473\u8457\u6301\u6709\u671f\u8d8a\u77ed\u8d8a\u597d\uff0c\u56e0\u70ba\u6301\u6709\u671f=1D\uff0c\u5c31\u4ee3\u8868\u9700\u8981\u6bcf\u5929\u518d\u5e73\u8861\uff0c\u4e00\u5e74\u4ee5252\u5929\u4f86\u7b97\uff0c\u5c31\u8981\u63db\u80a1252\u6b21\u3002</li> </ul> <p>\u4ee5\u4e0b\u8a08\u7b97\u6301\u6709\u671f=1d\u7684\u5468\u8f49\u7387\uff1a</p> <p><pre><code>quantile_turnover =\\\n{\n        HOLDING_PERIODS: pd.concat([alphalens.performance.quantile_turnover(factor_data['factor_quantile'],\n                                                           quantile=quantile,\n                                                           period=HOLDING_PERIODS)\n             for quantile in factor_data.factor_quantile.sort_values().unique().tolist()],axis=1,)\n        for HOLDING_PERIODS in (1, 5, 10)\n        }\n\nquantile_turnover\n</code></pre> \u5c07\u56e0\u5b50\u5468\u8f49\u7387\u7e6a\u88fd\u6210\u6298\u7dda\u5716\uff0c\u89c0\u5bdf\u5728\u6642\u5e8f\u5217\u4e0a\u7684\u8b8a\u5316\u3002 - \u5728\u6b64\uff0c\u6211\u5011\u53ea\u7e6a\u88fd**top quantile**\u8207**bottom quantile**\u7684\u5468\u8f49\u7387\u3002 - \u9019\u662f\u56e0\u70ba\u5728\u56e0\u5b50\u6295\u8cc7\u4e2d\uff0c\u6211\u5011\u901a\u5e38\u6703\u505a\u591atop quantile\u4e26\u540c\u6642\u653e\u7a7abottom quantile\u4f86\u5efa\u69cb\u591a\u7a7a\u5c0d\u6c96\u6295\u7d44\uff0c\u6216\u662f\u50c5\u505a\u591atop quantile\u4f86\u5efa\u7acb\u7d14\u505a\u591a\u6295\u7d44\u3002\u56e0\u6b64\uff0c\u9019\u5169\u500b\u5206\u7d44\u5c24\u70ba\u91cd\u8981\u3002</p> <pre><code>for HOLDING_PERIODS in (1, 5, 10):\n    alphalens.plotting.plot_top_bottom_quantile_turnover(quantile_turnover[HOLDING_PERIODS],\n                                                         period=HOLDING_PERIODS)\n    plt.tight_layout()\n</code></pre>"},{"location":"example/documents25/#factor-rank-autocorrelation","title":"Factor Rank Autocorrelation","text":"<p>\u5229\u7528<code>factor_rank_autocorrelation()</code>\u51fd\u6578\u8a08\u7b97\u56e0\u5b50\u81ea\u6211\u76f8\u95dc\u4fc2\u6578\u3002</p> <p><pre><code>factor_rank_autocorrelation=pd.DataFrame()\nfor HOLDING_PERIODS in (1, 5, 10):\n    factor_rank_autocorrelation=pd.concat([factor_rank_autocorrelation,\n                                           (alphalens.performance.factor_rank_autocorrelation(factor_data,\n                                                                                              period=HOLDING_PERIODS))],\n                                          axis=1\n                                         )\nfactor_rank_autocorrelation.head(15)\n</code></pre> \u5c07\u4e0d\u540c\u6301\u6709\u671f\u7684\u56e0\u5b50\u81ea\u6211\u76f8\u95dc\u4fc2\u6578\u7e6a\u88fd\u6210\u6298\u7dda\u5716\uff0c\u89c0\u5bdf\u5728\u6642\u5e8f\u5217\u4e0a\u7684\u8b8a\u5316\u3002\u540c\u6642\u6298\u7dda\u5716\u5de6\u4e0a\u89d2\u4e5f\u5448\u73fe**\u5e73\u5747\u81ea\u6211\u76f8\u95dc\u4fc2\u6578**\u3002</p> <pre><code>for HOLDING_PERIODS in (1, 5, 10):\n    alphalens.plotting.plot_factor_rank_auto_correlation(factor_rank_autocorrelation[HOLDING_PERIODS],\n                                                         period=HOLDING_PERIODS)\n    plt.tight_layout()\n</code></pre>"},{"location":"example/documents25/#turnover-table","title":"Turnover table","text":"<pre><code>alphalens.plotting.plot_turnover_table(factor_rank_autocorrelation,\n                                       quantile_turnover)\n</code></pre>"},{"location":"example/documents25/#turnover-tear-sheet","title":"Turnover Tear Sheet","text":"<p>\u6240\u6709 Turnover analysis \u5716\u8868 <pre><code>alphalens.tears.create_turnover_tear_sheet(factor_data)\n</code></pre></p>"},{"location":"example/documents28/","title":"TejToolAPI","text":"<p>\u5e6b\u52a9\u4f7f\u7528\u8005\u5feb\u901f\u53d6\u5f97\u4e14\u6574\u7406 TEJ \u8cc7\u6599\u5eab\u6240\u63d0\u4f9b\u7684\u8cc7\u8a0a\u3002</p> <pre><code>import os \nos.environ['TEJAPI_BASE'] = \"https://api.tej.com.tw\"\nos.environ['TEJAPI_KEY'] = \"your key\"\nimport TejToolAPI\nimport pandas as pd \nimport numpy as np\n</code></pre>"},{"location":"example/documents28/#tejtoolapiget_history_data","title":"TejToolAPI.get_history_data","text":"<p>\u53d6\u7684\u8b49\u5238\u76f8\u95dc\u6216\u4ea4\u6613\u76f8\u95dc\u7b49\u6b77\u53f2\u8cc7\u6599\u3002  </p>"},{"location":"example/documents28/#paramters","title":"Paramters:","text":"<ul> <li>ticker: iterable[str] \u6b32\u67e5\u8a62\u7684\u8cc7\u6599\u7684\u8b49\u5238\u4ee3\u78bc\u3002</li> <li>columns: iterable[str]</li> </ul> <p>\u6b32\u67e5\u8a62\u8cc7\u6599\u7684\u6b04\u4f4d\u540d\u7a31\uff0c\u6b04\u4f4d\u540d\u7a31\u8acb\u898b https://api.tej.com.tw/\u3002 - transfer_to_chinese: boolean \u662f\u5426\u5c07\u6b04\u4f4d\u8f49\u63db\u70ba\u82f1\u6587\u3002 - start: pd.Timestamp or str \u8cc7\u6599\u8d77\u59cb\u6642\u9593\u3002 - end: pd.Timestamp or str \u8cc7\u6599\u7d50\u675f\u6642\u9593\u3002 - fin_type = iterable[str] \u6c7a\u5b9a\u8cc7\u6599\u578b\u614b\u3002 A: \u7d2f\u7e3e\u8cc7\u6599 F: \u55ae\u5b63\u8cc7\u6599 TTM: \u79fb\u52d5\u56db\u5b63\u8cc7\u6599 - include_self_acc: str \u6295\u8cc7\u7528\u8ca1\u52d9\u5305\u542b\u81ea\u7d50\u548c\u8463\u4e8b\u6703\u6c7a\u8b70\u6578(include_self_acc = 'Y') \u50c5\u6295\u8cc7\u7528\u8ca1\u52d9(include_self_acc = 'N')</p>"},{"location":"example/documents28/#returns","title":"Returns:","text":"<p>pd.DataFrame</p> <pre><code>ticker = [\"2330\", \"1101\", \"3711\"]\ncolumns = [\"eps\"]\nTejToolAPI.get_history_data(\n    ticker = ticker,\n    columns = columns,\n    transfer_to_chinese = True,\n    start = pd.Timestamp(\"2021-07-02\"),\n    end = pd.Timestamp(\"2022-07-02\"),\n    fin_type = [\"A\", \"Q\", \"TTM\"],\n    include_self_acc = \"Y\"\n)\n</code></pre>"},{"location":"example/documents29/","title":"\u7248\u672c\u767c\u5e03","text":""},{"location":"example/documents29/#zipline-tej","title":"\u6aa2\u67e5 zipline-tej \u7248\u672c","text":"<p>\u82e5\u5df2\u5b89\u88dd\u597dzipline-tej\uff0c\u6211\u5011\u53ef\u900f\u904e\u4ee5\u4e0b\u6307\u4ee4\u986f\u793a\u7576\u524dzipline-tej\u7684\u7248\u672c\u3002 <pre><code>!pip show zipline-tej\n</code></pre> \u70ba\u78ba\u4fdd\u7576\u524d\u7248\u672c\u70ba\u6700\u65b0\uff0c\u53ef\u4ee5\u900f\u904e\u4ee5\u4e0b\u6307\u4ee4\u4ee5\u66f4\u65b0zipline-tej\u3002 <pre><code>!pip install --upgrade zipline-tej\n</code></pre></p>"},{"location":"example/documents29/#zipline-tej_1","title":"\u67e5\u770bzipline-tej\u7576\u524d\u7248\u672c","text":"<p>https://pypi.org/project/zipline-tej/</p>"},{"location":"example/documents29/#_2","title":"\u5176\u4ed6\u8cc7\u8a0a","text":"<p>TQuant Lab \u5b98\u65b9\u7db2\u7ad9 TQuant Lab Github</p>"},{"location":"example/documents3/","title":"TEJTOOLAPI \u8cc7\u6599\u6488\u53d6\u6574\u4f75","text":"<p>\u904b\u7528 TEJTOOLAPI \u6574\u4f75\u8cc7\u6599\u3002TEJTOOLAPI \u4e3b\u8981\u6574\u4f75\u80a1\u50f9\u8207\u4e0d\u540c\u5c6c\u6027\u7684\u8cc7\u6599\u5eab\uff0c\u900f\u904e\u8f38\u5165\u80a1\u7968\u4ee3\u78bc (TICKERS) \u548c\u6b04\u4f4d (FIELD) \u5f8c\uff0c\u53ef\u5c07\u6b32\u6293\u53d6\u7684\u8cc7\u6599\u6574\u4f75\u70ba\u4ee5\u65e5\u983b\u7387\u7684 DataFrame\u3002</p> <p>\u76ee\u524d\u53ef\u6293\u53d6\u7684\u8cc7\u6599\u5eab\u70ba\uff1a</p> <ul> <li>\u80a1\u50f9\u4ea4\u6613\u8cc7\u8a0a(TWN/APIPRCD)</li> <li>\u6708\u71df\u6536(TWN/APISALE1)</li> <li>\u6703\u8a08\u5e2b\u7c3d\u8b49\u8ca1\u52d9\u8cc7\u6599(TWN/AINVFQ1)</li> <li>\u4e09\u5927\u6cd5\u4eba\u3001\u878d\u8cc7\u5238\u3001\u7576\u6c96(TWN/APISHRACT)</li> <li>\u96c6\u4fdd\u5eab\u5b58(TWN/APISHRACTW)</li> <li>\u80a1\u7968\u65e5\u4ea4\u6613\u8a3b\u8a18\u8cc7\u8a0a(TWN/APISTKATTR)</li> <li>\u4ea4\u6613\u65e5\u671f\u8868(TWN/TRADEDAY_TWSE)</li> <li>\u8463\u76e3\u5168\u9ad4\u6301\u80a1\u72c0\u6cc1(TWN/APIBSTN1)</li> <li>\u5168\u9762\u6539\u9078\u7d71\u8a08(TWN/APICHGSTAT)</li> <li>\u8463\u4e8b\u9577\u8207\u9ad8\u968e\u4e3b\u7ba1\u8b8a\u52d5\u4e8b\u4ef6(TWN/APIDIRCHG)</li> <li>\u5408\u4f75\u6536\u8cfc(TWN/APIMA)</li> <li>\u80a1\u5229\u653f\u7b56(TWN/APIMT1)</li> <li>\u8cc7\u672c\u5f62\u6210(TWN/APISTK1)</li> <li>\u79c1\u52df\u61c9\u52df\u4eba\u8207\u516c\u53f8\u7684\u95dc\u4fc2(TWN/APISTKPRV)</li> <li>\u8463\u76e3\u7533\u5831\u8f49\u8b93-\u8f49\u8b93(TWN/APITRANS1)</li> <li>\u8463\u76e3\u7533\u5831\u8f49\u8b93-\u672a\u8f49\u8b93(TWN/APITRANS2)</li> <li>\u5eab\u85cf\u80a1\u5be6\u65bd\u4e8b\u4ef6\u7c3f(TWN/APITRS)</li> <li>\u4e3b\u8981\u6574\u4f75\u65b9\u6cd5\u662f\u4ee5\u4ea4\u6613\u65e5\u671f\u8868\u70ba\u7d22\u5f15\u6574\u4f75\u80a1\u50f9\u8207\u4e0d\u540c\u5c6c\u6027\u7684\u8cc7\u6599\uff0c\u4ee5\u4e0b\u793a\u7bc4 TEJTOOLAPI \u6574\u4f75\u80a1\u50f9\u8207\u4e0d\u540c\u5c6c\u6027\u8cc7\u6599\u8868\u7684\u6240\u6709\u6b04\u4f4d\u3002</li> </ul> <p>tejtoolapi \u53ca\u4ee5\u4e0a\u8cc7\u6599\u5eab\u76f8\u95dc\u6b04\u4f4d : https://tquant.tejwin.com/\u8cc7\u6599\u96c6/</p>"},{"location":"example/documents3/#_1","title":"\u74b0\u5883\u8a2d\u5b9a","text":"<pre><code>import os\nos.environ['TEJAPI_KEY'] = \"your key\" \nos.environ['TEJAPI_BASE'] = \"https://api.tej.com.tw\"\n\nos.environ['ticker'] = '2330 2454 2317 2882 2881'\nos.environ['mdate'] = '20000103 20230530'\n\nimport TejToolAPI \nfrom zipline.data import bundles\n</code></pre>"},{"location":"example/documents3/#tickers","title":"\u53d6\u5f97tickers","text":"<p><pre><code>bundle_data = bundles.load('tquant')\nuniverse = bundle_data.asset_finder.retrieve_all(bundle_data.asset_finder.equities_sids)#.remove(symbol('IR0001'))   \ntickers = [col.symbol for col in universe]\n</code></pre> \u81ea\u884ckey\u5165tickers <pre><code>tickers = ['2330','2454','2317','2882','2881']\n</code></pre></p>"},{"location":"example/documents3/#tejtoolapi_1","title":"tejtoolapi \u53d6\u5f97\u55ae\u7368\u8cc7\u6599\u5eab","text":"<p>\u6708\u71df\u6536\u7684\u6b04\u4f4d <pre><code>ticker = tickers\ncolumns = ['Sales_Accu_LastYear', 'Sales_Accu_3M',\n       'Sales_Per_Share_Accu_12M', 'YoY_Accu_Sales', 'YoY_Monthly_Sales',\n       'Sales_Per_Share_Accu_3M', 'Sales_Accu_3M_LastYear', 'Sales_Monthly',\n       'YoY_AccuSales_12M', 'YoY_Accu_Sales_3M', 'MoM_Monthly_Sales',\n       'Sales_Accumulated', 'QoQ_Accu_Sales_3M', 'MoM_Accu_Sales_3M',\n       'Sales_Monthly_LastYear', 'Outstanding_Shares_1000_Shares']\n\ndata = TejToolAPI.get_history_data(ticker=ticker, \n                                   columns=columns,\n                                   transfer_to_chinese=False,                                   \n                                  )\ndata   \n</code></pre> \u91cf\u5316\u7c4c\u78bc_\u5468 - \u96c6\u4fdd\u5eab\u5b58\u6b04\u4f4d <pre><code>ticker = tickers\ncolumns = ['Total_Custodied_Shares_1000_Lots',\n       'Custodied_Under_400_Lots_Total_Lots',\n       'Custodied_Lots_Between_800_1000_Total_Lots',\n       'Custodied_Larger_Than_400_Lots_Pct',\n       'Custodied_Lots_Between_400_600_Total_Lots',\n       'Custodied_Lots_Between_600_800_Pct', 'Pledged_Stock_Shares_1000_Lots',\n       'Custodied_Under_400_Lots_Pct',\n       'Custodied_Lots_Between_400_600_Total_Holders',\n       'Custodied_Lots_Between_800_1000_Total_Holders',\n       'Custodied_Under_400_Lots_Total_Holders',\n       'Custodied_Lots_Between_400_600_Pct',\n       'Custodied_Lots_Between_800_1000_Pct',\n       'Custodied_Greater_Than_1000_Lots_Pct']\n\ndata1 = TejToolAPI.get_history_data(ticker=ticker, \n                                   columns=columns,\n                                   transfer_to_chinese=False,                                    \n                                  )                                 \n\ndata1 \n</code></pre> \u91cf\u5316\u7c4c\u78bc_\u65e5&amp; \u4ea4\u6613\u8a3b\u8a18 \u6b04\u4f4d <pre><code>ticker = tickers\ncolumns =['Market', 'Dealer_Proprietary_Diff_Vol', 'Margin_Sale',\n       'Cash_Redemption', 'Margin_Short_Balance_Amt',\n       'Margin_Short_Balance_Vol', 'Dealer_Hedge_Buy_Vol',\n       'Day_Trading_Volume_1000_Shares', 'SBL_Short_Returns_Vol',\n       'Margin_Maintenance_Ratio', 'Account_Maintenance_Ratio',\n       'Margin_Stock_Redemtion', 'Total_Sell_Amt',\n       'Margin_Short_Maintenance_Ratio', 'SBL_Short_Balance_Vol',\n       'Dealer_Hedge_Buy_Amt', 'Total_Buy_Amt', 'Total_Diff_Amt',\n       'Fund_Diff_Vol', 'Dealer_Proprietary_Buy_Vol',\n       'Dealer_Proprietary_Sell_Amt', 'Margin_Day_Trading_Amt',\n       'Total_Diff_Vol', 'SBL_Short_Sales_Vol', 'SBL_Short_Balance_Amt',\n       'Dealer_Stock_Holding_Pct', 'Dealer_Hedge_Sell_Vol', 'Qfii_Buy_Vol',\n       'Qfii_Stock_Holding_Pct', 'Qfii_Sell_Vol', 'Fund_Stock_Holding_Pct',\n       'Dealer_Proprietary_Buy_Amt', 'Dealer_Hedge_Diff_Amt', 'Qfii_Sell_Amt',\n       'Margin_Day_Trading_Vol', 'Fund_Sell_Amt', 'Day_Trading_Pct',\n       'Margin_Short_Sales', 'Fund_Diff_Amt', 'Margin_Balance_Ratio',\n       'SBL_Short_Sales_Amt', 'Fund_Buy_Vol', 'Qfii_Buy_Amt',\n       'Margin_Balance_Vol', 'Qfii_Diff_Vol', 'Margin_Purchase',\n       'Dealer_Hedge_Sell_Amt', 'Dealer_Proprietary_Sell_Vol', 'Fund_Sell_Vol',\n       'Margin_Quota', 'Qfii_Diff_Amt', 'Total_Sell_Vol', 'Margin_Short_Quota',\n       'Margin_Short_Coverting', 'Fund_Buy_Amt', 'Dealer_Proprietary_Diff_Amt',\n       'Total_Buy_Vol', 'Margin_Balance_Amt', 'SBL_Short_Quota',\n       'Dealer_Hedge_Diff_Vol', 'Component_Stock_of_TPEx200_Fg', 'Industry',\n       'Component_Stock_of_MSCI_TW_Fg', 'Component_Stock_of_High_Dividend_Fg',\n       'Security_Type_Chinese', 'Suspension_of_Buy_After_Day_Trading_Fg',\n       'Matching_Period', 'Component_Stock_of_TWN50_Fg',\n       'Component_Stock_of_MidCap100_Fg', 'Suspended_Trading_Stock_Fg',\n       'Market_Board', 'Full_Delivery_Stock_Fg', 'Disposition_Stock_Fg',\n       'Security_Type_English', 'Attention_Stock_Fg', 'Industry_Eng',\n       'Component_Stock_of_TPEx50_Fg', 'Limit_Up_or_Down_in_Opening_Fg',\n       'Limit_Up_or_Down']\n\ndata2 = TejToolAPI.get_history_data(ticker=tickers, \n                                    columns=columns,\n                                    transfer_to_chinese=False,                                    \n                                   )                                 \n\ndata2 \n</code></pre> \u6293\u53d6\u8ca1\u52d9\u8cc7\u6599\u53c3\u6578\u8a2d\u5b9a <code>ticker</code> - \u55ae\u4e00\u80a1\u7968\uff1a['2330] - \u591a\u80a1\uff1a['2330','2317'] <code>columns</code> - \u6b04\u4f4d\uff1acolumns = ['r408','r409','r410','r502'] <code>transfer_chinese_columns</code> - \u9810\u8a2d transfer_chinese_columns = False - \u6e2c\u8a66\u6b04\u4f4d\u8f49\u63db\u6210\u4e2d\u6587(transfer_chinese_columns = True) <code>fin_type = [A, Q, TTM]</code> - A: \u8868\u793a\u7d2f\u7a4d - Q: \u8868\u793a\u55ae\u5b63 - TTM: \u8868\u793a\u79fb\u52d54\u5b63 <code>include_self_acc</code> - \u6295\u8cc7\u7528\u8ca1\u52d9\u5305\u542b\u81ea\u7d50\u548c\u8463\u4e8b\u6703\u6c7a\u8b70\u6578(include_self_acc = 'Y') - \u50c5\u6295\u8cc7\u7528\u8ca1\u52d9(include_self_acc = 'N') \u8ca1\u52d9\u50c5\u6703\u8a08\u5e2b\u6838\u95b1 <pre><code>columns =['Total_Operating_Cost','Sales_Per_Share','Return_Rate_on_Equity_A_percent',\n       'Proceeds_from_Disposal_of_Fixed_and_Intangible_Assets',\n       'Cash_Flow_from_Operating_Activities', \n       'Other_Adjustment_from_Operating_Activities', 'Borrowings',       \n       'Total_Operating_Expenses', 'Gross_Margin_Rate_percent',\n       'Sales_Growth_Rate', 'Net_Income_Per_Share','Total_Assets',\n       'Short_Term_Borrowings_Financial_Institutions',\n       'Pre_Tax_Income_Growth_Rate', 'Total_Equity_Growth_Rate',\n       'Total_Operating_Income','Total_Assets_Turnover',\n       'Operating_Income_Per_Share','Pre_Tax_Income_Rate_percent', \n       'Gross_Profit_Loss_from_Operations','Return_on_Total_Assets',\n       'Depreciation_and_Amortisation','Total_Interest_Income',\n       'Fixed_Asset_Turnover', 'Decrease_Increase_in_Prepayments',]\n\nfin_type = ['A','Q','TTM']\n\ndata = TejToolAPI.get_history_data(ticker=tickers, columns=columns, transfer_to_chinese=False, fin_type=fin_type, include_self_acc='N')\ndata\n</code></pre> \u8ca1\u52d9\u5305\u542b\u516c\u53f8\u81ea\u7d50\u6578\u8207\u6703\u8a08\u5e2b\u6838\u95b1 <pre><code>columns =['Total_Operating_Cost','Sales_Per_Share','Return_Rate_on_Equity_A_percent',\n       'Proceeds_from_Disposal_of_Fixed_and_Intangible_Assets',\n       'Cash_Flow_from_Operating_Activities', \n       'Other_Adjustment_from_Operating_Activities', 'Borrowings',       \n       'Total_Operating_Expenses', 'Gross_Margin_Rate_percent',\n       'Sales_Growth_Rate', 'Net_Income_Per_Share','Total_Assets',\n       'Short_Term_Borrowings_Financial_Institutions',\n       'Pre_Tax_Income_Growth_Rate', 'Total_Equity_Growth_Rate',\n       'Total_Operating_Income','Total_Assets_Turnover',\n       'Operating_Income_Per_Share','Pre_Tax_Income_Rate_percent', \n       'Gross_Profit_Loss_from_Operations','Return_on_Total_Assets',\n       'Depreciation_and_Amortisation','Total_Interest_Income',\n       'Fixed_Asset_Turnover', 'Decrease_Increase_in_Prepayments',]\n\nfin_type = ['A','Q','TTM']\n\ndata = TejToolAPI.get_history_data(ticker=tickers, columns=columns, transfer_to_chinese=True, fin_type=fin_type, include_self_acc='Y')\ndata\n</code></pre></p>"},{"location":"example/documents3/#tejtoolapi_2","title":"\u4ee5\u4e0b\u7bc4\u4f8b\u793a\u7bc4\u904b\u7528 TejToolAPI \u4e00\u9375\u6293\u53d6\u4e0d\u540c\u8cc7\u6599\u5eab\u7684\u6b04\u4f4d\u8207\u6574\u4f75\u3002","text":"<ul> <li>\u80a1\u50f9\u8cc7\u6599\u5eab(\u65e5\u983b)</li> <li>\u958b\u76e4\u50f9\u3001\u6536\u76e4\u50f9</li> <li>\u7c4c\u78bc\u8cc7\u6599\u5eab(\u65e5\u983b)</li> <li>\u5916\u8cc7\u8cb7\u8ce3\u8d85\u5f35\u6578\u3001\u5408\u8a08\u8cb7\u8ce3\u8d85\u5f35\u6578</li> <li>\u4ea4\u6613\u8a3b\u8a18\u8cc7\u6599\u5eab(\u65e5\u983b)</li> <li>\u662f\u5426\u70ba\u6ce8\u610f\u80a1\u7968\u3001\u662f\u5426\u66ab\u505c\u4ea4\u6613\u3001\u662f\u5426\u70ba\u81fa\u706350\u6210\u5206\u80a1\u3001\u662f\u5426\u70ba\u8655\u7f6e\u80a1\u7968\u3001\u5206\u76e4\u9593\u9694\u6642\u9593</li> <li>\u96c6\u4fdd\u8cc7\u6599\u5eab(\u5468\u983b)</li> <li>800-1000\u5f35\u96c6\u4fdd\u5360\u6bd4\u3001800-1000\u5f35\u96c6\u4fdd\u5f35\u6578</li> <li>\u8ca1\u5831\u8cc7\u6599\u5eab(\u5b63\u983b)</li> <li>\u71df\u696d\u6bdb\u5229\u6210\u9577\u7387_Q\u3001\u71df\u696d\u5229\u76ca\u6210\u9577\u7387_Q\u3001\u7a05\u5f8c\u6de8\u5229\u7387_Q <pre><code># \u8f38\u5165\u6b04\u4f4d\nicolumns = ['Open','Close','Qfii_Diff_Vol','Total_Diff_Vol','Custodied_Lots_Between_800_1000_Total_Lots','Custodied_Lots_Between_800_1000_Pct',\n           'Attention_Stock_Fg','Disposition_Stock_Fg','Matching_Period','Suspended_Trading_Stock_Fg','Component_Stock_of_TWN50_Fg','Gross_Margin_Growth_Rate','Net_Income_Rate_percent','Operating_Income_Growth_Rate']\n# TEJTOOLAPI\u6574\u4f75\ndata = TejToolAPI.get_history_data(ticker=tickers[:5], \n                                   columns=icolumns,\n                                   transfer_to_chinese=True, \n                                   fin_type = ['Q'],\n                                   start = '2015-01-01', end = '2022-12-31')\ndata#.sort_values(by=['\u65e5\u671f','\u80a1\u7968\u4ee3\u78bc']).tail(10)\n</code></pre> \u6293\u53d6\u80a1\u50f9\u8cc7\u6599\u5eab\u8207\u7c4c\u78bc\u6599\u5eab <pre><code>columns = ['Open','High','Low','Close','Adjust_Factor','Volume_1000_Shares','Value_Dollars'\n           'Transaction','Last_Bid','Last_Offer','Average_Trade_Price','ROI','High_Low_Diff','Turnover'\n           'Issue_Shares_1000_Shares','Market_Cap_Dollars','Market_Cap_Percentage','Trade_Value_Percentage'\n           'PER_TWSE','PBR_TWSE','Dividend_Yield_TWSE','Cash_Dividend_Yield_TEJ',\n           'Qfii_Buy_Vol','Qfii_Sell_Vol','Qfii_Diff_Vol','Qfii_Buy_Amt','Qfii_Sell_Amt','Qfii_Diff_Amt','Qfii_Stock_Holding_Pct','Fund_Buy_Vol',\n           'Fund_Sell_Vol','Fund_Diff_Vol','Fund_Buy_Amt','Fund_Sell_Amt','Fund_Diff_Amt','Fund_Stock_Holding_Pct','Dealer_Proprietary_Buy_Vol','Dealer_Proprietary_Sell_Vol','Dealer_Proprietary_Diff_Vol','Dealer_Proprietary_Buy_Amt',\n           'Dealer_Proprietary_Sell_Amt','Dealer_Proprietary_Diff_Amt','Dealer_Hedge_Buy_Vol','Dealer_Hedge_Sell_Vol','Dealer_Hedge_Diff_Vol','Dealer_Hedge_Buy_Amt','Dealer_Hedge_Sell_Amt','Dealer_Hedge_Diff_Amt',\n           'Dealer_Stock_Holding_Pct','Total_Buy_Vol','Total_Sell_Vol','Total_Diff_Vol','Total_Buy_Amt','Total_Sell_Amt','Total_Diff_Amt'\n            ]\ndata = TejToolAPI.get_history_data(ticker=ticker, \n                                   columns=columns,\n                                   transfer_to_chinese=False, \n                                   start = '2015-01-01', end = '2022-12-31')\ndata\n</code></pre> \u6293\u53d6\u8ca1\u52d9\u8cc7\u6599(default:\u50c5\u6703\u8a08\u5e2b\u6838\u95b1) <pre><code>ticker = ['2881', '1101','9958','2330']\ncolumns = ['r404','r401','eps']\nfin_type = ['A','Q','TTM']\ndata = TejToolAPI.get_history_data(ticker=ticker, columns=columns,transfer_to_chinese=True, fin_type=fin_type)\ndata\n</code></pre> \u6293\u53d6\u8ca1\u52d9\u8cc7\u6599\u50c5\u6703\u8a08\u5e2b\u6838\u95b1 <pre><code>ticker = ['2881', '1101','9958','2330']\ncolumns = ['r404','r401','eps']\nfin_type = ['A','Q','TTM']\ndata = TejToolAPI.get_history_data(ticker=ticker, columns=columns,transfer_to_chinese=True, fin_type=fin_type, include_self_acc='N')\ndata\n</code></pre> \u6293\u53d6\u8ca1\u52d9\u8cc7\u6599\u542b\u81ea\u7d50\u6578 <pre><code>ticker = ['2881', '1101','9958','2330']\ncolumns = ['r404','r401','eps']\nfin_type = ['A','Q','TTM']\ndata = TejToolAPI.get_history_data(ticker=ticker, columns=columns, transfer_to_chinese=True, fin_type=fin_type, include_self_acc='Y')\ndata\n</code></pre></li> </ul>"},{"location":"example/documents3/#data-collection","title":"Data Collection","text":"<p>\u672c\u8ab2\u7a0b\u5be6\u4f5c\u5982\u4f55\u5c07\u8cc7\u6599\uff08\u5982\u50f9\u91cf\u3001\u57fa\u672c\u9762\u3001\u7c4c\u78bc\u9762\u7b49\uff09ingest \u5230 zipline \u56de\u6e2c\u5f15\u64ce\u4e2d\u3002\u900f\u904e\u9019\u500b\u52d5\u4f5c\uff0c\u5f8c\u7e8c\u4f7f\u7528 Pipeline API \u6642\uff0c\u5c31\u53ef\u4ee5\u5f88\u6709\u6548\u7387\u5730\u7372\u53d6\u8cc7\u6599\u4e26\u8a08\u7b97\u56e0\u5b50\u3002</p>"},{"location":"example/documents3/#_2","title":"\u8f09\u5165\u6240\u9700\u5957\u4ef6","text":"<pre><code>import os\n</code></pre>"},{"location":"example/documents3/#bundle","title":"Bundle \u8a2d\u7f6e","text":"<p>\u4ecb\u7d39\u74b0\u5883\u8b8a\u6578\u8a2d\u5b9a\uff0c\u4e26\u904b\u7528\u8a2d\u5b9a\u7684\u74b0\u5883\u8b8a\u6578\u505a\u50f9\u91cf\u3001\u975e\u50f9\u91cf\u8cc7\u6599\u7684 bundle\u3002</p> <p>\u5728 import zipline \u524d\uff0c\u5fc5\u9808\u5148\u8a2d\u5b9a\u4ee5\u4e0b\u74b0\u5883\u8b8a\u6578(os.environ)\uff1a</p> <p>\u50f9\u91cf\u8cc7\u6599 bundle\uff08tquant bundle\uff09\u8a2d\u5b9a</p> <ul> <li> <p>os.environ['TEJAPI_BASE'] = \"https://api.tej.com.tw\" \u7528\u65bc\u9023\u7d50TEJ\u8cc7\u6599\u5eab</p> </li> <li> <p>os.environ['TEJAPI_KEY'] = \"Your_Key\" \u7528\u65bc\u8b58\u5225\u4f7f\u7528\u8005</p> </li> <li> <p>os.environ['ticker'] tickers = 'xxxx xxxx xxxx' os.environ['ticker'] = tickers \u8a2d\u7f6e\u6211\u5011\u6240\u9700\u8981\u7684\u80a1\u7968\u4ee3\u78bc</p> </li> <li> <p>os.environ['mdate'] = 'yyyymmdd yyyymmdd' \u8a2d\u7f6e\u53d6\u5f97\u8cc7\u6599\u7684\u8d77\u59cb\u6642\u9593\u8207\u7d50\u675f\u6642\u9593</p> </li> <li> <p>!zipline ingest -b tquant \u5c07\u4e0a\u65b9\u8cc7\u6599 ingest \u9032 bundle\u3002</p> </li> </ul> <p>\u8a2d\u7f6e\u975e\u50f9\u91cf\u8cc7\u6599 bundle\uff08fundamentals bundle\uff09\u9700\u8981\u7684\u8cc7\u8a0a\uff1a</p> <ul> <li> <p>os.environ['fields'] = 'field1, field2, field3' \u8a2d\u7f6e\u6488\u53d6\u975e\u50f9\u91cf\u8cc7\u6599\u7684\u6b04\u4f4d\uff0c\u5176\u4e2d field1\u3001field2\u3001field3 \u4ee3\u8868\u8cc7\u6599\u6b04\u4f4d\u540d\u7a31</p> </li> <li> <p>os.environ['include_self_acc'] = 'N'(\u9810\u8a2d) \u8a2d\u7f6e\u662f\u5426\u6db5\u84cb\u516c\u53f8\u81ea\u7d50\u8ca1\u52d9\uff0c\u5176\u4e2d\u8a2d\u5b9a'Y'\u4ee3\u8868\u8ca1\u52d9\u8cc7\u6599\u5305\u542b\u81ea\u7d50\u8ca1\u52d9\uff0c'N'\u5247\u8868\u793a\u4e0d\u5305\u542b</p> </li> <li> <p>!zipline ingest -b fundamentals \u5c07\u975e\u50f9\u91cf\u8cc7\u6599 ingest \u9032 bundle\u3002</p> </li> </ul>"},{"location":"example/documents3/#_3","title":"\u50f9\u91cf\u8cc7\u6599","text":"<ul> <li>\u50f9\u91cf\u8cc7\u6599\u6307 OHLCV \u8207\u9664\u6b0a\u606f\u76f8\u95dc\u8cc7\u8a0a\u3002\u4ee5\u4e0b\u7bc4\u4f8b\u8f09\u5165\u6307\u5b9a\u80a1\u7968\u50f9\u91cf\u8cc7\u6599\uff1a \u8f09\u5165\u6307\u5b9a\u80a1\u7968\u7684\u50f9\u91cf\u8cc7\u6599\uff0c\u5176\u4e2d IR0001 \u70ba\u53f0\u7063\u767c\u884c\u91cf\u52a0\u6b0a\u80a1\u50f9\u5831\u916c\u6307\u6578\u3002</li> </ul> <pre><code>tickers = 'IR0001 0050 0056 00737 1108 1101 1102 1103 6243 6451 1216 1301 1303 1326 1402 1476 1590 1605 1722 1802 2002 2105 2201 2207 2227 2301 2939 4108 4148 6431 6541 6657 2883 2891 2543 2929 2303 6505 9926 2308 2311 2317 2324 2325 2327 2330 2347 2353 2354 2357 2379 2382 2395 2408 2409 2412 2448 2454 2474 2492 2498 2603 2609 2615 2618 2633 2801 2823 2880 2881 2882 2883 2884 2885 2886 2887 2888 2890 2891 2892 2912 3008 3009 3034 3037 3045 3231 3474 3481 3673 3697 3711 4904 4938 5854 5871 5876 5880 6239 6415 6505 6669 6770 8046 8454 9904 9910'\nprint(\"\u7e3d\u5171\u6709 :\",len(tickers.split()),\"\u7b46\u8cc7\u6599\")\n\n\nos.environ[\"TEJAPI_BASE\"] = 'https://api.tej.com.tw'\nos.environ['TEJAPI_KEY'] = \"Your_Key\"\nos.environ['ticker'] = tickers\nos.environ['mdate'] = '20200103 20230530'\n\n!zipline ingest -b tquant\n</code></pre>"},{"location":"example/documents3/#ingest","title":"\u7c21\u6613 ingest \u50f9\u91cf\u8cc7\u6599","text":"<p>simple_ingest()\u51fd\u6578\u63d0\u4f9b\u53e6\u4e00\u7a2e\u53d6\u5f97\u6307\u5b9a\u80a1\u7968\u50f9\u91cf\u8cc7\u6599\u7684\u65b9\u6cd5\uff0c\u8cc7\u6599\u540c\u6a23\u6703\u5b58\u5165 bundle \u4e2d\uff1a</p> <p>simple_ingest()\u51fd\u6578\u8f09\u5165\u50f9\u91cf\u8cc7\u6599\u6240\u9700\u53c3\u6578\u8cc7\u8a0a\u5982\u4e0b\uff1a</p> <ul> <li> <p>name ( str ) = 'tquant' \u5b9a\u7fa9 bundle \u540d\u7a31</p> </li> <li> <p>tickers ( list or str ) = ['xxxx', 'xxxx', 'xxxx'] or 'xxxx xxxx xxxx' \u8a2d\u7f6e\u6211\u5011\u9700\u8981\u7684\u80a1\u7968\u4ee3\u78bc</p> </li> <li> <p>start_date ( str ) = 'yyyy-mm-dd' \u8a2d\u7f6e\u8d77\u59cb\u65e5\u671f</p> </li> <li> <p>end_date ( str ) = 'yyyy-mm-dd' \u8a2d\u7f6e\u7d50\u675f\u65e5\u671f</p> </li> </ul> <pre><code>from zipline.data.run_ingest import simple_ingest\n\nstart = '2020-01-03'\nend = '2023-05-30'\n\nsimple_ingest(name = 'tquant',\n              tickers = tickers,\n              start_date = start,\n              end_date = end\n              )\n</code></pre>"},{"location":"example/documents3/#_4","title":"\u66f4\u65b0\u50f9\u91cf\u8cc7\u6599","text":"<p>\u900f\u904e\u8f38\u5165 zipline update -b tquant \u6307\u4ee4\uff0c\u53ef\u4ee5\u66f4\u65b0\u7576\u524d\u4f7f\u7528\u7684 tquant bundle\uff0c\u4ee5\u7372\u5f97\u6700\u65b0\u7684\u4ea4\u6613\u50f9\u683c\u548c\u4ea4\u6613\u91cf\u8cc7\u8a0a\u3002</p> <p><pre><code># \u57f7\u884c\u524d\n!zipline bundle-info\n</code></pre> <pre><code>!zipline update -b tquant\n</code></pre> <pre><code># \u57f7\u884c\u5f8c\n!zipline bundle-info\n</code></pre></p>"},{"location":"example/documents3/#_5","title":"\u65b0\u589e\u50f9\u91cf\u8cc7\u6599","text":"<p>\u4f7f\u7528 <code>zipline add -t &lt;tickers_want_to_add&gt;</code> \u6307\u4ee4\uff0c\u53ef\u4ee5\u5411\u73fe\u6709\u7684 tquant bundle \u4e2d\u65b0\u589e\u6240\u9078\u7684\u80a1\u7968\u3002</p> <p><pre><code># \u57f7\u884c\u524d\n!zipline bundle-info\n</code></pre> <pre><code>!zipline add -t \"6523 6208\"\n</code></pre> <pre><code># \u57f7\u884c\u5f8c\n!zipline bundle-info\n</code></pre></p>"},{"location":"example/documents39/","title":"\u516c\u7528\u51fd\u6578(Utilites)","text":""},{"location":"example/documents39/#pyfolioutilsextract_rets_pos_txn_from_zipline","title":"pyfolio.utils.extract_rets_pos_txn_from_zipline","text":"<p>\u7528\u65bc\u5f9e <code>zipline.run_algorithms()</code> \u6240\u8f38\u51fa\u7684\u8cc7\u6599\u8868\u4e2d\uff0c\u63d0\u53d6\u4ea4\u6613\u7b56\u7565\u5831\u916c\u3001\u6301\u6709\u90e8\u4f4d\u8207\u4ea4\u6613\u8cc7\u8a0a\u3002</p>"},{"location":"example/documents39/#parameters","title":"Parameters:","text":"<ul> <li>backtest: pd.DataFrame         zipline.run_algorithm() \u5f97\u51fa\u7684\u8cc7\u6599\u8868\u3002</li> </ul>"},{"location":"example/documents39/#returns","title":"Returns:","text":"<ul> <li>returns: pd.Series         \u4ea4\u6613\u7b56\u7565\u7684\u6bcf\u65e5\u5831\u916c\u3002</li> <li>positions: pd.DataFrame         \u4ea4\u6613\u7b56\u7565\u7684\u5404\u8b49\u5238\u8207\u73fe\u91d1\u6bcf\u65e5\u6301\u6709\u90e8\u4f4d\u3002</li> <li>transactions : pd.DataFrame         \u4ea4\u6613\u7b56\u7565\u7684\u6bcf\u65e5\u4ea4\u6613\u8cc7\u6599\uff0c\u4e00\u5217\u70ba\u4e00\u7b46\u4ea4\u6613\u3002</li> </ul> <p>Return to Menu</p> <pre><code>from pyfolio.utils import extract_rets_pos_txn_from_zipline\n\nreturns, positions, transactions = extract_rets_pos_txn_from_zipline(results)\nbenchmark_rets = results.benchmark_return\n\n# \u6642\u5340\u6a19\u6e96\u5316\nreturns.index = returns.index.tz_localize(None).tz_localize('UTC')\npositions.index = positions.index.tz_localize(None).tz_localize('UTC')\ntransactions.index = transactions.index.tz_localize(None).tz_localize('UTC')\nbenchmark_rets.index = benchmark_rets.index.tz_localize(None).tz_localize('UTC')\n</code></pre>"},{"location":"example/documents4/","title":"\u5b89\u88dd Pyfolio-TEJ \u5957\u4ef6","text":"<p>\u9019\u4e00\u884c\u6307\u4ee4\u662f\u7528\u4f86\u5b89\u88dd\u6216\u66f4\u65b0\u7531 TEJ \u7dad\u8b77\u7684 <code>pyfolio-tej</code> \u5957\u4ef6\uff0c\u4e3b\u8981\u7528\u65bc\u7e3e\u6548\u5206\u6790\u8207\u8996\u89ba\u5316\uff0c\u7279\u5225\u9069\u5408\u5728\u91d1\u878d\u7b56\u7565\u56de\u6e2c\u5f8c\u9032\u884c\u8a55\u4f30\u3002</p> <pre><code>!pip install --upgrade pyfolio-tej\n</code></pre> <ul> <li><code>--upgrade</code> \u4ee3\u8868\u5982\u679c\u5df2\u5b89\u88dd\u6703\u81ea\u52d5\u66f4\u65b0\u70ba\u6700\u65b0\u7248\u672c\u3002</li> <li>\u9069\u7528\u65bc Jupyter Notebook \u6216 colab \u57f7\u884c\u74b0\u5883\u3002</li> </ul>"},{"location":"example/documents40/","title":"Pyfolio \u53ef\u8996\u5316\u5831\u8868\u6a21\u7d44\u91cd\u9ede\u8aaa\u660e","text":"<p>\u672c\u6587\u4ef6\u7c21\u8981\u6574\u7406 Pyfolio \u5728\u7b56\u7565\u56de\u6e2c\u4e2d\u63d0\u4f9b\u7684\u5e7e\u500b\u4e3b\u8981\u529f\u80fd\u6a21\u7d44\u53ca\u5176\u7528\u9014\u3002</p>"},{"location":"example/documents40/#pyfolio-installation","title":"Pyfolio \u5b89\u88dd\uff08Installation\uff09","text":"<p>Pyfolio \u662f Quantopian \u958b\u767c\u7684\u7e3e\u6548\u5206\u6790\u5de5\u5177\uff0c\u53ef\u4ee5\u900f\u904e pip \u5b89\u88dd\uff1a <pre><code>pip install pyfolio\n</code></pre></p>"},{"location":"example/documents40/#api","title":"API \u6a21\u7d44\u5206\u985e","text":""},{"location":"example/documents40/#1-utilities","title":"1. \u516c\u7528\u51fd\u6578\uff08Utilities\uff09","text":"<ul> <li>\u63d0\u4f9b\u57fa\u672c\u8cc7\u6599\u8655\u7406\u3001\u7e3e\u6548\u6307\u6a19\u8a08\u7b97\u7b49\u652f\u63f4\u51fd\u6578\u3002</li> <li>\u4f8b\u5982\uff1a<code>timeseries.aggregate_returns()</code>\u3001<code>timeseries.get_rolling_volatility()</code>\u3002</li> </ul>"},{"location":"example/documents40/#2-tears","title":"2. \u7b56\u7565\u7e3e\u6548\u5831\u544a\uff08Tears\uff09","text":"<ul> <li>\u7522\u51fa\u5b8c\u6574\u7e3e\u6548\u5831\u8868\uff0c\u4e00\u884c\u7a0b\u5f0f\u5373\u53ef\u5feb\u901f\u5c55\u793a\u7d50\u679c\u3002</li> <li>\u5e38\u7528\u51fd\u6578\uff1a<code>pyfolio.create_full_tear_sheet()</code>\u3002</li> <li>\u5305\u542b\u56de\u64a4\u3001\u8ca2\u737b\u5206\u6790\u3001\u6301\u80a1\u5206\u4f48\u7b49\u8c50\u5bcc\u6307\u6a19\u3002</li> </ul>"},{"location":"example/documents40/#3-performance","title":"3. \u7e3e\u6548\u51fd\u6578\uff08Performance\uff09","text":"<ul> <li>\u7528\u65bc\u8a08\u7b97\u5982 Sharpe ratio\u3001Sortino ratio\u3001alpha/beta \u7b49\u3002</li> <li>\u6709\u4e9b\u529f\u80fd\u5df2\u4e0d\u518d\u7dad\u8b77\uff0c\u9700\u6ce8\u610f\u7248\u672c\u76f8\u5bb9\u6027\uff08\u4f8b\u5982 <code>perf.annual_return</code> \u53ef\u80fd\u5831\u932f\uff09\u3002</li> </ul>"},{"location":"example/documents40/#4-ploting","title":"4. \u7e6a\u5716\u51fd\u6578\uff08Ploting\uff09","text":"<ul> <li>\u5404\u7a2e\u7e3e\u6548\u5716\u50cf\u5316\u5de5\u5177\uff0c\u4f8b\u5982\uff1a</li> <li><code>plot_rolling_returns()</code>\uff1a\u7e6a\u88fd\u7b56\u7565\u8207\u57fa\u6e96\u7684\u6efe\u52d5\u5831\u916c\u3002</li> <li><code>plot_drawdown_underwater()</code>\uff1a\u986f\u793a\u8cc7\u91d1\u6c34\u4f4d\u5716\u3002</li> <li><code>plot_exposures()</code>\uff1a\u591a\u56e0\u5b50\u66b4\u9732\u53ef\u8996\u5316\u3002</li> </ul> <p>\u6ce8\u610f\u4e8b\u9805\uff1a \u67d0\u4e9b\u7248\u672c\u4e0b\u7684 <code>performance</code> \u6a21\u7d44\u5df2\u51fa\u73fe\u76f8\u5bb9\u6027\u554f\u984c\uff0c\u5efa\u8b70\u512a\u5148\u4f7f\u7528 <code>tears.create_full_tear_sheet</code> \u642d\u914d\u5b8c\u6574\u6d41\u7a0b\u3002</p> <p></p>"},{"location":"example/documents40/#pyfoliotearscreate_interesting_times_tear_sheet","title":"pyfolio.tears.create_interesting_times_tear_sheet","text":"<p>\u88fd\u4f5c\u91cd\u5927\u4e8b\u4ef6\u767c\u751f\u65e5\u524d\u5f8c\u7684\u65e5\u5831\u916c\u5e73\u5747\u3001\u6700\u5927\u3001\u6700\u5c0f\u503c\u8868\u683c\uff0c\u4e26\u7e6a\u88fd\u5716\u8868\u8996\u89ba\u5316\u3002</p>"},{"location":"example/documents40/#parameters","title":"Parameters:","text":"<ul> <li>returns: pd.Series         \u4ea4\u6613\u7b56\u7565\u7684\u65e5\u5831\u916c\u7387\u3002</li> <li>benchmark_rets: pd.DataFrame, optional         \u6307\u6a19\u65e5\u5831\u916c\u7387\uff0c\u9810\u8a2d = None\u3002</li> <li>periods: dict or OrderedDict, optional         \u6b77\u53f2\u4e0a\u91cd\u5927\u4e8b\u4ef6\u767c\u751f\u65e5\u671f\u3002</li> <li>legend_loc: plt.lengend_loc, optional         \u5716\u8868\u4e2d\u5716\u4f8b\u7684\u4f4d\u7f6e\u3002</li> <li>return_fig: boolen, optional         \u662f\u5426\u7e6a\u88fd\u5716\u8868\u3002</li> </ul> <p>Return to Menu</p> <p></p>"},{"location":"example/documents40/#pyfoliotearscreate_full_tear_sheet","title":"pyfolio.tears.create_full_tear_sheet","text":"<p>\u7e6a\u88fd\u4ee5\u4e0a\u6240\u6709\u7e3e\u6548\u8207\u98a8\u96aa\u76f8\u95dc\u5716\u8868\u3002</p>"},{"location":"example/documents40/#parameters_1","title":"Parameters:","text":"<ul> <li>returns: pd.Series         \u4ea4\u6613\u7b56\u7565\u7684\u65e5\u5831\u916c\u7387\u3002</li> <li>positions: pd.DataFrame         \u6bcf\u65e5\u6a19\u7684\u8207\u73fe\u91d1\u90e8\u4f4d\u8868\u3002</li> <li>transactions: pd.DataFrame         \u4ea4\u6613\u7b56\u7565\u7684\u4ea4\u6613\u8cc7\u6599\uff0c\u4e00\u5217\u70ba\u4e00\u7b46\u4ea4\u6613\u3002</li> <li>market_data: pd.DataFrame, optional         \u6bcf\u65e5\u5e02\u5834\u8cc7\u6599\uff0c\u4e00\u65e5\u4e00\u884c\uff0c\u6b04\u4f4d\u6709\u80a1\u3001\u4ea4\u6613\u91cf\u3001\u50f9\u683c\uff0c\u9810\u8a2d = None\u3002</li> <li>benchmark_rets: pd.Series, optional         \u6307\u6a19\u65e5\u5831\u916c\u7387\uff0c\u9810\u8a2d = None\u3002</li> <li>slippage: int or float, optional          \u6ed1\u50f9\uff0c\u55ae\u4f4d\u70babasis point\uff0c\u9700\u642d\u914d positions \u548c transactions \u4f7f\u7528\uff0c\u9810\u8a2d = None\uff0c</li> <li>live_start_date: datetime, optional         \u56de\u6e2c\u671f\u9593\u4e4b\u5f8c\uff0c\u958b\u59cb live trading \u65e5\u671f\uff0c\u76f8\u7576\u65bc\u5340\u5206 In-sample \u8207 out-of sample \u6aa2\u6e2c\uff0c\u9810\u8a2d = None\uff0c\u65e5\u671f\u5fc5\u9808\u6a19\u6e96\u5316\u3002</li> <li>sector_mappings: dict or pd.Series, optional         \u884c\u696d\u5206\u985e\uff0c\u4ee5\u80a1\u7968 SID \u70ba key\uff0c\u884c\u696d\u70ba value \u7684\u5b57\u5178\u6216 pd.Series\uff0c\u9810\u8a2d = None\u3002</li> <li>round_trips: boolean, optional         \u4ea4\u6613 round trip \u8868\u683c\uff0c\u9700\u8981\u642d\u914dpositions\u548ctransactions\u4f7f\u7528\uff0c\u9810\u8a2d = False\u3002</li> <li>estimate_intraday: boolean or str, optional         \u4f30\u7b97\u65e5\u5167\u4ea4\u6613\uff0c\u9810\u8a2d\u70ba'infer'\u3002</li> <li>hide_positions: boolean, optional         \u96b1\u85cf\u80a1\u7968\u4ee3\u78bc\uff0c\u9810\u8a2d\u70ba False\u3002</li> <li>cone_std: float or tuple, optional         \u8a2d\u5b9a out_of_sample \u6642\uff0c\u4ea4\u6613\u7b56\u7565\u9810\u671f\u5831\u916c\u7387\u7684\u6a19\u6e96\u5dee\u5340\u9593\u3002         \u82e5\u70ba float\uff0c\u5247\u8a2d\u5b9a\u55ae\u4e00\u6a19\u6e96\u5dee\u5340\u9593\u3002         \u82e5\u70ba tuple\uff0c\u5247\u8a2d\u5b9a\u591a\u500b\u6a19\u6e96\u5dee\u5340\u9593\u3002</li> <li>bootstrap: boolean, optional         \u5c0d\u5404\u9805\u6307\u6a19\u9032\u884c\u62d4\u9774\u6cd5\u6e2c\u8a66\uff0c\u9810\u8a2d = False\u3002</li> <li>unadjusted_returns: pd.Series, optional         \u8abf\u6574\u524d\u65e5\u5831\u916c\u7387\uff0c\u9810\u8a2d = None\uff0c\u63d0\u4f9b\u5f8c\u6703\u984d\u5916\u7e6a\u88fd:         1. Cumulative returns given additional per-dollar slippage         2. Average annual returns given additional per-dollar slippage</li> <li>turnover_denom: str, optional         \u5468\u8f49\u7387\u8a08\u7b97\u65b9\u5f0f\uff0c\u6709 AGB \u548c portfolio_value \u5169\u7a2e\uff0c\u9810\u8a2d\u70ba AGB\uff0c         \u8a08\u7b97\u65b9\u6cd5\u70ba (\u8cb7\u9032\u7e3d\u984d + \u8ce3\u51fa\u7e3d\u984d\u7d55\u5c0d\u503c) / (AGB or portfolio_value)\uff0c         AGB = portfolio-value - cash\u3002</li> <li>set_context: boolean, optional         \u8a2d\u7f6e\u7e6a\u5716\u98a8\u683c\u3002</li> <li>header_rows: dict or OrderedDict, optional         \u5728\u8868\u683c start date yyyy-mm-dd \u4e0a\u984d\u5916\u589e\u52a0\u5217\uff0c\u9810\u8a2d\u70ba None\u3002</li> <li>factor_returns: pd.DataFrame, optional         \u98a8\u96aa\u56e0\u5b50\u6240\u6b78\u5c6c\u7684\u5831\u916c\u7387\uff0c\u4ee5\u65e5\u671f\u4f5c\u70ba\u6307\u6a19\uff0c\u56e0\u5b50\u4f5c\u70ba\u6b04\u4f4d\u3002         Ex:                         momentum  reversal             2017-01-01  0.002779 -0.005453             2017-01-02  0.001096  0.010290       </li> <li>factor_loadings: pd.DataFrame, optional         \u56e0\u5b50\u8ca0\u8377\u91cf\uff0c\u70ba\u56e0\u5b50\u6240\u5c0d\u61c9\u7684\u4fc2\u6578\uff0c\u4ee5\u65e5\u671f\u8207\u6a19\u7684\u70ba\u6307\u6a19\uff0c\u56e0\u5b50\u70ba\u6b04\u4f4d\u3002         Ex:                                momentum  reversal             dt         ticker             2017-01-01 AAPL   -1.592914  0.852830                        TLT     0.184864  0.895534                        XOM     0.993160  1.149353             2017-01-02 AAPL   -0.140009 -0.524952                        TLT    -1.066978  0.185435                        XOM    -1.798401  0.761549</li> <li>pos_in_dollars: boolean, optional         \u82e5\u70ba True\uff0cpositions \u5167\u6b04\u4f4d\u55ae\u4f4d\u70ba\u5143 (dollar)\u3002         \u82e5\u70ba False\uff0cpositions \u5167\u6b04\u4f4d\u55ae\u4f4d\u70ba\u6bd4\u7387 (percentage)\u3002 </li> <li>factor_partitions: dict, optional         \u7528\u65bc\u7e6a\u88fd\u5831\u916c\u6b78\u5c6c\u65bc\u56e0\u5b50\u5716\u3002         Ex:            {'style': ['momentum', 'size', 'value', ...],            'sector': ['technology', 'materials', ... ]}</li> </ul> <p>Return to Menu</p> <pre><code>pyfolio.tears.create_full_tear_sheet(returns=returns,\n                                     positions=positions,\n                                     transactions=transactions,\n                                     benchmark_rets=benchmark_rets\n                                    )\n</code></pre>"},{"location":"example/documents42/","title":"\u7e6a\u5716\u51fd\u6578(Ploting)","text":""},{"location":"example/documents42/#pyfolioplottingshow_perf_stats","title":"pyfolio.plotting.show_perf_stats","text":"<p>\u986f\u793a\u7e3e\u6548\u8207\u98a8\u96aa\u6307\u6a19\u3002</p>"},{"location":"example/documents42/#parameters","title":"Parameters:","text":"<ul> <li>returns: pd.Series         \u4ea4\u6613\u7b56\u7565\u7684\u65e5\u5831\u916c\u7387\u3002</li> <li>factor_returns: pd.Series, optional         \u8a08\u7b97 beta \u6240\u9700\u7684\u6307\u6a19\u5831\u916c\u7387\uff0c\u901a\u5e38\u8a2d\u5b9a\u70ba\u5e02\u5834\u5831\u916c\u3002</li> <li>positions: pd.DataFrame, optional         \u6bcf\u65e5\u6a19\u7684\u8207\u73fe\u91d1\u90e8\u4f4d\u8868\u3002</li> <li>transactions: pd.DataFrame, optional         \u4ea4\u6613\u7b56\u7565\u7684\u4ea4\u6613\u8cc7\u6599\uff0c\u4e00\u5217\u70ba\u4e00\u7b46\u4ea4\u6613\u3002</li> <li>turnover_denom: str         \u5468\u8f49\u7387\u8a08\u7b97\u65b9\u5f0f\uff0c\u6709 AGB \u548c portfolio_value \u5169\u7a2e\uff0c\u9810\u8a2d\u70ba AGB\uff0c         \u8a08\u7b97\u65b9\u6cd5\u70ba (\u8cb7\u9032\u7e3d\u984d + \u8ce3\u51fa\u7e3d\u984d\u7d55\u5c0d\u503c) / (AGB or portfolio_value)\uff0c         AGB = portfolio-value - cash\u3002</li> <li>live_start_date: datetime, optional         \u56de\u6e2c\u671f\u9593\u4e4b\u5f8c\uff0c\u958b\u59cb live trading \u65e5\u671f\uff0c\u76f8\u7576\u65bc\u5340\u5206 In-sample \u8207 out-of sample \u6aa2\u6e2c\uff0c\u9810\u8a2d = None\uff0c\u65e5\u671f\u5fc5\u9808\u6a19\u6e96\u5316\u3002</li> <li>bootstrap: boolean, optional         \u5c0d\u5404\u9805\u6307\u6a19\u9032\u884c\u62d4\u9774\u6cd5\u6e2c\u8a66\uff0c\u9810\u8a2d = False\u3002</li> <li>header_rows: dict or OrderedDict, optional         \u5728\u8868\u683c start date yyyy-mm-dd \u4e0a\u984d\u5916\u589e\u52a0\u5217\uff0c\u9810\u8a2d\u70baNone\u3002</li> </ul>"},{"location":"example/documents42/#returns","title":"Returns:","text":"<p> pd.DataFrame</p> <p>Return to Menu</p> <p></p>"},{"location":"example/documents42/#pyfolioplottingshow_worst_drawdown_periods","title":"pyfolio.plotting.show_worst_drawdown_periods","text":"<p>\u986f\u793a\u524d n \u5927\u7684\u4ea4\u6613\u56de\u843d\u671f\u9593\u3002</p>"},{"location":"example/documents42/#parameters_1","title":"Parameters:","text":"<ul> <li>returns: pd.Series         \u4ea4\u6613\u7b56\u7565\u7684\u65e5\u5831\u916c\u7387\u3002</li> <li>top: int, optional         \u6c7a\u5b9a n\uff0c\u9810\u8a2d\u70ba 5\u3002</li> </ul>"},{"location":"example/documents42/#returns_1","title":"Returns:","text":"<p> pd.DataFrame</p> <p>Return to Menu</p> <p></p>"},{"location":"example/documents42/#pyfolioplottingshow_and_plot_top_positions","title":"pyfolio.plotting.show_and_plot_top_positions","text":"<p>\u88fd\u4f5c\u591a\u55ae\u6301\u6709\u91cf\u524d\u5341\u3001\u7a7a\u55ae\u6301\u6709\u91cf\u524d\u5341\u8207\u7d9c\u5408\u6301\u6709\u91cf\u7684\u6a19\u7684\u6301\u6709\u90e8\u4f4d\u6bd4\u7387\u8868\u683c\uff0c\u4e26\u4e14\u7e6a\u88fd\u5404\u6642\u9593\u9ede\u6301\u6709\u6bd4\u7387\u5716\u3002</p>"},{"location":"example/documents42/#parameters_2","title":"Parameters:","text":"<ul> <li>returns: pd.Series         \u4ea4\u6613\u7b56\u7565\u7684\u65e5\u5831\u916c\u7387\u3002</li> <li>positions_alloc: pd.DataFrame         \u500b\u80a1\u6a19\u7684\u7684\u6301\u6709\u90e8\u4f4d\u5206\u5e03\u3002</li> <li>show_and_plot: int, optional         1. \u82e5\u70ba 0\uff0c\u50c5\u7e6a\u5716\u3002         2. \u82e5\u70ba 1\uff0c\u50c5\u88fd\u8868\u3002         3. \u82e5\u70ba 2\uff0c\u540c\u6642\u88fd\u4f5c\u5716\u8207\u8868\u3002</li> <li>hide_positions: boolean, optional         \u82e5\u70ba True\uff0c\u96b1\u85cf\u6a19\u7684\u540d\u7a31\u3002</li> <li>legend_loc: plt.lengend_loc, optional         \u5716\u8868\u4e2d\u5716\u4f8b\u7684\u4f4d\u7f6e\u3002</li> <li>ax: matplotlib.Axes, optional         matplotlib \u4e2d\u7684\u5c3a\u6a19\u3002</li> </ul>"},{"location":"example/documents42/#returns_2","title":"Returns:","text":"<p> matplotlib.Axes</p> <p>Return to Menu</p> <p></p>"},{"location":"example/documents42/#pyfolioplottingplot_rolling_returns","title":"pyfolio.plotting.plot_rolling_returns","text":"<p>\u7e6a\u88fd\u51fa\u7d2f\u7a4d\u4ea4\u6613\u7b56\u7565\u5831\u916c\u7387\u8207\u6307\u6a19\u5831\u916c\u7387\u3002</p>"},{"location":"example/documents42/#parameters_3","title":"Parameters:","text":"<ul> <li>returns: pd.Series         \u4ea4\u6613\u7b56\u7565\u7684\u65e5\u5831\u916c\u7387\u3002</li> <li>factor_returns: pd.Series, optional         \u6307\u6a19\u5831\u916c\u7387\uff0c\u901a\u5e38\u8a2d\u5b9a\u70ba\u5e02\u5834\u5831\u916c\u3002</li> <li>live_start_date: datetime, optional         \u56de\u6e2c\u671f\u9593\u4e4b\u5f8c\uff0c\u958b\u59cb live trading \u65e5\u671f\uff0c\u76f8\u7576\u65bc\u5340\u5206 In-sample \u8207 out-of sample \u6aa2\u6e2c\uff0c\u9810\u8a2d = None\uff0c\u65e5\u671f\u5fc5\u9808\u6a19\u6e96\u5316\u3002</li> <li>logy: boolean, optional         \u662f\u5426\u4f7f\u7528\u5c0d\u6578\u5831\u916c\uff0c\u9810\u8a2d = False\u3002</li> <li>cone_std: float or tuple, optional         \u8a2d\u5b9a out_of_sample \u6642\uff0c\u4ea4\u6613\u7b56\u7565\u9810\u671f\u5831\u916c\u7387\u7684\u6a19\u6e96\u5dee\u5340\u9593\u3002         \u82e5\u70ba float\uff0c\u5247\u8a2d\u5b9a\u55ae\u4e00\u6a19\u6e96\u5dee\u5340\u9593\u3002         \u82e5\u70ba tuple\uff0c\u5247\u8a2d\u5b9a\u591a\u500b\u6a19\u6e96\u5dee\u5340\u9593\u3002</li> <li>legend_loc: plt.lengend_loc, optional         \u5716\u8868\u4e2d\u5716\u4f8b\u7684\u4f4d\u7f6e\u3002</li> <li>volatility_match: boolean, optional         \u662f\u5426\u5c07\u4ea4\u6613\u7b56\u7565\u8207\u6307\u6a19\u7684\u5831\u916c\u7387\u4ee5\u6ce2\u52d5\u5ea6\u9032\u884c\u6a19\u6e96\u5316\uff0c\u4ee5\u4fbf\u6bd4\u8f03\u76f8\u540c\u98a8\u96aa\u4e0b\u7684\u5831\u916c\u5dee\u7570\u3002</li> <li>cone_function: function, optional         \u7528\u4f86\u8a08\u7b97 out_of_sample \u671f\u9593\uff0c\u9810\u6e2c\u5831\u916c\u7387\u7684\u51fd\u5f0f\u3002</li> <li>ax: matplotlib.Axes, optional         matplotlib \u7684\u5c3a\u6a19\u3002</li> </ul>"},{"location":"example/documents42/#returns_3","title":"Returns:","text":"<p> matplotlib.Axes</p> <p>Return to Menu</p> <p></p>"},{"location":"example/documents42/#pyfolioplottingplot_returns","title":"pyfolio.plotting.plot_returns","text":"<p>\u7e6a\u88fd\u6bcf\u65e5\u4ea4\u6613\u7b56\u7565\u5831\u916c\u5716\u3002</p>"},{"location":"example/documents42/#parameters_4","title":"Parameters:","text":"<ul> <li>returns: pd.Series         \u4ea4\u6613\u7b56\u7565\u7684\u65e5\u5831\u916c\u7387\u3002</li> <li>live_start_date: datetime, optional         \u56de\u6e2c\u671f\u9593\u4e4b\u5f8c\uff0c\u958b\u59cb live trading \u65e5\u671f\uff0c\u76f8\u7576\u65bc\u5340\u5206 In-sample \u8207 out-of sample \u6aa2\u6e2c\uff0c\u9810\u8a2d = None\uff0c\u65e5\u671f\u5fc5\u9808\u6a19\u6e96\u5316\u3002 </li> <li>ax: matplotlib.Axes, optional         matplotlib \u7684\u5c3a\u6a19\u3002</li> </ul>"},{"location":"example/documents42/#returns_4","title":"Returns:","text":"<p> matplotlib.Axes</p> <p>Return to Menu</p> <p></p>"},{"location":"example/documents42/#pyfolioplottingplot_rolling_beta","title":"pyfolio.plotting.plot_rolling_beta","text":"<p>\u7e6a\u88fd\u516d\u500b\u6708\u8207\u5341\u4e8c\u500b\u6708\u7684\u79fb\u52d5 beta \u503c\u3002</p>"},{"location":"example/documents42/#parameters_5","title":"Parameters:","text":"<ul> <li>returns: pd.Series         \u4ea4\u6613\u7b56\u7565\u7684\u65e5\u5831\u916c\u7387\u3002</li> <li>factor_returns: pd.Series         \u8a08\u7b97 beta \u6240\u9700\u7684\u6307\u6a19\u5831\u916c\u7387\uff0c\u901a\u5e38\u8a2d\u5b9a\u70ba\u5e02\u5834\u5831\u916c\u3002</li> <li>legend_loc: plt.lengend_loc, optional         \u5716\u8868\u4e2d\u5716\u4f8b\u7684\u4f4d\u7f6e\u3002</li> <li>ax: matplotlib.Axes, optional         matplotlib \u7684\u5c3a\u6a19\u3002</li> </ul>"},{"location":"example/documents42/#returns_5","title":"Returns:","text":"<p> matplotlib.Axes</p> <p>Return to Menu</p> <p></p>"},{"location":"example/documents42/#pyfolioplottingplot_rolling_volatility","title":"pyfolio.plotting.plot_rolling_volatility","text":"<p>\u7e6a\u88fd\u79fb\u52d5\u6ce2\u52d5\u5ea6\u5716\u8868</p>"},{"location":"example/documents42/#parameters_6","title":"Parameters:","text":"<ul> <li>returns: pd.Series         \u4ea4\u6613\u7b56\u7565\u7684\u65e5\u5831\u916c\u7387\u3002</li> <li>factor_returns: pd.Series, optional         \u8a08\u7b97\u6307\u6a19\u6ce2\u52d5\u5ea6\u6240\u9700\u7684\u6307\u6a19\u5831\u916c\u7387\uff0c\u901a\u5e38\u8a2d\u5b9a\u70ba\u5e02\u5834\u5831\u916c\u3002</li> <li>rolling_window: int, optional         \u8a08\u7b97\u79fb\u52d5\u6ce2\u52d5\u5ea6\u6240\u9700\u4e4b\u7a97\u683c\u5927\u5c0f\u3002</li> <li>legend_loc: plt.lengend_loc, optional         \u5716\u8868\u4e2d\u5716\u4f8b\u7684\u4f4d\u7f6e\u3002</li> <li>ax: matplotlib.Axes, optional         matplotlib \u7684\u5c3a\u6a19\u3002</li> </ul>"},{"location":"example/documents42/#returns_6","title":"Returns:","text":"<p> matplotlib.Axes</p> <p>Return to Menu</p> <p></p>"},{"location":"example/documents42/#pyfolioplottingplot_rolling_sharpe","title":"pyfolio.plotting.plot_rolling_sharpe","text":"<p>\u7e6a\u88fd\u79fb\u52d5\u6ce2\u52d5\u5ea6\u5716\u8868</p>"},{"location":"example/documents42/#parameters_7","title":"Parameters:","text":"<ul> <li>returns: pd.Series         \u4ea4\u6613\u7b56\u7565\u7684\u65e5\u5831\u916c\u7387\u3002</li> <li>factor_returns: pd.Series, optional         \u8a08\u7b97\u6307\u6a19\u590f\u666e\u503c\u6240\u9700\u7684\u6307\u6a19\u5831\u916c\u7387\uff0c\u901a\u5e38\u8a2d\u5b9a\u70ba\u5e02\u5834\u5831\u916c\u3002</li> <li>rolling_window: int, optional         \u8a08\u7b97\u79fb\u52d5\u6ce2\u52d5\u5ea6\u6240\u9700\u4e4b\u7a97\u683c\u5927\u5c0f\u3002</li> <li>legend_loc: plt.lengend_loc, optional         \u5716\u8868\u4e2d\u5716\u4f8b\u7684\u4f4d\u7f6e\u3002</li> <li>ax: matplotlib.Axes, optional         matplotlib \u7684\u5c3a\u6a19\u3002</li> </ul>"},{"location":"example/documents42/#returns_7","title":"Returns:","text":"<p> matplotlib.Axes</p> <p>Return to Menu</p> <p></p>"},{"location":"example/documents42/#pyfolioplottingplot_drawdown_periods","title":"pyfolio.plotting.plot_drawdown_periods","text":"<p>\u7e6a\u88fd\u524d n \u5927\u56de\u64a4\u671f\u9593\u65bc\u7d2f\u7a4d\u5831\u916c\u5716\u3002</p>"},{"location":"example/documents42/#parameters_8","title":"Parameters:","text":"<ul> <li>returns: pd.Series         \u4ea4\u6613\u7b56\u7565\u7684\u65e5\u5831\u916c\u7387\u3002</li> <li>top: int, optional         \u6c7a\u5b9a n\uff0c\u9810\u8a2d\u70ba 10\u3002</li> <li>ax: matplotlib.Axes, optional         matplotlib \u7684\u5c3a\u6a19\u3002</li> </ul>"},{"location":"example/documents42/#returns_8","title":"Returns:","text":"<p> matplotlib.Axes</p> <p>Return to Menu</p> <pre><code>import pyfolio\npyfolio.plotting.plot_drawdown_periods(returns)\n</code></pre> <p></p>"},{"location":"example/documents42/#pyfolioplottingplot_drawdown_underwater","title":"pyfolio.plotting.plot_drawdown_underwater","text":"<p>\u7e6a\u88fd\u7b56\u7565 underwater \u7a0b\u5ea6\u3002</p>"},{"location":"example/documents42/#parameters_9","title":"Parameters:","text":"<ul> <li>returns: pd.Series         \u4ea4\u6613\u7b56\u7565\u7684\u65e5\u5831\u916c\u7387\u3002</li> <li>ax: matplotlib.Axes, optional         matplotlib \u7684\u5c3a\u6a19\u3002</li> </ul>"},{"location":"example/documents42/#returns_9","title":"Returns:","text":"<p> matplotlib.Axes</p> <p>Return to Menu</p> <pre><code>pyfolio.plotting.plot_drawdown_underwater(returns)\n</code></pre> <p></p>"},{"location":"example/documents42/#pyfolioplottingplot_monthly_returns_heatmap","title":"pyfolio.plotting.plot_monthly_returns_heatmap","text":"<p>\u4ee5\u71b1\u529b\u5716\u7e6a\u88fd\u4ea4\u6613\u7b56\u7565\u6bcf\u6708\u5831\u916c\u3002</p>"},{"location":"example/documents42/#parameters_10","title":"Parameters:","text":"<ul> <li>returns: pd.Series         \u4ea4\u6613\u7b56\u7565\u7684\u65e5\u5831\u916c\u7387\u3002</li> <li>ax: matplotlib.Axes, optional         matplotlib \u7684\u5c3a\u6a19\u3002</li> </ul>"},{"location":"example/documents42/#returns_10","title":"Returns:","text":"<p> matplotlib.Axes</p> <p>Return to Menu</p> <pre><code>pyfolio.plotting.plot_monthly_returns_heatmap(returns)\n</code></pre> <p></p>"},{"location":"example/documents42/#pyfolioplottingplot_annual_returns","title":"pyfolio.plotting.plot_annual_returns","text":"<p>\u7e6a\u88fd\u4ea4\u6613\u7b56\u7565\u6bcf\u5e74\u5831\u916c\u3002</p>"},{"location":"example/documents42/#parameters_11","title":"Parameters:","text":"<ul> <li>returns: pd.Series         \u4ea4\u6613\u7b56\u7565\u7684\u65e5\u5831\u916c\u7387\u3002</li> <li>ax: matplotlib.Axes, optional         matplotlib \u7684\u5c3a\u6a19\u3002</li> </ul>"},{"location":"example/documents42/#returns_11","title":"Returns:","text":"<p> matplotlib.Axes</p> <p>Return to Menu</p> <pre><code>pyfolio.plotting.plot_annual_returns(returns)\n</code></pre> <p></p>"},{"location":"example/documents42/#pyfolioplottingplot_monthly_returns_dist","title":"pyfolio.plotting.plot_monthly_returns_dist","text":"<p>\u7e6a\u88fd\u4ea4\u6613\u7b56\u7565\u6bcf\u6708\u5831\u916c\u4e4b\u5206\u5e03\u5716\u3002</p>"},{"location":"example/documents42/#parameters_12","title":"Parameters:","text":"<ul> <li>returns: pd.Series         \u4ea4\u6613\u7b56\u7565\u7684\u65e5\u5831\u916c\u7387\u3002</li> <li>ax: matplotlib.Axes, optional         matplotlib \u7684\u5c3a\u6a19\u3002</li> </ul>"},{"location":"example/documents42/#returns_12","title":"Returns:","text":"<p> matplotlib.Axes</p> <p>Return to Menu</p> <pre><code>pyfolio.plotting.plot_monthly_returns_dist(returns)\n</code></pre> <p></p>"},{"location":"example/documents42/#pyfolioplottingplot_return_quantiles","title":"pyfolio.plotting.plot_return_quantiles","text":"<p>\u7e6a\u88fd\u4ea4\u6613\u7b56\u7565\u65e5\u3001\u9031\u3001\u6708\u983b\u7387\u7684\u5831\u916c\u76d2\u72c0\u5716\u3002</p>"},{"location":"example/documents42/#parameters_13","title":"Parameters:","text":"<ul> <li>returns: pd.Series         \u4ea4\u6613\u7b56\u7565\u7684\u65e5\u5831\u916c\u7387\u3002</li> <li>live_start_date: datetime, optional         \u56de\u6e2c\u671f\u9593\u4e4b\u5f8c\uff0c\u958b\u59cb live trading \u65e5\u671f\uff0c\u76f8\u7576\u65bc\u5340\u5206 In-sample \u8207 out-of sample \u6aa2\u6e2c\uff0c\u9810\u8a2d = None\uff0c\u65e5\u671f\u5fc5\u9808\u6a19\u6e96\u5316\u3002</li> <li>ax: matplotlib.Axes, optional         matplotlib \u7684\u5c3a\u6a19\u3002</li> </ul>"},{"location":"example/documents42/#returns_13","title":"Returns:","text":"<p> matplotlib.Axes</p> <p>Return to Menu</p> <pre><code>pyfolio.plotting.plot_return_quantiles(returns, live_start_date=pd.Timestamp(\"2018-07-02\", tz='UTC'))\n</code></pre> <p></p>"},{"location":"example/documents42/#pyfolioplottingplot_exposures","title":"pyfolio.plotting.plot_exposures","text":"<p>\u7e6a\u88fd\u591a\u7a7a\u66dd\u96aa\u90e8\u4f4d\u5716\u3002</p> <pre><code>1. Long = \u591a\u982d\u90e8\u4f4d\u7e3d\u50f9\u503c/\u6240\u6709\u90e8\u4f4d\u7e3d\u50f9\u503c\n2. Short = \u7a7a\u982d\u90e8\u4f4d\u7e3d\u50f9\u503c/\u6240\u6709\u90e8\u4f4d\u7e3d\u50f9\u503c\n3. Net = \u73fe\u91d1\u90e8\u4f4d\u4ee5\u5916\u7e3d\u50f9\u503c/\u6240\u6709\u90e8\u4f4d\u7e3d\u50f9\u503c\n</code></pre>"},{"location":"example/documents42/#parameters_14","title":"Parameters:","text":"<ul> <li>returns: pd.Series         \u4ea4\u6613\u7b56\u7565\u7684\u65e5\u5831\u916c\u7387\u3002</li> <li>positions_alloc: pd.DataFrame         \u500b\u80a1\u6a19\u7684\u7684\u6301\u6709\u90e8\u4f4d\u5206\u5e03\u3002</li> <li>ax: matplotlib.Axes, optional         matplotlib \u4e2d\u7684\u5c3a\u6a19\u3002</li> </ul>"},{"location":"example/documents42/#returns_14","title":"Returns:","text":"<p> matplotlib.Axes</p> <p>Return to Menu</p> <pre><code>pyfolio.plotting.plot_exposures(returns, positions)\n</code></pre> <p></p>"},{"location":"example/documents42/#pyfolioplottingplot_max_median_position_concentration","title":"pyfolio.plotting.plot_max_median_position_concentration","text":"<p>\u7e6a\u88fd\u591a\u7a7a\u96c6\u4e2d\u7a0b\u5ea6 (concentration) \u7684\u6700\u5927\u503c\u8207\u4e2d\u4f4d\u6578\u3002</p> <pre><code>1. max_long = \u591a\u982d\u90e8\u4f4d\u96c6\u4e2d\u7a0b\u5ea6\u6700\u5927\u503c\n2. max_short = \u7a7a\u982d\u90e8\u4f4d\u96c6\u4e2d\u7a0b\u5ea6\u6700\u5927\u503c\n3. median_long = \u591a\u982d\u90e8\u4f4d\u96c6\u4e2d\u7a0b\u5ea6\u4e2d\u4f4d\u6578\n4. median_short = \u7a7a\u982d\u90e8\u4f4d\u96c6\u4e2d\u7a0b\u5ea6\u4e2d\u4f4d\u6578\n</code></pre>"},{"location":"example/documents42/#parameters_15","title":"Parameters:","text":"<ul> <li>positions_alloc: pd.DataFrame         \u500b\u80a1\u6a19\u7684\u7684\u6301\u6709\u90e8\u4f4d\u5206\u5e03\u3002</li> <li>ax: matplotlib.Axes, optional         matplotlib \u4e2d\u7684\u5c3a\u6a19\u3002</li> </ul>"},{"location":"example/documents42/#returns_15","title":"Returns:","text":"<p> matplotlib.Axes</p> <p>Return to Menu</p> <pre><code>pyfolio.plotting.plot_max_median_position_concentration(positions)\n</code></pre> <p></p>"},{"location":"example/documents42/#pyfolioplottingplot_holdings","title":"pyfolio.plotting.plot_holdings","text":"<p>\u7e6a\u88fd\u6301\u6709\u80a1\u6578\u3002 1. Daily holdings: \u6bcf\u65e5\u6301\u6709\u80a1\u6578 2. Average daily holdings, by month: \u6bcf\u6708\u65e5\u5747\u6301\u6709\u6578 3. Average daily holdings, Total: \u65e5\u5747\u6301\u6709\u6578</p>"},{"location":"example/documents42/#parameters_16","title":"Parameters:","text":"<ul> <li>returns: pd.Series         \u4ea4\u6613\u7b56\u7565\u7684\u65e5\u5831\u916c\u7387\u3002</li> <li>positions: pd.DataFrame         \u6bcf\u65e5\u6a19\u7684\u8207\u73fe\u91d1\u90e8\u4f4d\u8868\u3002</li> <li>legend_loc: plt.lengend_loc, optional         \u5716\u8868\u4e2d\u5716\u4f8b\u7684\u4f4d\u7f6e\u3002</li> <li>ax: matplotlib.Axes, optional         matplotlib \u4e2d\u7684\u5c3a\u6a19\u3002</li> </ul>"},{"location":"example/documents42/#returns_16","title":"Returns:","text":"<p> matplotlib.Axes</p> <p>Return to Menu</p> <pre><code>pyfolio.plotting.plot_holdings(returns, positions)\n</code></pre> <p></p>"},{"location":"example/documents42/#pyfolioplottingplot_long_short_holdings","title":"pyfolio.plotting.plot_long_short_holdings","text":"<p>\u7e6a\u88fd\u591a\u7a7a\u982d\u6301\u6709\u80a1\u6578\u3002</p>"},{"location":"example/documents42/#parameters_17","title":"Parameters:","text":"<ul> <li>returns: pd.Series         \u4ea4\u6613\u7b56\u7565\u7684\u65e5\u5831\u916c\u7387\u3002</li> <li>positions: pd.DataFrame         \u6bcf\u65e5\u6a19\u7684\u8207\u73fe\u91d1\u90e8\u4f4d\u8868\u3002</li> <li>legend_loc: plt.lengend_loc, optional         \u5716\u8868\u4e2d\u5716\u4f8b\u7684\u4f4d\u7f6e\u3002</li> <li>ax: matplotlib.Axes, optional         matplotlib \u4e2d\u7684\u5c3a\u6a19\u3002</li> </ul>"},{"location":"example/documents42/#returns_17","title":"Returns:","text":"<p> matplotlib.Axes</p> <p>Return to Menu</p> <pre><code>pyfolio.plotting.plot_long_short_holdings(returns, positions)\n</code></pre> <p></p>"},{"location":"example/documents42/#pyfolioplottingplot_gross_leverage","title":"pyfolio.plotting.plot_gross_leverage","text":"<p>\u7e6a\u88fd\u6bdb\u69d3\u687f (gross leverage)\uff0cgross leverage = (long exposure - short exposure)/net asset value\u3002</p>"},{"location":"example/documents42/#parameters_18","title":"Parameters:","text":"<ul> <li>returns: pd.Series         \u4ea4\u6613\u7b56\u7565\u7684\u65e5\u5831\u916c\u7387\u3002</li> <li>positions: pd.DataFrame         \u6bcf\u65e5\u6a19\u7684\u8207\u73fe\u91d1\u90e8\u4f4d\u8868\u3002</li> <li>legend_loc: plt.lengend_loc, optional         \u5716\u8868\u4e2d\u5716\u4f8b\u7684\u4f4d\u7f6e\u3002</li> <li>ax: matplotlib.Axes, optional         matplotlib \u4e2d\u7684\u5c3a\u6a19\u3002</li> </ul>"},{"location":"example/documents42/#returns_18","title":"Returns:","text":"<p> matplotlib.Axes</p> <p>Return to Menu</p> <pre><code>pyfolio.plotting.plot_gross_leverage(returns, positions)\n</code></pre> <p></p>"},{"location":"example/documents42/#pyfolioplottingplot_turnover","title":"pyfolio.plotting.plot_turnover","text":"<p>\u7e6a\u88fd\u5468\u8f49\u7387\u5716\uff0c\u5468\u8f49\u7387\u8a08\u7b97\u65b9\u6cd5\u8acb\u898b\u4e0b\u65b9 turnover_denom\u3002</p>"},{"location":"example/documents42/#parameters_19","title":"Parameters:","text":"<ul> <li>returns: pd.Series         \u4ea4\u6613\u7b56\u7565\u7684\u65e5\u5831\u916c\u7387\u3002</li> <li>transactions: pd.DataFrame         \u4ea4\u6613\u7b56\u7565\u7684\u4ea4\u6613\u8cc7\u6599\uff0c\u4e00\u5217\u70ba\u4e00\u7b46\u4ea4\u6613\u3002</li> <li>positions: pd.DataFrame         \u6bcf\u65e5\u6a19\u7684\u8207\u73fe\u91d1\u90e8\u4f4d\u8868\u3002</li> <li>turnover_denom: str, optional         \u5468\u8f49\u7387\u8a08\u7b97\u65b9\u5f0f\uff0c\u6709 AGB \u548c portfolio_value \u5169\u7a2e\uff0c\u9810\u8a2d\u70ba AGB\uff0c         \u8a08\u7b97\u65b9\u6cd5\u70ba (\u8cb7\u9032\u7e3d\u984d + \u8ce3\u51fa\u7e3d\u984d\u7d55\u5c0d\u503c) / (AGB or portfolio_value)\uff0c         AGB = portfolio-value - cash\u3002</li> <li>legend_loc: plt.lengend_loc, optional         \u5716\u8868\u4e2d\u5716\u4f8b\u7684\u4f4d\u7f6e\u3002</li> <li>ax: matplotlib.Axes, optional         matplotlib \u4e2d\u7684\u5c3a\u6a19\u3002</li> </ul>"},{"location":"example/documents42/#returns_19","title":"Returns:","text":"<p> matplotlib.Axes</p> <p>Return to Menu</p> <pre><code>pyfolio.plotting.plot_turnover(returns, transactions, positions)\n</code></pre> <p></p>"},{"location":"example/documents42/#pyfolioplottingplot_daily_volume","title":"pyfolio.plotting.plot_daily_volume","text":"<p>\u7e6a\u88fd\u6bcf\u65e5\u4ea4\u6613\u91cf\u3002</p>"},{"location":"example/documents42/#parameters_20","title":"Parameters:","text":"<ul> <li>returns: pd.Series         \u4ea4\u6613\u7b56\u7565\u7684\u65e5\u5831\u916c\u7387\u3002</li> <li>transactions: pd.DataFrame         \u4ea4\u6613\u7b56\u7565\u7684\u4ea4\u6613\u8cc7\u6599\uff0c\u4e00\u5217\u70ba\u4e00\u7b46\u4ea4\u6613\u3002</li> <li>ax: matplotlib.Axes, optional         matplotlib \u4e2d\u7684\u5c3a\u6a19\u3002</li> </ul>"},{"location":"example/documents42/#returns_20","title":"Returns:","text":"<p> matplotlib.Axes</p> <p>Return to Menu</p> <pre><code>pyfolio.plotting.plot_daily_volume(returns, transactions)\n</code></pre> <p></p>"},{"location":"example/documents42/#pyfolioplottingplot_daily_turnover_hist","title":"pyfolio.plotting.plot_daily_turnover_hist","text":"<p>\u7e6a\u88fd\u6bcf\u65e5\u5468\u8f49\u7387\u5206\u5e03\u5716\uff0c\u5468\u8f49\u7387\u8a08\u7b97\u65b9\u6cd5\u8acb\u898b\u4e0b\u65b9 turnover_denom\u3002</p>"},{"location":"example/documents42/#parameters_21","title":"Parameters:","text":"<ul> <li>transactions: pd.DataFrame         \u4ea4\u6613\u7b56\u7565\u7684\u4ea4\u6613\u8cc7\u6599\uff0c\u4e00\u5217\u70ba\u4e00\u7b46\u4ea4\u6613\u3002</li> <li>positions: pd.DataFrame         \u6bcf\u65e5\u6a19\u7684\u8207\u73fe\u91d1\u90e8\u4f4d\u8868\u3002</li> <li>turnover_denom: str, optional         \u5468\u8f49\u7387\u8a08\u7b97\u65b9\u5f0f\uff0c\u6709 AGB \u548c portfolio_value \u5169\u7a2e\uff0c\u9810\u8a2d\u70ba AGB\uff0c         \u8a08\u7b97\u65b9\u6cd5\u70ba (\u8cb7\u9032\u7e3d\u984d + \u8ce3\u51fa\u7e3d\u984d\u7d55\u5c0d\u503c) / (AGB or portfolio_value)\uff0c         AGB = portfolio-value - cash\u3002</li> <li>ax: matplotlib.Axes, optional         matplotlib \u4e2d\u7684\u5c3a\u6a19\u3002</li> </ul>"},{"location":"example/documents42/#returns_21","title":"Returns:","text":"<p> matplotlib.Axes</p> <p>Return to Menu</p> <pre><code>pyfolio.plotting.plot_daily_turnover_hist(transactions, positions)\n</code></pre> <p></p>"},{"location":"example/documents42/#pyfolioplottingplot_txn_time_hist","title":"pyfolio.plotting.plot_txn_time_hist","text":"<p>\u7e6a\u88fd\u4ea4\u6613\u6642\u9593\u5206\u5e03\u5716\u3002(\u50c5\u9069\u7528\u65bc\u65e5\u5167\u8cc7\u6599)</p>"},{"location":"example/documents42/#parameters_22","title":"Parameters:","text":"<ul> <li>transactions: pd.DataFrame         \u4ea4\u6613\u7b56\u7565\u7684\u4ea4\u6613\u8cc7\u6599\uff0c\u4e00\u5217\u70ba\u4e00\u7b46\u4ea4\u6613\u3002</li> <li>bin_minutes: float, optional         \u6642\u9593\u5340\u9593\u9593\u9694\uff0c\u9810\u8a2d\u70ba 5 \u5206\u9418\u3002</li> <li>tz: str, optional         \u6642\u5340\u3002</li> <li>ax: matplotlib.Axes, optional         matplotlib \u4e2d\u7684\u5c3a\u6a19\u3002</li> </ul>"},{"location":"example/documents42/#returns_22","title":"Returns:","text":"<p> matplotlib.Axes</p> <p>Return to Menu</p> <pre><code>pyfolio.plotting.plot_txn_time_hist(transactions, tz = 'Asia/Taipei')\n</code></pre>"},{"location":"example/documents44/","title":"Returns Analysis","text":""},{"location":"example/documents44/#_1","title":"\u5831\u916c\u7387\u8655\u7406\u65b9\u5f0f\uff1a","text":"<p>Alphalens\u7684\u51fd\u6578\u4e2d\uff0c\u82e5\u5c07<code>long_short</code>\u6216<code>demeaned</code>\u53c3\u6578\u8a2d\u5b9a\u70baTrue\u5247\u5c07\u6bcf\u4e00\u6a94\u80a1\u7968\u7684\u5831\u916c\u7387\u6263\u9664\u5168\u5e02\u5834\uff08\u6240\u6709\u6a23\u672c\u516c\u53f8\uff09\u7684\u5e73\u5747\u5831\u916c\uff0c\u5f97\u5230demeaned\u5f8c\u7684\u5831\u916c\u7387\uff0c\u6d88\u9664\u6574\u9ad4\u5e02\u5834\u6ce2\u52d5\u7684\u5f71\u97ff\u3002</p> <p>\u5169\u7a2e\u5831\u916c\u7387\u8655\u7406\u65b9\u5f0f\u53ef\u6309\u7167\u9810\u671f\u7684\u6295\u8cc7\u7b56\u7565\u6216\u6b32\u89c0\u5bdf\u7684\u91cd\u9ede\u4f86\u9078\u64c7\uff1a - \u82e5\u9810\u671f\u63a1\u7528\u7684\u662f\u591a\u7a7a\u5c0d\u6c96\u7b56\u7565\uff08long-short strategies\uff09\u3001\u672c\u91d1\u4e2d\u7acb\u591a\u7a7a\u5c0d\u6c96\u7b56\u7565\uff08long-short dollar neutral strategy\uff09\u6216\u5e02\u5834\u98a8\u96aa\u5c0d\u6c96\u7b56\u7565\uff08beta hedging strategy\uff09\u6642\uff0c\u5c07<code>long_short</code>\uff08<code>demeaned</code>\uff09\u53c3\u6578\u8a2d\u5b9a\u70baTrue\uff0c\u9078\u64c7demeaned\u5f8c\u5831\u916c\u7387\uff0c\u53ef\u4ee5\u66f4\u597d\u7684\u89c0\u5bdf\u5404\u500b\u5206\u7d44\u7684**\u76f8\u5c0d\u5831\u916c**\uff0c\u985e\u4f3c\u8d85\u984d\u5831\u916c\u7684\u6982\u5ff5\u3002</p> <ul> <li>\u82e5\u9810\u671f\u63a1\u7528\u7684\u662f**long only strategy**\u6642\uff0c\u5247\u61c9\u5c07<code>long_short</code>\uff08<code>demeaned</code>\uff09\u53c3\u6578\u8a2d\u5b9a\u70baFalse\uff0c\u89c0\u5bdf**\u7d55\u5c0d\u5831\u916c\u7387**\u3002</li> </ul> <p>\u9019\u908a\u9810\u671f\u63a1\u7528**long-short strategies**\uff0c\u4e26\u5c07<code>long_short</code>\uff08<code>demeaned</code>\uff09\u8a2d\u5b9a\u70baTrue\uff08Alphalens\u9810\u8a2d\u5c31\u662fTrue\uff09\u4e14\u5f8c\u7e8c\u7686\u6703\u63a1\u7528demeaned\u7684\u5e73\u5747\u5831\u916c\u7387\u9032\u884c\u8a08\u7b97\u3002</p>"},{"location":"example/documents44/#performance-metrics-plotting-functions","title":"Performance Metrics &amp; Plotting Functions","text":""},{"location":"example/documents44/#mean-return-by-factor-quantileby-date","title":"Mean Return by Factor Quantile\uff08by date\uff09","text":"<p>\u4ee5\u4e0b\u5229\u7528<code>mean_return_by_quantile</code>\u51fd\u6578\u4e26\u5c07<code>by_date</code>\u53c3\u6578\u8a2d\u7f6e\u70ba**True**\uff0c\u8a08\u7b97\u4e0d\u540c\u6642\u9593\u9ede\u4e0b\u5e73\u5747\u5831\u916c\u7387\uff0c\u5f8c\u7e8c\u53ef\u4ee5\u7528\u4f86\u89c0\u5bdf\u6295\u8cc7\u7d44\u5408\u5831\u916c\u7387\u96a8\u6642\u9593\u7684\u8b8a\u5316\u53ca\u8a08\u7b97\u7d2f\u8a08\u5831\u916c\u7387\u3002</p>"},{"location":"example/documents44/#_2","title":"\u5e73\u5747\u5831\u916c\u7387\uff1a","text":"<ul> <li> <p>\u82e5<code>demeaned</code>\u53c3\u6578\u8a2d\u5b9a\u70baTrue\u5247\u5c07\u6bcf\u4e00\u6a94\u80a1\u7968\u7684\u5831\u916c\u7387\u6263\u9664\u5168\u5e02\u5834\uff08\u6240\u6709\u6a23\u672c\u516c\u53f8\uff09\u7684\u5e73\u5747\u5831\u916c\uff0c\u5f97\u5230demeaned\u5f8c\u7684\u5e73\u5747\u5831\u916c\u7387\uff0c\u6d88\u9664\u6574\u9ad4\u5e02\u5834\u6ce2\u52d5\u7684\u5f71\u97ff\u3002\uff08\u9019\u908a<code>demeaned</code>\u53c3\u6578\u7684\u529f\u80fd\u8207<code>create_returns_tear_sheet</code>\u51fd\u6578\u7684<code>long_short</code>\u53c3\u6578\u529f\u80fd\u4e00\u81f4\uff09  </p> </li> <li> <p>\u9808\u6ce8\u610f\u6301\u6709\u671f1\u65e5\u30015\u65e5\u53ca10\u65e5\u7684\u5831\u916c\u7387\u8a08\u7b97\u983b\u7387\u4e0d\u540c\uff0c\u7121\u6cd5\u76f4\u63a5\u6bd4\u8f03\u3002</p> </li> </ul> <p>\u4ee5factor_quantile=1\uff0c\u6301\u6709\u671f=1D\uff0cdate=2013-01-03\u70ba\u4f8b\uff1a</p>"},{"location":"example/documents44/#demeanedfalse","title":"\u82e5demeaned=False\uff1a","text":"<p>\u5229\u75282013-01-03\u7576\u65e5\u6240\u6709quantile=1\u516c\u53f8\u8a08\u7b97\u5e73\u5747\u5831\u916c\u7387\uff08\u7c21\u55ae\u5e73\u5747\uff09\u3002</p>"},{"location":"example/documents44/#demeanedtrue","title":"\u82e5demeaned=True\uff1a","text":"<p>1.\u5148\u5c0d2013-01-03\u7576\u65e5quantile\uff1d1\u6240\u6709\u516c\u53f8\u7684\u5831\u916c\u7387\u505ademeaned\uff1a\uff08\u7576\u65e5\u539f\u59cb\u7684\u5831\u916c\u7387\uff0d\u7576\u65e5factor_quantile\uff1d1~5\u6240\u6709\u516c\u53f8\u7684\u5e73\u5747\u5831\u916c\u7387\uff09\u3002  2.\u518d\u5c0d\u4e0a\u8ff0demeaned\u5f8c\u7684\u5831\u916c\u7387\u505a\u5e73\u5747\uff0c\u5f97\u5230quantile\uff1d1\u7576\u65e5demeaned\u5f8c\u7684\u5e73\u5747\u5831\u916c\u7387\u3002</p>"},{"location":"example/documents44/#_3","title":"\u5e73\u5747\u5831\u916c\u7387\u6a19\u6e96\u5dee\uff1a","text":"<p>\u4ee5factor_quantile=1\uff0c\u6301\u6709\u671f=1D\uff0cdate=2013-01-03\u70ba\u4f8b\uff1a</p> <pre><code>mean_return_by_q_daily, std_err_by_q_daily = alphalens.performance.mean_return_by_quantile(factor_data, by_date=True)\n\nmean_return_by_q_daily.head()\n\nstd_err_by_q_daily.head()\n</code></pre>"},{"location":"example/documents44/#demeanedfalse_1","title":"\u82e5demeaned=False\uff1a","text":"<p>\u03c3\uff08quantile=1\u6240\u6709\u516c\u53f8\u57282013-01-03\u7576\u65e5\u7684\u5e73\u5747\u5831\u916c\u7387)\uff0f\\({\\sqrt {\u516c\u53f8\u6578\u76ee}}\\) </p>"},{"location":"example/documents44/#demeanedtrue_1","title":"\u82e5demeaned=True\uff1a","text":"<p>\u03c3\uff08quantile=1\u6240\u6709\u516c\u53f8\u57282013-01-03\u7576\u65e5\u7684demeaned\u5f8c\u7684\u5e73\u5747\u5831\u916c\u7387)\uff0f\\({\\sqrt {\u516c\u53f8\u6578\u76ee}}\\)</p>"},{"location":"example/documents44/#convert-returns-to-one_period_len","title":"Convert returns to one_period_len","text":"<p>\u56e0\u524d\u9762\u63d0\u53ca\u6301\u6709\u671f1\u65e5\u30015\u65e5\u53ca10\u65e5\u7684\u5831\u916c\u7387\u8a08\u7b97\u983b\u7387\u4e0d\u540c\uff0c\u7121\u6cd5\u76f4\u63a5\u6bd4\u8f03\uff0c\u6545\u9019\u908a\u5229\u7528 <code>alphalens.utils.rate_of_return</code> \u5c07\u4e0d\u540c\u6301\u6709\u671f\u7684\u5831\u916c\u7387\u7686\u8f49\u70ba\u65e5\u5831\u916c\u3002</p>"},{"location":"example/documents44/#_4","title":"\u5e73\u5747\u5831\u916c\u7387\u983b\u7387\u8f49\u63db\uff1a","text":"<p>\u5229\u7528<code>rate_of_return</code>\u51fd\u6578\u91dd\u5c0d\u5831\u916c\u7387\u8a08\u7b97\u7684\u57fa\u6e96\u671f\u505a\u8f49\u63db\uff08\u985e\u4f3c\u8907\u5408\u6210\u9577\u7387CAGR\u7684\u6982\u5ff5\uff09\u3002  </p> <pre><code>mean_return_by_q_daily_convertfreq=mean_return_by_q_daily.apply(alphalens.utils.rate_of_return,\n                                                                axis=0,\n                                                                base_period=mean_return_by_q_daily.columns[0])\nmean_return_by_q_daily_convertfreq.head()\n</code></pre>"},{"location":"example/documents44/#_5","title":"\u8f49\u63db\u65b9\u5f0f\u5982\u4e0b\uff1a","text":"<p>$ ({\u8f49\u63db\u524d\u5831\u916c\u7387+1})^{\\left({\\cfrac{\u57fa\u6e96\u671f}{\u539f\u59cb\u6301\u6709\u671f}}\\right)}-1 $  </p> <p>\u4f8b\u5982\uff1aquantile=1\uff0c\u6301\u6709\u671f=10D\uff0cdate=2013-01-03\u7684\u5831\u916c\u7387\u70ba-0.046771\uff0c\u82e5\u57fa\u6e96\u671f\u70ba1\u5929\uff0c\u5247\u8f49\u63db\u5f8c\u5831\u916c\u7387\u70ba\uff1a$ ({-0.046771+1})^ {1/10}-1 $</p>"},{"location":"example/documents44/#_6","title":"\u6a19\u6e96\u5dee\u983b\u7387\u8f49\u63db\uff1a","text":"<p>\u5728<code>mean_return_by_quantile</code>\u51fd\u6578\u8a08\u7b97\u51fa\u4f86\u7684\u6a19\u6e96\u5dee\u6703\u56e0\u70ba\u6301\u6709\u671f\u4e0d\u540c\u800c\u7522\u751f\u983b\u7387\u4e0d\u540c\u7684\u60c5\u5f62\uff0c\u70ba\u4e86\u5229\u65bc\u6bd4\u8f03\uff0c\u4ee5\u4e0b\u5229\u7528<code>std_conversion</code>\u51fd\u6578\u5c07\u6a19\u6e96\u5dee\u505a\u8f49\u63db\u3002 </p> <pre><code>std_err_by_q_daily_convertfreq=std_err_by_q_daily.apply(alphalens.utils.std_conversion,\n                                                        axis=0,\n                                                        base_period=std_err_by_q_daily.columns[0])\nstd_err_by_q_daily_convertfreq.head()\n</code></pre>"},{"location":"example/documents44/#_7","title":"\u8f49\u63db\u65b9\u5f0f\u5982\u4e0b\uff1a","text":"<p>$ {\\cfrac{\u8f49\u63db\u524d\u6a19\u6e96\u5dee} {{\\sqrt{\\cfrac{\u539f\u59cb\u6301\u6709\u671f}{\u57fa\u6e96\u671f}}}}} $ </p> <p>\u4f8b\u5982\uff1aquantile=1\uff0c\u6301\u6709\u671f=10D\uff0cdate=2013-01-03\u7684\u6a19\u6e96\u5dee\u70ba0.008489\uff0c\u82e5\u57fa\u6e96\u671f\u70ba1\u5929\uff0c\u5247\u8f49\u63db\u5f8c\u5831\u916c\u7387\u70ba\uff1a$ {\\cfrac{0.008489} {{\\sqrt{\\cfrac{10}{1}}}}} $ </p>"},{"location":"example/documents44/#mean-return-by-factor-quantile","title":"Mean Return by Factor Quantile","text":"<p>\u7528<code>mean_return_by_quantile</code>\u51fd\u6578\u4e26\u5c07<code>by_date</code>\u53c3\u6578\u8a2d\u7f6e\u70ba**False**\uff0c\u4e0d\u8003\u616e\u6642\u9593\u5dee\u7570\uff0c\u8a08\u7b97\u6574\u9ad4\u7684\u5e73\u5747\u5831\u916c\u7387\u3002\u53ef\u4ee5\u5f9e\u4e2d\u4e86\u89e3\u8cb7\u5165\u5404\u5206\u7d44\u7684\u80a1\u7968\uff0c\u5229\u7528\u7279\u5b9a\u6301\u6709\u671f\u6301\u6709\u81f3\u671f\u672b\u80fd\u7372\u5f97\u7684\u5e73\u5747\u5831\u916c\uff0c\u5c0d\u56e0\u5b50\u7684\u9810\u6e2c\u529b\u505a\u521d\u6b65\u4e86\u89e3\u3002</p>"},{"location":"example/documents44/#_8","title":"\u5e73\u5747\u5831\u916c\u7387\uff1a","text":"<p>\u4ee5quantile=1\uff0c\u6301\u6709\u671f=1D\u70ba\u4f8b\uff1a</p>"},{"location":"example/documents44/#demeanedtrue_2","title":"\u56e0demeaned=True\uff1a","text":"<p>1.\u91dd\u5c0d\u6240\u6709quantile=1\u7684\u516c\u53f8\uff0c\u8a08\u7b97\u6bcf\u4e00\u65e5\u7684demeaned\u5f8c\u5e73\u5747\u5831\u916c\u7387\u3002 2.\u5c07\u6bcf\u4e00\u65e5\u7684demeaned\u5f8c\u5e73\u5747\u5831\u916c\u7387\u518d\u53d6\u5e73\u5747\u3002  </p>"},{"location":"example/documents44/#_9","title":"\u5e73\u5747\u5831\u916c\u7684\u6a19\u6e96\u5dee\uff1a","text":"<p>\u4ee5factor_quantile=1\uff0c\u6301\u6709\u671f=1D\u70ba\u4f8b\uff1a</p> <pre><code>mean_return_by_q, std_err_by_q = alphalens.performance.mean_return_by_quantile(factor_data,\n                                                                               by_date=False)\nmean_return_by_q.head()\n</code></pre>"},{"location":"example/documents44/#demeanedtrue_3","title":"\u56e0demeaned=True\uff1a","text":"<p>\u03c3\uff08\u6240\u6709quantile=1\u7684\u516c\u53f8\uff0c\u6bcf\u4e00\u65e5demeaned\u5f8c\u5e73\u5747\u5831\u916c\u7387\uff09\uff0f\\({\\sqrt {\u4ea4\u6613\u65e5\u6578}}\\) </p>"},{"location":"example/documents44/#_10","title":"\u5e73\u5747\u5831\u916c\u7387\u8f49\u63db\u983b\u7387\uff1a","text":"<pre><code>mean_return_by_q_convertfreq=mean_return_by_q.apply(alphalens.utils.rate_of_return,\n                                                    axis=0,\n                                                    base_period=mean_return_by_q.columns[0])\nmean_return_by_q_convertfreq\n</code></pre>"},{"location":"example/documents44/#mean-period-wise-return-by-factor-quantile","title":"Mean Period Wise Return by Factor Quantile","text":"<p>\u6700\u5f8c\u5c07<code>performance.mean_return_by_quantile</code>\u7684\u8a08\u7b97\u7d50\u679c\u5229\u7528<code>plot_quantile_returns_bar</code>\u51fd\u6578\u5c07\u56e0\u5b50\u5e73\u5747\u5831\u916c\u7387\u756b\u6210\u67f1\u72c0\u5716\u3002  </p> <p>\u6211\u5011\u901a\u5e38\u6703\u5e0c\u671b\u5831\u916c\u5728\u4e0d\u540c\u5206\u7d44\u4e2d\u5448\u73fe\u55ae\u8abf\u905e\u589e\uff0c\u5373bottom quantile\uff08\u7b2c\u4e00\u7d44\uff09\u5831\u916c\u7387\u6700\u4f4e\uff0ctop quantile\uff08\u7b2c\u4e94\u7d44\uff09\u5831\u916c\u7387\u6700\u9ad8\u3002\u5728\u9019\u7a2e\u60c5\u5f62\u4e0b\u53ef\u4ee5\u900f\u904e\u505a\u591a\u7b2c\u4e94\u7d44\u7684\u80a1\u7968\u3001\u653e\u7a7a\u7b2c\u4e00\u7d44\u7684\u80a1\u7968\uff0c\u4f86\u5efa\u69cb\u591a\u7a7a\u7b56\u7565\u3002\u4f46\u5728\u9019\u500b\u56e0\u5b50\u4e2d\uff0c\u4e26\u6c92\u6709\u660e\u986f\u7684\u55ae\u8abf\u905e\u589e\u73fe\u8c61\u3002</p> <p>\u53e6\u4e00\u500b\u53ef\u4ee5\u89c0\u5bdf\u7684\u91cd\u9ede\u70ba\u4e0d\u540c\u7684\u6301\u6709\u671f\u9593\u5c0d\u61c9\u7684\u5e73\u5747\u5831\u916c\u7387\uff0c\u5b83\u544a\u8a34\u6211\u5011\u9700\u8981\u6301\u6709\u7279\u5b9a\u80a1\u7968\u591a\u4e45\u624d\u53ef\u4ee5\u6700\u5927\u5316\u5831\u916c\u3002</p> <pre><code>alphalens.plotting.plot_quantile_returns_bar(mean_return_by_q_convertfreq)\nsns.despine()\n</code></pre>"},{"location":"example/documents44/#period-wise-return-by-factor-quantileviolin-plots","title":"Period Wise Return by Factor Quantile\uff08Violin plots\uff09","text":"<p>\u5c0f\u63d0\u7434\u5716\u7d50\u5408\u6a5f\u7387\u5bc6\u5ea6\u51fd\u6578\u5716\uff08probability density function plot\uff09\u53ca\u76d2\u9b1a\u5716\uff08box plot\uff09\u3002\u8a72\u5716\u5f62\u53ef\u4ee5\u5c55\u793a\u8b8a\u6578\u7684\u4e09\u500b\u56db\u5206\u4f4d\u6578\u3001\u6975\u503c\u53ca\u6a5f\u7387\u5206\u4f48\u3002 \u53ef\u4ee5\u7528\u4f86\u4e86\u89e3\u56e0\u5b50\u4e2d\u566a\u97f3\u7684\u5927\u5c0f\u3002</p> <pre><code>alphalens.plotting.plot_quantile_returns_violin(mean_return_by_q_daily_convertfreq)\nsns.despine()\n</code></pre>"},{"location":"example/documents44/#top-minus-bottom-quantile-mean-returns","title":"Top Minus Bottom Quantile Mean Returns","text":""},{"location":"example/documents44/#mean-return-spreadby-date","title":"Mean return spread\uff08by date\uff09","text":"<p>\u5728\u5404\u56e0\u5b50\u5206\u7d44\u5e73\u5747\u5831\u916c\u7387\uff08\u975e\u6642\u9593\u5e8f\u5217\uff09\u7684\u7d50\u679c\u4e2d\u53ef\u4ee5\u767c\u73fe\u7b2c\u4e94\u7d44\u7684\u5831\u916c\u7387\u6700\u9ad8\u4e14\u7b2c\u4e00\u7d44\u7684\u5831\u916c\u6700\u4f4e\uff0c\u56e0\u6b64\u53ef\u4ee5\u900f\u904e\u591a\u7a7a\u5c0d\u6c96\u7b56\u7565\uff08\u7b49\u6b0a\u91cd\u914d\u7f6e\uff09\uff0c\u505a\u591a\u7b2c\u4e94\u7d44\u7684\u80a1\u7968\u4e26\u540c\u6642\u653e\u7a7a\u7b2c\u4e00\u7d44\u7684\u80a1\u7968\u4f86\u6700\u5927\u5316\u5831\u916c\u3002</p> <p>\u9019\u908a\u5229\u7528<code>compute_mean_returns_spread</code>\u51fd\u6578\u5c07\u7b2c5\u7d44\uff08<code>upper_quant</code>\u53c3\u6578\uff09\u5e73\u5747\u5831\u916c\u7387\u6e1b\u53bb\u7b2c1\u7d44\uff08<code>lower_quant</code>\u53c3\u6578\uff09\u7684\u5e73\u5747\u5831\u916c\u7387\uff0c\u5f97\u5230\u591a\u7a7a\u5c0d\u6c96\u6295\u7d44\u5e73\u5747\u5831\u916c\u7387\uff08\u5373mean return spread\uff09\u53ca\u5176\u6a19\u6e96\u5dee\u3002  </p>"},{"location":"example/documents44/#top-quantilebottom-quantilealphalens","title":"\u901a\u5e38\u6703\u9078\u64c7\u982d\u5c3e\u5169\u500b\u5206\u7d44\u505a\u5206\u5225\u505a\u70batop quantile\u53cabottom quantile\uff0c\u4e0d\u904e\u5728Alphalens\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u5206\u7d44\u9032\u884c\u8a08\u7b97\u3002","text":"<pre><code>quant_return_spread, std_err_spread = alphalens.performance.compute_mean_returns_spread(mean_return_by_q_daily_convertfreq,\n                                                                                        upper_quant=5,\n                                                                                        lower_quant=1,\n                                                                                        std_err=std_err_by_q_daily_convertfreq)\nquant_return_spread.head()\n\nstd_err_spread.head()\n</code></pre> <p>\u5229\u7528<code>plot_mean_quantile_returns_spread_time_series</code>\u51fd\u6578\u7e6a\u88fd\u591a\u7a7a\u5c0d\u6c96\u6295\u7d44\u5e73\u5747\u5831\u916c\u7387\uff08mean return spread\uff09\u7684\u6298\u7dda\u5716\uff0c\u89c0\u5bdf\u4e0d\u540c\u671f\u9593\u591a\u7a7a\u5c0d\u6c96\u5747\u5831\u916c\u7387\u7684\u8b8a\u5316\u3002\u901a\u5e38\u6703\u5e0c\u671b\u5f97\u5230\u7a69\u5b9a\uff1e0\u7684\u66f2\u7dda\uff0c\u4ee3\u8868\u591a\u7a7a\u5c0d\u6c96\u7b56\u7565\u80fd\u7a69\u5b9a\u512a\u65bc\u6240\u6709\u6a23\u672c\u516c\u53f8\u7684\u5e73\u5747\u5831\u916c\u7387\u3002  </p> <p>\u5716\u4e2d\u7684\u6dfa\u8272\u7dda\u4ee3\u8868\u591a\u7a7a\u5c0d\u6c96\u6295\u7d44\u7684\u5e73\u5747\u5831\u916c\u7387\uff08mean return spread\uff09\u3001\u6df1\u8272\u7dda\u4ee3\u8868\u904e\u53bb22\u500b\u4ea4\u6613\u65e5\u7684\u591a\u7a7a\u5c0d\u6c96\u5e73\u5747\u5831\u916c\u7387\uff081 month moving avg\uff09\u3001\u9670\u5f71\u8655\u5247\u4ee3\u8868\u5831\u916c\u7387\u7684\u4fe1\u8cf4\u5340\u9593\u3002</p>"},{"location":"example/documents44/#_11","title":"\u591a\u7a7a\u5c0d\u6c96\u5e73\u5747\u5831\u916c","text":"<p>\u5229\u7528\u5404\u56e0\u5b50\u5206\u7d44\u5e73\u5747\u5831\u916c\u7387\uff08by date\uff09\u8a08\u7b97\u3002</p> <p>\u4ee5\u6301\u6709\u671f=10D\uff0cdate=2013-01-03\u70ba\u4f8b\uff1a\uff08\u7576\u5929\u7b2c\u4e94\u7d44\u5e73\u5747\u5831\u916c\uff0d\u7576\u5929\u7b2c\u4e00\u7d44\u5e73\u5747\u5831\u916c\uff09</p>"},{"location":"example/documents44/#_12","title":"\u591a\u7a7a\u5c0d\u6c96\u5e73\u5747\u5831\u916c\u7387\u7684\u6a19\u6e96\u5dee","text":"<p>\u5229\u7528\u5404\u56e0\u5b50\u5206\u7d44\u5e73\u5747\u5831\u916c\u7387\uff08by date\uff09\u7684\u6a19\u6e96\u5dee\u8a08\u7b97\u3002</p> <p>\u4ee5\u6301\u6709\u671f=10D\uff0cdate=2013-01-03\u70ba\u4f8b\uff1a\\(\\sqrt {\uff08\u7576\u5929\u7b2c5\u7d44\u5e73\u5747\u5831\u916c\u7387\u7684\u6a19\u6e96\u5dee\uff09^2 + \uff08\u7576\u5929\u7b2c1\u7d44\u5e73\u5747\u5831\u916c\u7387\u7684\u6a19\u6e96\u5dee\uff09^2}\\)</p>"},{"location":"example/documents44/#bandwidth1","title":"\u9670\u5f71\u8655\u4e0a\u4e0b\u8ecc\uff08\u5176\u4e2d\uff0cbandwidth\u9810\u8a2d1\uff09","text":"<p>\u4e0a\u8ecc = \u7576\u5929\u591a\u7a7a\u5c0d\u6c96\u6295\u7d44\u5e73\u5747\u5831\u916c\u7387 + \uff08\u7576\u5929\u591a\u7a7a\u5c0d\u6c96\u6295\u7d44\u5e73\u5747\u5831\u916c\u7387\u7684\u6a19\u6e96\u5dee * bandwidth\uff09 \u4e0b\u8ecc = \u7576\u5929\u591a\u7a7a\u5c0d\u6c96\u6295\u7d44\u5e73\u5747\u5831\u916c\u7387 - \uff08\u7576\u5929\u591a\u7a7a\u5c0d\u6c96\u6295\u7d44\u5e73\u5747\u5831\u916c\u7387\u7684\u6a19\u6e96\u5dee * bandwidth\uff09</p> <pre><code>alphalens.plotting.plot_mean_quantile_returns_spread_time_series(quant_return_spread,\n                                                                 std_err_spread)\n</code></pre>"},{"location":"example/documents44/#cumulative-return-by-quantile","title":"Cumulative Return by Quantile","text":"<p>\u76f8\u8f03\u65bc\u524d\u9762\u63d0\u53ca\u7684\u5e73\u5747\u5831\u916c\u7387\uff0c\u9019\u908a\u6a21\u64ec\u900f\u904e\u7b49\u6b0a\u91cd\u65b9\u5f0f\u4ea4\u6613\u5404\u56e0\u5b50\u5206\u7d44\u4e2d\u7684\u6240\u6709\u80a1\u7968\uff0c\u4e26\u8a08\u7b97\u5be6\u969b\u5831\u916c\u7387\u3002</p> <p>\u9019\u908a\u6211\u5011\u5e0c\u671b\u770b\u5230\u4e0d\u540c\u5206\u7d44\u7684\u5831\u916c\u7387\u8d70\u52e2\u5448\u73fe\u767c\u6563\u4e14\u5404\u5206\u7d44\u7684\u8868\u73fe\u5448\u73fe\u55ae\u8abf\u905e\u589e\uff0c\u5373top quantile\u7684\u5831\u916c\u7387\u512a\u65bcbottom quantile\u3002  </p> <p>\u6b64\u5916\uff0c\u5728\u63a1\u7528\u591a\u7a7a\u5c0d\u6c96\u7b56\u7565\u7684\u60c5\u5f62\u4e0b\uff0c\u6703\u505a\u591atop quantile\uff0c\u4e26\u540c\u6642\u653e\u7a7abottom quantile\u7684\u80a1\u7968\u3002\u56e0\u6b64\u6211\u5011\u5e0c\u671b\u770b\u5230top quantile\u9010\u6f38\u4e0a\u5347\u4e14bottom quantile\u7684\u5831\u916c\u7387\u9010\u6f38\u4e0b\u964d\u3002\uff08\u6b64\u8655top quantile\u70ba\u7b2c5\u7d44\uff0cbottom quantile\u70ba\u7b2c1\u7d44\uff09 </p>"},{"location":"example/documents44/#_13","title":"\u7d2f\u8a08\u5831\u916c\u7387\u8a08\u7b97\u65b9\u5f0f","text":"<ul> <li>\u5229\u7528<code>cumulative_returns</code>\u51fd\u6578\u5c07\u540c\u4e00\u5206\u7d44\u6bcf\u5929\u7684\u5831\u916c\u7387+1\u5f8c\u518d\u505a\u9023\u4e58\uff0c\u5f97\u5230\u65e5\u7d2f\u8a08\u5831\u916c\u7387\u3002  </li> <li><code>performance.cumulative_returns</code>\u51fd\u6578\u5229\u7528<code>ep.cum_returns(returns, starting_value=1)</code>\u505a\u8a08\u7b97\u3002  </li> </ul> <p>\u516c\u5f0f\u5982\u4e0b\uff1a </p> \\[\\quad \\prod_{t=1}^p {(1+\u5e73\u5747\u5831\u916c\u7387_t)} \\quad \\] <pre><code>cum_ret = mean_return_by_q_daily[['1D']].unstack('factor_quantile').apply(alphalens.performance.cumulative_returns)\ncum_ret.head()cum_ret=mean_return_by_q_daily[['1D']].unstack('factor_quantile').apply(alphalens.performance.cumulative_returns)\n</code></pre> <p>\u4ee5\u4e0b\u5229\u7528<code>plot_cumulative_returns_by_quantile</code>\u51fd\u6578\u5c07\u7d2f\u8a08\u5831\u916c\u7387\u7e6a\u88fd\u6210\u6298\u7dda\u5716\u3002\u53d7\u9650\u65bcAlphalens\u8a08\u7b97\u7d2f\u8a08\u5831\u916c\u7387\u7684\u65b9\u5f0f\uff0c\u50c5\u5448\u73fe\u6301\u6709\u671f\u70ba1\u65e5\u7684\u7d2f\u8a08\u5831\u916c\u7387\u6298\u7dda\u5716\u3002  </p>"},{"location":"example/documents44/#_14","title":"\u9650\u5236\uff1a","text":"<p>\u56e0\u9019\u908a\u4f7f\u7528\u7684\u70ba\u65e5\u983b\u7387\u8cc7\u6599\uff0c\u7576\u6301\u6709\u671f\u70ba10\u65e5\u6642\uff0c\u82e5\u8981\u8a08\u7b9720130102\u81f320130103\u7684\u7d2f\u8a08\u5831\u916c\u7387\uff0c\u5247Alphalens\u8a08\u7b97\u65b9\u5f0f\u70ba\uff081+\u572820130102\u6642\u9ede\u6301\u670910\u65e5\u7684\u5831\u916c\u7387\uff09 \u00d7\uff081+\u572820130103\u6642\u9ede\u6301\u670910\u65e5\u7684\u5831\u916c\u7387\uff09\uff0c\u4f46\u9019\u500b\u8a08\u7b97\u65b9\u5f0f\u4e26\u4e0d\u6070\u7576\u3002</p> <pre><code>alphalens.plotting.plot_cumulative_returns_by_quantile(mean_return_by_q_daily['1D'], period='1D')\nsns.despine()\n</code></pre>"},{"location":"example/documents44/#factor-weighted-longshort-portfolio-cumulative-return","title":"Factor weighted Long/Short Portfolio Cumulative Return","text":"<p>While looking at quantiles is important we must also look at the factor returns as a whole. The cumulative factor long/short returns plot lets us view the combined effects overtime of our entire factor.</p> <p>\u9019\u908a\u5229\u7528<code>factor_returns</code>\u51fd\u6578\u6a21\u64ec\u4e86\u53e6\u4e00\u7a2e\u591a\u7a7a\u5c0d\u6c96\u7b56\u7565\uff1a\u4ee5\u56e0\u5b50\u503c\u70ba\u6b0a\u91cd\uff0c\u505a\u591a\u56e0\u5b50\u503c\u70ba\u6b63\u7684\u80a1\u7968\uff0c\u505a\u7a7a\u56e0\u5b50\u503c\u70ba\u8ca0\u7684\u80a1\u7968 \uff0c\u7372\u5f97\u591a\u7a7a\u5c0d\u6c96\u5831\u916c\u3002\u9019\u500b\u7b56\u7565\u7d0d\u5165\u6240\u6709\u80a1\u7968\u6c60\u4e2d\u7684\u80a1\u7968\u9032\u884c\u4ea4\u6613\uff0c\u8207\u524d\u9762\u63d0\u5230\u7684\u56e0\u5b50\u5206\u7d44\u7d44\u5225\uff08quantile\uff09\u7121\u95dc\u3002\u82e5\u56e0\u5b50\u7686\u70ba\u6b63\uff0c\u5247\u6703\u5f62\u6210\u4e00\u500b\u7d14\u505a\u591a\u7684\u6295\u8cc7\u7d44\u5408\u3002  </p> <p>\u901a\u5e38\u5be6\u52d9\u4e0a\u9032\u884c\u591a\u7a7a\u5c0d\u6c96\u7b56\u7565\u6642\uff0c\u53ea\u6703\u4ea4\u6613top quantile\u53cabottom quantile\uff0c\u4f46\u662f\u4f9d\u7136\u53ef\u4ee5\u5229\u7528\u56e0\u5b50\u52a0\u6b0a\u7684\u7d2f\u8a08\u5831\u916c\u7387\u4f86\u89c0\u5bdf\u56e0\u5b50\u6574\u9ad4\u9810\u6e2c\u80fd\u529b\u7684\u4e00\u81f4\u6027\u3002\u82e5\u662f\u8d8a\u4e00\u81f4\u5247\u4ee5\u56e0\u5b50\u52a0\u6b0a\u7684\u65b9\u5f0f\u5efa\u7acb\u6295\u8cc7\u7d44\u5408\u6703\u66f4\u6709\u512a\u52e2\u3002</p>"},{"location":"example/documents44/#_15","title":"\u56e0\u5b50\u52a0\u6b0a","text":"<p>\u6839\u64da<code>factor_returns</code>\u51fd\u6578\u4e2ddemeaned\u53c3\u6578\u8a2d\u5b9a\u7684\u4e0d\u540c\uff0c\u56e0\u5b50\u52a0\u6b0a\u6295\u7d44\u7684\u6b0a\u6578\u8a08\u7b97\u65b9\u5f0f\u53ef\u5206\u70ba\u4ee5\u4e0b\u5169\u7a2e\uff1a</p> <pre><code>ls_factor_returns = alphalens.performance.factor_returns(factor_data)\nls_factor_returns.head()\n</code></pre> <p>\u6700\u5f8c\u5c07\u7d2f\u8a08\u5831\u916c\u7387\u7e6a\u88fd\u6210\u6298\u7dda\u5716\u3002\u53d7\u9650\u65bcAlphalens\u8a08\u7b97\u7d2f\u8a08\u5831\u916c\u7387\u7684\u65b9\u5f0f \uff0c\u50c5\u5448\u73fe\u6301\u6709\u671f\u70ba1\u65e5\u7684\u7d2f\u8a08\u5831\u916c\u7387\u6298\u7dda\u5716\u3002  </p>"},{"location":"example/documents44/#demeanedfalsedemeaned","title":"demeaned=False\uff08\u4e0d\u91dd\u5c0d\u56e0\u5b50\u5024\u505ademeaned\u8655\u7406\uff09","text":"<p>\u80a1\u7968i\u5728\u6642\u9edet\u6b0a\u6578\u7684\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a\u5c07\u8a72\u80a1\u7968\u7576\u5929\u7684\u56e0\u5b50\u503c\u9664\u4ee5\u7576\u5929\u6240\u6709\u80a1\u7968\u56e0\u5b50\u5024\u53d6\u7d55\u5c0d\u5024\u5f8c\u7684\u7e3d\u5408\u3002\u516c\u5f0f\u5982\u4e0b\uff1a </p> \\[{\u6b0a\u6578_{i,t}=}\\frac{\u56e0\u5b50\u503c_{i,t}}{\\sum_{i=1}^n  {\\mid\u56e0\u5b50\u503c_{i,t}}\\mid}\\]"},{"location":"example/documents44/#demeanedtruedemeaned","title":"demeaned=True\uff08\u91dd\u5c0d\u56e0\u5b50\u5024\u505ademeaned\u8655\u7406\uff09","text":"<p>\u5148\u8a08\u7b97\u80a1\u7968i\u5728\u6642\u9edet\u7684demeaned\u5f8c\u56e0\u5b50\u503c\uff0c\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a\u5c07\u8a72\u80a1\u7968\u7576\u5929\u7684\u56e0\u5b50\u503c\u6263\u9664\u7576\u5929\u6240\u6709\u80a1\u7968\u56e0\u5b50\u503c\u7684\u5e73\u5747\u3002\u516c\u5f0f\u5982\u4e0b\uff1a    </p> \\[{demeaned\u5f8c\u56e0\u5b50\u503c_{i,t}=}{\u56e0\u5b50\u503c_{i,t}}{-}\\frac{{\\sum_{i=1}^n{\u56e0\u5b50\u503c_{i,t}}}}{n}\\] <p>\u63a5\u8457\u518d\u8a08\u7b97\u80a1\u7968i\u5728\u6642\u9edet\u6b0a\u6578\uff0c\u516c\u5f0f\u5982\u4e0b\uff1a </p> \\[{\u6b0a\u6578_{i,t}=}\\frac{demeaned\u5f8c\u56e0\u5b50\u503c_{i,t}}{\\sum_{i=1}^n  {\\mid demeaned\u5f8c\u56e0\u5b50\u503c_{i,t}}\\mid}\\]"},{"location":"example/documents44/#_16","title":"\u9650\u5236\uff1a","text":"<p>\u56e0\u9019\u908a\u4f7f\u7528\u7684\u70ba\u65e5\u983b\u7387\u8cc7\u6599\uff0c\u7576\u6301\u6709\u671f\u70ba10\u65e5\u6642\uff0c\u82e5\u8981\u8a08\u7b9720130102\u81f320130103\u7684\u7d2f\u8a08\u5831\u916c\u7387\uff0c\u5247Alphalens\u8a08\u7b97\u65b9\u5f0f\u70ba\uff081+\u572820130102\u6642\u9ede\u6301\u670910\u65e5\u7684\u5831\u916c\u7387\uff09 \u00d7\uff081+\u572820130103\u6642\u9ede\u6301\u670910\u65e5\u7684\u5831\u916c\u7387\uff09\uff0c\u4f46\u9019\u500b\u8a08\u7b97\u65b9\u5f0f\u4e26\u4e0d\u6070\u7576\u3002\u89e3\u6c7a\u65b9\u6cd5\u70ba\uff1a\u5c07\u539f\u59cb\u8cc7\u6599\u76f4\u63a5\u8abf\u6574\u70ba\u6708\u983b\u7387\uff0c\u4e26\u4e14\u5c07\u6301\u6709\u671f\u8a2d\u5b9a\u70ba1\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6708\u7684\u7d2f\u8a08\u5831\u916c\u7387\u3002</p> <pre><code>alphalens.plotting.plot_cumulative_returns(ls_factor_returns['1D'], \n                                           period='1D')\nsns.despine()\n</code></pre>"},{"location":"example/documents44/#alpha-and-beta","title":"Alpha and beta","text":"<p>Ann. alpha\u548cbeta\u4f86\u81ea\u65bc\u7c21\u55ae\u8ff4\u6b78\u4e2d\u7684\u5169\u500b\u8ff4\u6b78\u4fc2\u6578\u3002\u5176\u4e2d\uff0cAnn. alpha\u9700\u5c07\u539f\u59cb\u7684\u8ff4\u6b78\u4fc2\u6578\u505a\u5e74\u5316\u8655\u7406\uff0c\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a  </p> \\[{(1+alpha)^\\frac{252}{\u6301\u6709\u671f }}{ }{-1}\\] <p>\u8ff4\u6b78\u7684\u81ea\u8b8a\u6578X\u662f\u5168\u5e02\u5834\u7684\u5e73\u5747\u5831\u916c\u7387\uff08\u8a08\u7b97\u65b9\u5f0f\u662f\u5c07\u80a1\u7968\u6c60\u4e2d\u6240\u6709\u80a1\u7968\u7684\u5831\u916c\u7387\u53d6\u5e73\u5747\uff09\uff0c\u61c9\u8b8a\u6578Y\u662f\u56e0\u5b50\u52a0\u6b0a\u591a\u7a7a\u5c0d\u6c96\u6295\u7d44\u7684\u5e73\u5747\u5831\u916c\u7387\u3002 \uff08\u82e5demeaned\u53c3\u6578\u8a2d\u5b9a\u70baTrue\u5247Y\u5229\u7528demeaned\u5f8c\u5831\u916c\u7387\u8a08\u7b97\uff09  </p> <p>\u5176\u4e2d\uff0calpha\u8861\u91cf\u56e0\u5b50\u52a0\u6b0a\u591a\u7a7a\u5c0d\u6c96\u6295\u7d44\u6240\u80fd\u7372\u5f97\u7684\u8d85\u984d\u5831\u916c\uff1bbeta\u5247\u8861\u91cf\u8a72\u6295\u7d44\u66b4\u9732\u65bc\u5e02\u5834\u98a8\u96aa\u7684\u7a0b\u5ea6\u3002</p> <pre><code>alpha_beta = alphalens.performance.factor_alpha_beta(factor_data)\nalpha_beta\n</code></pre>"},{"location":"example/documents44/#returns-table","title":"Returns table","text":"<p>\u5305\u542balpha\u548cbeta\u3001\u4e0d\u540c\u6301\u6709\u671f\u4e0b\u7684top quantile\u53cabottom quantile\u7684\u5e73\u5747\u5831\u916c\u53ca\u591a\u7a7a\u5c0d\u6c96\u5831\u916c\u7387\u7684\u5e73\u5747\u503c\u3002</p> <pre><code>alphalens.plotting.plot_returns_table(alpha_beta,\n                                      mean_return_by_q_convertfreq,\n                                      quant_return_spread)\n</code></pre>"},{"location":"example/documents44/#returns-tear-sheet","title":"Returns Tear Sheet","text":"<p>Returns Analysis \u6240\u6709\u5716\u8868\u3002</p> <pre><code>alphalens.tears.create_returns_tear_sheet(factor_data)\n</code></pre>"},{"location":"example/documents45/","title":"Groupwise Performance","text":"<p>\u82e5\u63d0\u4f9b\u7fa4\u96c6\u8cc7\u6599(\u6bd4\u5982: \u7522\u696d\u985e\u5225)\uff0c\u53ef\u4ee5\u900f\u904e\u52a0\u5165 <code>by_group=True</code> \u6839\u64da\u4e0d\u540c\u7fa4\u96c6\u7e6a\u88fd\u51fa\u4e0d\u540c\u56e0\u5b50\u5206\u6790\u5716\u8868\u3002</p>"},{"location":"example/documents45/#ic-by-sector","title":"IC by sector","text":"<pre><code>ic_by_sector = alphalens.performance.mean_information_coefficient(factor_data, \n                                                                  by_group=True)\nic_by_sector.head()\n\nalphalens.plotting.plot_ic_by_group(ic_by_sector)\n</code></pre>"},{"location":"example/documents45/#mean-return-quantile-by-sector","title":"Mean return quantile by sector","text":"<p><pre><code>mean_return_quantile_sector, mean_return_quantile_sector_err = alphalens.performance.mean_return_by_quantile(factor_data, \n                                                                                                             by_group=True)\nmean_return_quantile_sector.head()\n</code></pre> \u5e73\u5747\u5831\u916c\u7387\u8f49\u63db\uff1a</p> <p><pre><code>mean_return_quantile_sector_convertfreq=mean_return_quantile_sector.apply(alphalens.utils.rate_of_return,\n                                                                          axis=0,\n                                                                          base_period=mean_return_quantile_sector.columns[0])\nmean_return_quantile_sector_convertfreq.head()\n</code></pre> <pre><code>alphalens.plotting.plot_quantile_returns_bar(mean_return_quantile_sector_convertfreq, \n                                             by_group=True);\n</code></pre></p>"},{"location":"example/documents45/#summary-tear-sheet","title":"Summary Tear Sheet","text":"<p>\u532f\u51fa\u91cd\u9ede\u5716\u8868 (\u8acb\u4e0b\u8f09\u6b64\u6a94\u6848\u81ea\u884c\u57f7\u884c) <pre><code># alphalens.tears.create_summary_tear_sheet(factor_data)\n</code></pre></p>"},{"location":"example/documents45/#the-whole-thing","title":"The Whole Thing","text":"<p>\u4e00\u6b21\u532f\u51fa\u6240\u6709\u5716\u8868 (\u8acb\u4e0b\u8f09\u6b64\u6a94\u6848\u81ea\u884c\u57f7\u884c) <pre><code># alphalens.tears.create_full_tear_sheet(factor_data)\n</code></pre></p>"},{"location":"example/documents47/","title":"API \u53d6\u5f97\u8cc7\u6599","text":"<ul> <li> <p>TEJTOOLAPI \u4e3b\u8981\u6574\u4f75\u80a1\u50f9\u8207\u4e0d\u540c\u5c6c\u6027\u7684\u8cc7\u6599\u5eab\uff0c\u900f\u904e\u8f38\u5165\u80a1\u7968\u4ee3\u78bc (TICKERS) \u548c\u6b04\u4f4d (FIELD) \u5f8c\uff0c\u53ef\u5c07\u6b32\u6293\u53d6\u7684\u8cc7\u6599\u6574\u4f75\u70ba\u4ee5\u65e5\u983b\u7387\u7684 DataFrame\u3002</p> </li> <li> <p>\u4e3b\u8981\u6574\u4f75\u65b9\u6cd5\u662f\u4ee5\u4ea4\u6613\u65e5\u671f\u8868\u70ba\u7d22\u5f15\u6574\u4f75\u80a1\u50f9\u8207\u4e0d\u540c\u5c6c\u6027\u7684\u8cc7\u6599\uff0c\u4ee5\u4e0b\u793a\u7bc4 TEJTOOLAPI \u5229\u7528<code>get_history_data</code>\u7372\u53d6\u6b77\u53f2\u8cc7\u6599\uff0c\u4e26\u6574\u4f75\u80a1\u50f9\u8207\u4e0d\u540c\u5c6c\u6027\u8cc7\u6599\u8868\u7684\u6240\u6709\u6b04\u4f4d\u3002</p> </li> <li> <p>\u8ca1\u52d9\u6578\u64da\u662f\u6839\u64da\u767c\u5e03\u65e5\uff08announcement date\uff09\u4f86mapping\uff0c\u975e\u767c\u5e03\u65e5\u7684\u8ca1\u52d9\u6578\u64da\u6703\u4f7f\u7528\u7576\u4e0b\u53ef\u7372\u5f97\u6700\u65b0\u7684\u8cc7\u6599\u70ba\u6e96\u9032\u884c\u586b\u503c\u3002</p> <ul> <li>ex: 2330 \u5728 2010-02-01 \u6642\u6240\u80fd\u7372\u5f97\u6700\u65b0\u7684\u8ca1\u52d9\u8cc7\u6599\u70ba 2009Q3 \u7684\u8ca1\u52d9\u8cc7\u6599\uff0c\u5247 2010-01-01 \u6703\u4ee5 2009Q3 \u7684\u8cc7\u6599\u9032\u884c\u586b\u88dc\u3002\u60df\u516c\u53f82009Q4\u81ea\u7d50\u8ca1\u5831\u65e9\u65bc 2010-02-01 \u767c\u5e03\u6642\uff0c\u4e14 include_self_acc = 'Y'\uff0c\u9019\u6642 2010-02-01 \u7684\u8ca1\u52d9\u6578\u64da\u4f7f\u7528\u81ea\u7d50\u8ca1\u52d9\u6578\u64da\u3002</li> </ul> </li> <li> <p>TEJTOOLAPI \u53ef\u6293\u53d6\u7684\u8cc7\u6599\u6b04\u4f4d\u53ef\u53c3\u8003 : https://tquant.tejwin.com/\u8cc7\u6599\u96c6/</p> </li> </ul>"},{"location":"example/documents47/#paramters","title":"Paramters:","text":"<ul> <li> <p>ticker: iterable[str] \u6b32\u67e5\u8a62\u7684\u8cc7\u6599\u7684\u8b49\u5238\u4ee3\u78bc\u3002</p> </li> <li> <p>columns: iterable[str]</p> </li> </ul> <p>\u6b32\u67e5\u8a62\u8cc7\u6599\u7684\u6b04\u4f4d\u540d\u7a31\uff0c\u6b04\u4f4d\u540d\u7a31\u8acb\u898b https://api.tej.com.tw/\u3002 * transfer_to_chinese: boolean \u662f\u5426\u5c07\u6b04\u4f4d\u8f49\u63db\u70ba\u82f1\u6587\u3002</p> <ul> <li> <p>start: pd.Timestamp or str \u8cc7\u6599\u8d77\u59cb\u6642\u9593\u3002</p> </li> <li> <p>end: pd.Timestamp or str \u8cc7\u6599\u7d50\u675f\u6642\u9593\u3002</p> </li> <li> <p>fin_type = iterable[str] \u6c7a\u5b9a\u8cc7\u6599\u578b\u614b\u3002 A: \u7d2f\u7e3e\u8cc7\u6599 F: \u55ae\u5b63\u8cc7\u6599 TTM: \u79fb\u52d5\u56db\u5b63\u8cc7\u6599</p> </li> <li> <p>include_self_acc: str \u6295\u8cc7\u7528\u8ca1\u52d9\u5305\u542b\u81ea\u7d50\u548c\u8463\u4e8b\u6703\u6c7a\u8b70\u6578(include_self_acc = 'Y') \u50c5\u6295\u8cc7\u7528\u8ca1\u52d9(include_self_acc = 'N')</p> </li> </ul>"},{"location":"example/documents47/#returns","title":"Returns:","text":"<p>pd.DataFrame</p>"},{"location":"example/documents47/#1","title":"1. \u74b0\u5883\u8a2d\u5b9a","text":"<pre><code>import os\nos.environ['TEJAPI_KEY'] = \"your key\" \nos.environ['TEJAPI_BASE'] = \"https://api.tej.com.tw\"\n\nos.environ['ticker'] = '2330 2454 2317 2882 2881'\nos.environ['mdate'] = '20000103 20230530'\n\nimport TejToolAPI \nfrom zipline.data import bundles\n</code></pre>"},{"location":"example/documents47/#2-tickers","title":"2. \u53d6\u5f97 tickers","text":""},{"location":"example/documents47/#21-bundle-tickers","title":"2.1 \u53d6\u5f97 bundle \u7684 tickers","text":"<pre><code>bundle_data = bundles.load('tquant')\nuniverse = bundle_data.asset_finder.retrieve_all(bundle_data.asset_finder.equities_sids)  #.remove(symbol('IR0001'))   \ntickers = [col.symbol for col in universe]\n</code></pre>"},{"location":"example/documents47/#22-key-tickers","title":"2.2 \u81ea\u884c key \u5165 tickers","text":"<pre><code>tickers = ['2330','2454','2317','2882','2881']\n</code></pre>"},{"location":"example/documents47/#3-tejtoolapi","title":"3. tejtoolapi \u53d6\u5f97\u55ae\u7368\u8cc7\u6599\u5eab","text":""},{"location":"example/documents47/#31","title":"3.1\u3001\u6708\u71df\u6536\u7684\u6b04\u4f4d","text":"<pre><code>ticker = tickers\ncolumns = ['Sales_Accu_LastYear', 'Sales_Accu_3M',\n       'Sales_Per_Share_Accu_12M', 'YoY_Accu_Sales', 'YoY_Monthly_Sales',\n       'Sales_Per_Share_Accu_3M', 'Sales_Accu_3M_LastYear', 'Sales_Monthly',\n       'YoY_AccuSales_12M', 'YoY_Accu_Sales_3M', 'MoM_Monthly_Sales',\n       'Sales_Accumulated', 'QoQ_Accu_Sales_3M', 'MoM_Accu_Sales_3M',\n       'Sales_Monthly_LastYear', 'Outstanding_Shares_1000_Shares']\n\ndata = TejToolAPI.get_history_data(ticker=ticker, \n                                   columns=columns,\n                                   transfer_to_chinese=False,                                   \n                                  )\ndata   \n</code></pre>"},{"location":"example/documents47/#32_-","title":"3.2\u3001\u91cf\u5316\u7c4c\u78bc_\u5468 - \u96c6\u4fdd\u5eab\u5b58\u6b04\u4f4d","text":"<pre><code>ticker = tickers\ncolumns = ['Total_Custodied_Shares_1000_Lots',\n       'Custodied_Under_400_Lots_Total_Lots',\n       'Custodied_Lots_Between_800_1000_Total_Lots',\n       'Custodied_Larger_Than_400_Lots_Pct',\n       'Custodied_Lots_Between_400_600_Total_Lots',\n       'Custodied_Lots_Between_600_800_Pct', 'Pledged_Stock_Shares_1000_Lots',\n       'Custodied_Under_400_Lots_Pct',\n       'Custodied_Lots_Between_400_600_Total_Holders',\n       'Custodied_Lots_Between_800_1000_Total_Holders',\n       'Custodied_Under_400_Lots_Total_Holders',\n       'Custodied_Lots_Between_400_600_Pct',\n       'Custodied_Lots_Between_800_1000_Pct',\n       'Custodied_Greater_Than_1000_Lots_Pct']\n\ndata1 = TejToolAPI.get_history_data(ticker=ticker, \n                                   columns=columns,\n                                   transfer_to_chinese=False,                                    \n                                  )                                 \n\ndata1 \n</code></pre>"},{"location":"example/documents47/#33","title":"3.3\u3001\u6293\u53d6\u8ca1\u52d9\u8cc7\u6599\u53c3\u6578\u8a2d\u5b9a","text":"<p><code>ticker</code></p> <ul> <li>\u55ae\u4e00\u80a1\u7968 :['2330']</li> <li>\u591a\u80a1 :['2330','2317']</li> </ul> <p><code>columns</code></p> <ul> <li> <p>\u6b04\u4f4d: columns=['r408','r409','r410','r502'] <code>transfer_chinese_columns</code></p> </li> <li> <p>\u9810\u8a2d transfer_chinese_columns = False</p> </li> <li>\u6e2c\u8a66\u6b04\u4f4d\u8f49\u63db\u6210\u4e2d\u6587(transfer_chinese_columns = True)</li> </ul> <p><code>fin_type = [A, Q, TTM]</code></p> <ul> <li>A: \u8868\u793a\u7d2f\u7a4d</li> <li>Q: \u8868\u793a\u55ae\u5b63</li> <li>TTM: \u8868\u793a\u79fb\u52d54\u5b63</li> </ul> <p><code>include_self_acc</code></p> <ul> <li>\u6295\u8cc7\u7528\u8ca1\u52d9\u5305\u542b\u81ea\u7d50\u548c\u8463\u4e8b\u6703\u6c7a\u8b70\u6578(include_self_acc = 'Y')</li> <li>\u50c5\u6295\u8cc7\u7528\u8ca1\u52d9(include_self_acc = 'N')</li> </ul>"},{"location":"example/documents47/#4-tejtoolapi","title":"4\u3001\u4ee5\u4e0b\u7bc4\u4f8b\u793a\u7bc4\u904b\u7528 TejToolAPI \u4e00\u9375\u6293\u53d6\u4e0d\u540c\u8cc7\u6599\u5eab\u7684\u6b04\u4f4d\u8207\u6574\u4f75\u3002","text":"<ul> <li>\u80a1\u50f9\u8cc7\u6599\u5eab(\u65e5\u983b)<ul> <li>\u958b\u76e4\u50f9\u3001\u6536\u76e4\u50f9</li> </ul> </li> <li>\u7c4c\u78bc\u8cc7\u6599\u5eab(\u65e5\u983b)<ul> <li>\u5916\u8cc7\u8cb7\u8ce3\u8d85\u5f35\u6578\u3001\u5408\u8a08\u8cb7\u8ce3\u8d85\u5f35\u6578</li> </ul> </li> <li>\u4ea4\u6613\u8a3b\u8a18\u8cc7\u6599\u5eab(\u65e5\u983b)<ul> <li>\u662f\u5426\u70ba\u6ce8\u610f\u80a1\u7968\u3001\u662f\u5426\u66ab\u505c\u4ea4\u6613\u3001\u662f\u5426\u70ba\u81fa\u706350\u6210\u5206\u80a1\u3001\u662f\u5426\u70ba\u8655\u7f6e\u80a1\u7968\u3001\u5206\u76e4\u9593\u9694\u6642\u9593</li> </ul> </li> <li>\u96c6\u4fdd\u8cc7\u6599\u5eab(\u5468\u983b)<ul> <li>800-1000\u5f35\u96c6\u4fdd\u5360\u6bd4\u3001800-1000\u5f35\u96c6\u4fdd\u5f35\u6578</li> </ul> </li> <li>\u8ca1\u5831\u8cc7\u6599\u5eab(\u5b63\u983b)<ul> <li>\u71df\u696d\u6bdb\u5229\u6210\u9577\u7387_Q\u3001\u71df\u696d\u5229\u76ca\u6210\u9577\u7387_Q\u3001\u7a05\u5f8c\u6de8\u5229\u7387_Q <pre><code># \u8f38\u5165\u6b04\u4f4d\nicolumns = ['Open','Close','Qfii_Diff_Vol','Total_Diff_Vol','Custodied_Lots_Between_800_1000_Total_Lots','Custodied_Lots_Between_800_1000_Pct',\n           'Attention_Stock_Fg','Disposition_Stock_Fg','Matching_Period','Suspended_Trading_Stock_Fg','Component_Stock_of_TWN50_Fg','Gross_Margin_Growth_Rate','Net_Income_Rate_percent','Operating_Income_Growth_Rate']\n# TEJTOOLAPI\u6574\u4f75\ndata = TejToolAPI.get_history_data(ticker=tickers[:5], \n                                   columns=icolumns,\n                                   transfer_to_chinese=True, \n                                   fin_type = ['Q'],\n                                   start = '2015-01-01', end = '2022-12-31')\ndata#.sort_values(by=['\u65e5\u671f','\u80a1\u7968\u4ee3\u78bc']).tail(10)\n</code></pre></li> </ul> </li> </ul>"},{"location":"example/documents5/","title":"Alphalens","text":"<p>\u4e8b\u524d\u6e96\u5099 - Installation&amp;Prepare</p>"},{"location":"example/documents5/#analysis","title":"Analysis","text":""},{"location":"example/documents5/#alphalens_1","title":"Alphalens\u63d0\u4f9b\u4ee5\u4e0b\u4e09\u7a2e\u985e\u578b\u7684\u56e0\u5b50\u5206\u6790\u5de5\u5177\uff0c\u8b93\u6211\u5011\u5c0d\u56e0\u5b50\u6709\u521d\u6b65\u7684\u4e86\u89e3\uff1a","text":"<ul> <li>Returns\uff08\u5831\u916c\u7387\u5206\u6790\uff09</li> <li>Information\uff08\u8cc7\u8a0a\u5206\u6790\uff09</li> <li>Turnover\uff08\u5468\u8f49\u7387\u5206\u6790\uff09</li> </ul>"},{"location":"example/documents5/#_1","title":"\u900f\u904e\u4ee5\u4e0a\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u5f9e\u4e2d\u4e86\u89e3\u4ee5\u4e0b\u5167\u5bb9\uff0c\u4e26\u8f14\u52a9\u5f8c\u7e8c\u7684\u56de\u6e2c\uff1a","text":"<ul> <li>\u56e0\u5b50\u9810\u6e2c\u529b\u7684\u597d\u58de\u3002</li> <li>\u56e0\u5b50\u7684\u5468\u8f49\u7387\u662f\u5426\u904e\u9ad8\uff08\u53ef\u80fd\u5c0e\u81f4\u8f03\u9ad8\u7684\u4ea4\u6613\u6210\u672c\uff09\u3002</li> <li>\u6301\u6709\u671f\u61c9\u8a72\u5982\u4f55\u8a2d\u7f6e\u6700\u6070\u7576\u3002</li> <li>\u56e0\u5b50\u5728\u6240\u6709\u90e8\u9580\u4e2d\u7684\u8868\u73fe\u662f\u5426\u4e00\u81f4\u3002</li> <li>\u5728\u591a\u7a7a\u5c0d\u6c96\u7b56\u7565\u4e2d\uff0c\u54ea\u4e9b\u80a1\u7968\u61c9\u8a72\u505a\u591a\uff0c\u54ea\u4e9b\u80a1\u7968\u61c9\u8a72\u653e\u7a7a\u3002</li> <li>\u61c9\u8a72\u7528\u54ea\u4e00\u7a2e\u6b0a\u91cd\u5f62\u6210\u6295\u8cc7\u7d44\u5408\uff1f\u7b49\u6b0a\u91cd\uff08equally weighted\uff09\u6216\u56e0\u5b50\u52a0\u6b0a\uff08factor weighted\uff09\u3002</li> </ul> <p>\u82e5\u63d0\u4f9b\u7fa4\u96c6\u8cc7\u6599(\u6bd4\u5982: \u7522\u696d\u985e\u5225)\uff0c\u53ef\u4ee5\u900f\u904e\u52a0\u5165 <code>by_group=True</code> \u6839\u64da\u4e0d\u540c\u7fa4\u96c6\u7e6a\u88fd\u51fa\u4e0d\u540c\u56e0\u5b50\u5206\u6790\u5716\u8868\u3002 - Groupwise Performance</p>"},{"location":"example/documents5/#_2","title":"\u5f8c\u7e8c\u7814\u7a76\uff1a","text":"<p>\u7576\u4f7f\u7528Alphalens\u5206\u6790\u56e0\u5b50\u5f8c\uff0c\u6211\u5011\u53ef\u4ee5\u4e86\u89e3\u56e0\u5b50\u7684**\u9810\u6e2c\u80fd\u529b**\u53ca**\u56e0\u5b50\u6700\u4f73\u7684\u4ea4\u6613\u65b9\u5f0f**\u3002\u4f46\u56e0\u70baAlphalens\u4e0d\u8003\u616e\u80a1\u7968\u4ea4\u6613\u6642\u6240\u7522\u751f\u7684**\u624b\u7e8c\u8cbb\u3001\u6ed1\u50f9\u3001\u66ab\u505c\u4ea4\u6613\u3001\u6f32\u8dcc\u505c**\u7b49\u56e0\u7d20\uff0c\u6545\u5f8c\u7e8c\u53ef\u4ee5\u518d\u900f\u904eZipline\u3001Pyfolio\u6216\u5176\u4ed6\u5206\u6790\u5de5\u5177\u9032\u884c\u66f4\u6df1\u5165\u7684\u5206\u6790\uff0c\u4e86\u89e3\u56e0\u5b50\u5728\u5be6\u969b\u4ea4\u6613\u4e0a\u7684\u53ef\u80fd\u6027\u3002</p>"},{"location":"example/documents5/#alpjalens","title":"Alpjalens \u4ecb\u7d39","text":"<pre><code>import os \nStockList = \n['1227', '1234', '1304', '1314', '1434', '1440', '1476', '1504', '1507', '1590', '1605', '1710', '1717', '1723', '1789',\n '1802', '1907', '2006', '2015', '2049', '2101', '2103', '2106', '2204', '2227', '2327', '2337', '2344', '2356', '2360', '2362',\n '2379', '2384', '2385', '2392', '2395', '2449', '2450', '2451', '2489', '2501', '2504', '2511', '2542', '2545', '2548',\n '2603', '2606', '2607', '2608', '2609', '2610', '2615', '2618', '2707', '2723', '2727', '2809', '2812', '2834', '2845',\n '2847', '2855', '2884', '2887', '2888', '2889', '2903', '2915', '3034', '3037', '3044', '3149', '3189', '3406', '3702', '4938',\n '4958', '5522', '5871', '6005', '6176', '6239', '6269', '6286', '8008', '8046', '8078', '8422', '9904', '9907', '9914', '9917', '9921',\n '9933', '9940', '9945', '2458', '2206', '1201', '2347', '3231', '5534', '6116', '9910', '1477', '2353', '6271', '1319',\n '1722', '2059', '3060', '3474', '3673', '2393', '2376', '2439', '3682', '2201', '2377', '3576', '2352', '2838', '8150',\n '2324', '2231', '8454', '2833', '6285', '6409', '1536', '1702', '2313', '2498', '2867', '6415', '6456', '9938', '2383', '4137', \n '1707', '1589', '2849', '6414', '8464', '2355', '2345', '3706', '2023', '2371', '1909', '2633', '3532', '9941', '2492', '3019',\n '3443', '4915', '4943', '1229', '2441', '2027', '3026', '1210', '2104', '2456', '5269', '8341', '2354', '3005', '3481', '6669',\n '2409', '3023', '6213', '2404', '3533', '6278', '6592', '3653', '3661', '3665', '2301', '3714', '2883', '2890', '6531', '1904',\n '2014', '2105', '2108', '2474', '2637', '6781', '1102', '4919', '1402', '3035', '3036', '4961', '6719', '6770', '2368', '1795',\n '6550', '6789', '3017', '1101', '1216', '1301', '1303', '1326', '2002', '2207', '2303', '2308', '2311', '2317', '2325', '2330',\n '2357', '2382', '2412', '2454', '2801', '2880', '2881', '2882', '2885', '2886', '2891', '2892', '2912', '3008', '3045', '3697',\n '4904', '5880', '6505', '2408', '3711', '5876', '6452','5264', '2823','1262', '2448', '1704']\n\n\nos.environ['ticker'] = ' '.join(StockList)\nos.environ['TEJAPI_BASE'] = \"https://api.tej.com.tw\"\nos.environ['TEJAPI_KEY'] = 'YOUR KEY'\n\n\n\nos.environ['mdate'] = \"20180726 20230726\"\n\n!zipline ingest -b tquant\n</code></pre> <pre><code>import pandas as pd \nimport numpy as np \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom scipy import stats\nimport alphalens\nimport TejToolAPI\nimport tejapi\n\n%matplotlib inline\nplt.rcParams['figure.dpi'] = 200\nsns.set_style('white')\n</code></pre>"},{"location":"example/documents5/#_3","title":"\u89c0\u5bdf\u8f09\u5165\u8cc7\u6599","text":"<pre><code>from zipline.data.data_portal import get_bundle\n\ndf_bundle = get_bundle(bundle_name = 'tquant',\n                        calendar_name = 'TEJ',\n                        start_dt = pd.Timestamp(\"2018-07-26\", tz = \"UTC\"),\n                        end_dt = pd.Timestamp(\"2023-07-26\", tz = \"UTC\"))\n\ndf_bundle.head(15)\n</code></pre>"},{"location":"example/documents5/#_4","title":"\u5efa\u7acb\u56e0\u5b50","text":"<p>\u672c\u6b21\u767c\u60f3\u81f3 Fama-French \u4e09\u56e0\u5b50\u6a21\u578b\u4e2d\u7684 SMB \u56e0\u5b50\uff0c\u4ee5\u6bcf\u65e5\u5404\u516c\u53f8\u6a19\u6e96\u5316\u5f8c\u7684\u5e02\u503c\u4f5c\u70ba\u56e0\u5b50\u9032\u884c\u5f8c\u7e8c\u56e0\u5b50\u5206\u6790\u3002</p> <p><pre><code>from zipline.data import bundles\n\nbundle = bundles.load(\"tquant\")\nsids = bundle.asset_finder.equities_sids\nassets = bundle.asset_finder.retrieve_all(sids)\nsymbols = [i.symbol for i in assets]\ncolumns = [\"Market_Cap_Dollars\"]\n\nmkt_value = TejToolAPI.get_history_data(\n    ticker = symbols,\n    columns = columns,\n    tranfer_to_chinese = False,\n    start = pd.Timestamp(\"2018-07-02\", tz = \"UTC\"),\n    end = pd.Timestamp(\"2023-07-02\", tz = \"UTC\"),\n    fin_type = [\"A\"],\n    include_self_acc = \"Y\"\n)\n</code></pre> <pre><code>import pytz\nmkt_value['mdate'] = pd.to_datetime(mkt_value['mdate'])\n\nmeans = mkt_value.groupby(\"mdate\").mean()\nstds = mkt_value.groupby(\"mdate\").std()\nmeans.rename({\"Market_Cap_Dollars\":\"mean\"}, axis = 1, inplace = True)\nstds.rename({\"Market_Cap_Dollars\":\"std\"}, axis = 1, inplace = True)\novo = means.merge(stds, left_index = True, right_index = True)\nmkt_value_med = mkt_value.merge(ovo, left_on = \"mdate\", right_index = True).reset_index(drop=True)\nmkt_value_med[\"MKTValue\"] = (mkt_value_med.Market_Cap_Dollars - mkt_value_med['mean']) / mkt_value_med['std']\nmkt_value_med['mdate'] = mkt_value_med['mdate'].dt.tz_localize(pytz.utc)\nmkt_value_med.set_index(['mdate', 'coid'], inplace = True)\nmkt_value = mkt_value_med.MKTValue\n</code></pre> <pre><code>mkt_value\n</code></pre></p>"},{"location":"example/documents5/#_5","title":"\u53d6\u5f97\u50f9\u683c\u8cc7\u6599","text":"<p>\u4e5f\u53ef\u4ee5\u4f7f\u7528<code>get_bundle_price</code>\u4f86\u53d6\u5f97\u50f9\u683c\u8cc7\u6599\u3002 <pre><code>from zipline.data.data_portal import get_bundle_price\n\n# fields\u53ef\u6307\u5b9a\u6488\u53d6\u7684\u6b04\u4f4d\uff0c\u9810\u8a2d\u70ba\" * \"\uff0c\u4ee3\u8868\u53d6\u5f97\u6240\u6709\u6b04\u4f4d\u3002\n# \u652f\u63f4\u7684field\uff1a\n# [\"*\",\"open\", \"high\", \"low\", \"close\", \"volume\",\"open_adj\", \"high_adj\", \"low_adj\", \"close_adj\", \"volume_adj\"]\npricing = get_bundle_price(start_dt=pd.Timestamp(\"2018-07-26\"),\n                           end_dt=pd.Timestamp(\"2023-07-26\"),\n                           fields='open_adj',\n                           transform=True)['open_adj']\n\npricing.columns = [x.symbol for x in pricing.columns]\n\npricing = df_bundle[['date','symbol','open_adj']].set_index(['date','symbol']).iloc[1:].unstack('symbol')['open_adj']\npricing.head(6)\n</code></pre></p>"},{"location":"example/documents5/#sector-mapping","title":"Sector mapping","text":"<p>\u53d6\u5f97\u8cc7\u7522\u7684\u7522\u696d\u985e\u5225 <pre><code>sector = tejapi.fastget('TWN/APISTKATTR',\n                    coid=df_bundle.symbol.unique(),\n                    opts={'columns':['coid','main_ind_e','main_ind_c']},\n                    paginate=True).rename(columns={'coid':'symbol',\n                                                   'main_ind_e':'sector',\n                                                   'main_ind_c':'sector_code'})\n\nsector_map = sector.set_index(\"symbol\")['sector'].to_dict()\nsector_map\n\n# \u5efa\u7acb\u56e0\u5b50\u8207\u5831\u916c\u8868\n\n## Further information\n\n```python\nalphalens.utils.get_clean_factor_and_forward_returns(factor,\n                                                     prices,\n                                                     groupby=None,\n                                                     binning_by_group=False,\n                                                     quantiles=5,\n                                                     bins=None,\n                                                     periods=(1, 5, 10),\n                                                     filter_zscore=20,\n                                                     groupby_labels=None,\n                                                     max_loss=0.35,\n                                                     zero_aware=False,\n                                                     cumulative_returns=True)\n</code></pre></p> <ul> <li>\u5229\u7528<code>alphalens.utils.get_clean_factor_and_forward_returns()</code>\u5c07\u56e0\u5b50\u8cc7\u6599\uff08<code>factor</code>\u53c3\u6578\uff09\u3001\u50f9\u683c\u8cc7\u6599\uff08<code>prices</code>\u53c3\u6578\uff09\u4ee5\u53ca\u90e8\u9580\u8cc7\u6599\uff08<code>groupby</code>\u53c3\u6578\uff09\u6574\u7406\u6210\u4e00\u500b\u8cc7\u6599\u8868\uff0c\u4ee5\u5229\u5f8c\u7e8c\u8a08\u7b97\uff0c\u9019\u500b\u8cc7\u6599\u8868\u7684\u7d22\u5f15\uff08index\uff09\u662f\u65e5\u671f\uff08DatetimeIndex\uff09\u53ca\u516c\u53f8\u78bc\uff08asset\uff09\u3002</li> <li>\u6b64\u5916\u9019\u908a\u4e5f\u6703\u91dd\u5c0d\u56e0\u5b50\u8cc7\u6599\u6216\u50f9\u683c\u8cc7\u6599\u7f3a\u503c\u7684\u8cc7\u6599\u505a\u6e05\u7406\uff0c\u78ba\u4fdd\u53ef\u4ee5\u6b63\u78ba\u8a08\u7b97\u3002</li> <li>\u6700\u91cd\u8981\u7684\u662f\u9019\u908a\u6703\u5229\u7528\u56e0\u5b50\u8cc7\u6599\u5c07\u6a23\u672c\u5206\u7d44\uff08<code>quantiles</code>\u3001<code>bins</code>\u3001<code>binning_by_group</code>\u3001<code>zero_aware</code>\u53c3\u6578\uff09\u53ca\u5229\u7528\u9810\u8a08\u7684\u6301\u6709\u671f\uff08<code>periods</code>\u53c3\u6578\uff09\u8a08\u7b97\u6301\u6709\u671f\u5831\u916c\u7387\u3002</li> <li><code>quantiles</code>\u3001<code>bins</code>\u3001<code>binning_by_group</code>\uff1a<ul> <li>quantiles\uff1aint or sequence[float]</li> <li>\u5229\u7528\u6a23\u672c\u516c\u53f8\u6578\u91cf\u4f86\u5206\u7d44\uff0c\u9810\u8a2d\u503c\u70ba5\u3002\u53c3\u8003pandas.qcut\u3002</li> <li><code>quantile</code>\u8207<code>bins</code>\u53ea\u80fd\u64c7\u4e00\u4f7f\u7528\u3002</li> <li>\u7576quantiles\u70ba*int*\uff1a\u5c07\u6a23\u672c\u6309\u7167\u6578\u91cf\u76e1\u53ef\u80fd\u5e73\u5747\u5206\u914d\u81f3\u5404\u7d44\uff0c\u82e5\u6a23\u672c\u516c\u53f8\u6709100\u5bb6\uff0c\u6b32\u5c07\u6a23\u672c\u516c\u53f8\u5206\u70ba5\u7d44\uff08<code>quantile=5</code>\uff09\uff0c\u4e14\u6bcf\u4e00\u7d44\u7686\u9808\u670920\u5bb6\u516c\u53f8\uff0c\u5247quantiles\u65b9\u6cd5\u6703\u5c07\u56e0\u5b50\u5024\uff08<code>factor</code>\uff09\u6700\u5c0f\u768420\u5bb6\u516c\u53f8\u5206\u5230\u7b2c1\u7d44\uff0c\u56e0\u5b50\u5024\u6700\u5927\u768420\u5bb6\u516c\u53f8\u5206\u5230\u7b2c5\u7d44\uff0c\u4ee5\u6b64\u985e\u63a8\u3002</li> <li>\u7576quantiles\u70ba*sequence[float]\uff1a\u5141\u8a31\u6578\u91cf\u4e0d\u5747\u7b49\u7684\u5206\u7d44\uff0c\u82e5\u6709\u4ee5\u4e0b5\u500bfactor\uff1a[1,2,3,4,5]\u4e14**quantiles=[0, .5, 1.]*\uff08\u4ee3\u8868\u6703\u5206\u70ba\u5169\u7d44\uff1a(0,0.5]\u53ca(0.5,1.]\uff09\uff0c\u5247[1,2,3]\u6703\u88ab\u5206\u5230\u7b2c1\u7d44\uff1b[4,5]\u6703\u88ab\u5206\u5230\u7b2c2\u7d44\u3002</li> <li>bins\uff1aint or sequence[float]</li> <li>\u5229\u7528\u56e0\u5b50\u53d6\u5024\u7bc4\u570d\u5206\u7d44\uff0c\u985e\u4f3c\u76f4\u65b9\u5716\u7684\u6982\u5ff5\u3002\u53c3\u8003pandas.cut\u3002</li> <li><code>quantile</code>\u8207<code>bins</code>\u53ea\u80fd\u64c7\u4e00\u4f7f\u7528\u3002\u82e5\u8981\u4f7f\u7528bins\u5fc5\u9808\u8a2d\u5b9a**<code>quantile</code>=None**\uff0c\u56e0<code>quantile</code>\u9810\u8a2d\u503c\u70ba5\u3002</li> <li>\u7576bins\u70ba*int*\uff1a\u82e5\u56e0\u5b50\u53d6\u5024\u65bc0\u81f3100\uff0c\u6b32\u6309\u56e0\u5b50\u5024\uff08<code>factor</code>\uff09\u6578\u503c\u5927\u5c0f\u5747\u5206\u70ba5\u7d44\uff08<code>bins=5</code>\uff09\uff0c\u5247bins\u65b9\u6cd5\u6703\u5c07\u56e0\u5b50\u5024\u4ecb\u65bc0\u523020\u7684\u516c\u53f8\u5206\u5230\u7b2c1\u7d44\uff0c\u56e0\u5b50\u5024\u4ecb\u65bc21~40\u7684\u516c\u53f8\u5206\u5230\u7b2c2\u7d44\uff0c\u4ee5\u6b64\u985e\u63a8\u3002\u6bcf\u4e00\u7d44\u7684\u516c\u53f8\u6578\u76ee\u4e0d\u4e00\u5b9a\u76f8\u540c\u3002</li> <li>\u7576bins\u70ba*sequence[float]\uff1a\u5141\u8a31\u9593\u8ddd\u4e0d\u5747\u7b49\u7684\u5206\u7d44\uff0c\u82e5\u6709\u4ee5\u4e0b4\u500bfactor\uff1a[1, 2, 3, 4]\u4e14**bins=[0, 3, 4]*\uff08\u4ee3\u8868\u6703\u5206\u70ba\u5169\u7d44\uff1a(0., 3.]\u53ca(3., 4.]\uff09\uff0c\u5247[1,2,3]\u6703\u88ab\u5206\u5230\u7b2c1\u7d44\uff1b[4]\u6703\u88ab\u5206\u5230\u7b2c2\u7d44\u3002</li> <li>binning_by_group\uff1abool</li> <li>\u53ef\u7d50\u5408\u4e0a\u8ff0\u5169\u8005\u505a\u90e8\u9580\u5167\u5206\u7d44\uff0c\u9054\u6210**\u90e8\u9580\u4e2d\u7acb\uff08group neutral\uff09**\u7684\u6548\u679c\u3002</li> <li>\u4ee5\u7d50\u5408quantiles\u53cabinning_by_group\u7684\u5206\u7d44\u65b9\u5f0f\u70ba\u4f8b\uff0c\u82e5\u6b32\u5206\u70ba5\u7d44\uff08<code>quantile=5</code>\u4e14<code>binning_by_group=True</code>\uff09\uff0c\u5247\u8a72\u65b9\u6cd5\u6703\u5c07\u6bcf\u4e00\u500b\u90e8\u9580\u5167\u56e0\u5b50\u5024\u6700\u5c0f\u7684\u4e00\u7fa4\u516c\u53f8\u5206\u5230\u7b2c1\u7d44\uff0c\u56e0\u5b50\u5024\u6700\u5927\u7684\u4e00\u7fa4\u516c\u53f8\u5206\u5230\u7b2c5\u7d44\u3002</li> </ul> </li> <li><code>zero_aware</code>\uff1abool, optional<ul> <li>\u9810\u8a2d\u70baFalse\uff0c\u7576\u8a2d\u5b9a\u70baTrue\u6642\uff0cquantiles\u6216bins\u5fc5\u9808\u662f\u6574\u6578\u3002</li> <li>\u82e5\u8a2d\u5b9a\u70baTrue\u6642\uff0c\u6703\u5148\u5c07\u56e0\u5b50\uff08<code>factor</code>\uff09\u8cc7\u6599\u4f9d\u6578\u503c\u5927\u5c0f\u5206\u70ba **&gt;=0**\u53ca **&lt;0**\u5169\u7d44\uff0c\u518d\u500b\u5225\u5c07\u5169\u7d44\u5167\u7684\u8cc7\u6599\u5e73\u5747\u5207\u5206\uff08quantiles//2\uff09\u3002</li> <li>\u4ee5\u7d50\u5408<code>quantiles</code>\u53ca<code>zero_aware</code>\u7684\u5206\u7d44\u65b9\u5f0f\u70ba\u4f8b\uff0c\u82e5\u6709\u4ee5\u4e0b10\u500bfactor\uff1a[-4,-3,-2,-1,1,2,3,4,5,6]\u6b32\u5206\u70ba5\u7d44\uff08<code>quantile=5</code>\u4e14<code>zero_aware=True</code>\uff09\uff0c\u5247\uff1a</li> <li>\u5148\u5c075//2\u5f97\u52302\uff0c\u56e0\u6b64\u56e0\u5b50\u503c&gt;=0\u7684\u6a23\u672c\u5e73\u5747\u52062\u7d44\uff1b\u56e0\u5b50\u503c&lt;0\u7684\u6a23\u672c\u5e73\u5747\u52062\u7d44\uff0c\u7e3d\u51714\u7d44\u3002</li> <li>-4\u53ca-3\u5206\u81f3\u7b2c1\u7d44\uff1b-2\u53ca-1\u5206\u81f3\u7b2c2\u7d44\uff1b1\u30012\u53ca3\u5206\u81f3\u7b2c3\u7d44\uff1b4\u30015\u53ca6\u5206\u81f3\u7b2c4\u7d44\u3002</li> </ul> </li> <li>\u53e6\u5916\uff0c\u5229\u7528<code>filter_zscore</code>\u53c3\u6578\u53ef\u4ee5\u5c07\u5927\u65bc\u5e73\u5747\u503cX\u500d\u6a19\u6e96\u5dee\u7684\u6301\u6709\u671f\u5831\u916c\u7387\u4fee\u6539\u70banan\u3002\uff08\u4e0d\u63a8\u85a6\u4f7f\u7528\uff0c\u56e0\u70ba\u9019\u6703\u7522\u751flookahead bias\uff09</li> </ul>"},{"location":"example/documents5/#_6","title":"\u56e0\u5b50\u8cc7\u6599\u53ca\u50f9\u683c\u8cc7\u6599\u7684\u4e00\u4e9b\u898f\u7bc4\uff1a","text":"<ul> <li><code>factor</code>\u53ca<code>prices</code>\u8cc7\u6599\u7684timezone\u8981\u4e00\u81f4\u3002</li> <li><code>factor</code>\u53ca<code>prices</code>\u8cc7\u6599\u7684DatetimeIndex\u4e0d\u53ef\u5176\u4e2d\u4e00\u500b\u662ftimezone-aware\u53e6\u4e00\u500b\u662ftimezone-naive\u3002</li> <li><code>factor</code>\u53ca<code>prices</code>\u8cc7\u6599\u7684\u65e5\u671f\u8d77\u8a16\u53ef\u4ee5\u4e0d\u4e00\u6a23\uff0c\u4f46\u4e0d\u80fd\u4e00\u908a\u6709\u975e\u4ea4\u6613\u65e5\uff0c\u4e00\u908a\u90fd\u662f\u4ea4\u6613\u65e5\u3002   \uff08\u5426\u5247\u6703\u5831\u932f<code>ValueError: Inferred frequency None from passed values does not conform to passed frequency C</code>\uff09</li> </ul>"},{"location":"example/documents5/#_7","title":"\u6301\u6709\u671f\u5831\u916c\u7387","text":"<p>\u56e0\u70ba\u9019\u908a\u662f\u6a21\u64ec\u5229\u7528\u56e0\u5b50\u505a\u9010\u65e5\u4ea4\u6613\u7684\u7b56\u7565\uff0c\u6240\u4ee5\u6301\u6709\u671f\u5831\u916c\u7387\u662f\u6bcf\u65e5\u8a08\u7b97\u3002 \uff08\u82e5\u63d0\u4f9b\u7684\u56e0\u5b50\u3001\u50f9\u683c\u53ca\u90e8\u9580\u5206\u985e\u8cc7\u6599\u70ba\u6708\u983b\u7387\uff0c\u5247\u6301\u6709\u671f\u5831\u916c\u7387\u5c31\u662f\u9010\u6708\u8a08\u7b97\uff09 </p> <p>\u6839\u64da\u300aFundamental law of active management\u300b\uff08Grinold, 1989\uff09\u4e00\u66f8\uff0c\u6295\u8cc7\u7d44\u5408\u7372\u53d6\u8d85\u984d\u5831\u916c\u7684\u80fd\u529b\u53ef\u4ee5\u7528\u8cc7\u8a0a\u6bd4\u7387\u8861\u91cf\uff08IR\uff09\uff0cIR\u53c8\u53ef\u4ee5\u62c6\u5206\u6210\u8cc7\u8a0a\u4fc2\u6578\uff08IC\uff09\u53ca\u6295\u8cc7\u7b56\u7565\u5ee3\u5ea6\uff08BR\uff09\u3002\u516c\u5f0f\u5982\u4e0b\uff1a  </p> \\[ IR=IC * \\sqrt {BR} \\] <p>\u5176\u4e2d\uff0cIC\u662f\u5229\u7528\u56e0\u5b50\u5024\u8207\u6301\u6709\u671f\u5831\u916c\u7387\u9593\u7684\u76f8\u95dc\u4fc2\u6578\u4f86\u8861\u91cf\u56e0\u5b50\u6709\u6548\u6027\uff0c\u96b1\u542b\u7d93\u7406\u4eba\u7684\u9810\u6e2c\u80fd\u529b\uff0c\u9019\u90e8\u4efd\u6703\u65bc\u8cc7\u8a0a\u5206\u6790\uff08information\uff09\u4e2d\u8aaa\u660e\u3002  </p> <p>\u800cBR\u5247\u53ef\u4ee5\u900f\u904e\u63d0\u9ad8\u4ea4\u6613\u7684\u983b\u7387\u4f86\u6539\u5584\uff0c\u4e26\u8fd1\u4e00\u6b65\u63d0\u5347IR\u3002\u8209\u4f8b\u4f86\u8aaa\uff0c\u82e5\u662f\u6bcf\u65e5\u63db\u80a1\uff0c\u5247\u6bcf\u5e74\u4ea4\u6613\u6b21\u6578\u7d04\u70ba252\u6b21\uff1b\u82e5\u662f\u6bcf22\u5929\u63db\u4e00\u6b21\u80a1\uff0c\u5247\u6703\u964d\u4f4e\u6bcf\u4e00\u5e74\u7684\u4ea4\u6613\u6b21\u6578\uff08\u7d04\u70ba252\uff0f22\u6b21\uff09\uff0c\u9032\u800c\u964d\u4f4e\u5831\u916c\u3002  </p> <p>\u70ba\u4e86\u907f\u514d\u9019\u500b\u60c5\u6cc1\uff0cAlphalens\u6a21\u64ec\u4e00\u7a2e\u7b56\u7565\uff1a\u4ee5\u6301\u6709\u671f\u70ba22\u5929\u70ba\u4f8b\uff0c\u5229\u7528\u6301\u6709\u671f\u8a02\u5b9a\u4e00\u500b\u4ea4\u6613\u9031\u671f\uff0822\u5929\uff09\uff0c\u4e26\u4e14\u5c07\u672c\u91d1\u5206\u70ba22\u7b49\u4efd\u3002\u6bcf\u4e00\u5929\u5229\u7528\u5176\u4e2d1\u7b49\u4efd\u7684\u672c\u91d1\u4ea4\u6613\uff0c22\u5929\u5f8c\u8abf\u6574\u6301\u80a1\uff0c\u6240\u4ee5\u7e3d\u5171\u6703\u670922\u500b\u6295\u8cc7\u7d44\u5408\u3002\u6b64\u5916\uff0c\u7531\u65bc\u5c07\u672c\u91d1\u5206\u621022\u4efd\uff0c\u6ed1\u50f9\uff08slippage\uff09 \u7684\u5f71\u97ff\u4e5f\u6703\u964d\u4f4e\u3002 </p> <p>\u6301\u6709\u671f\u5831\u916c\u7387\u8a08\u7b97\uff1a\\(\\({\u500b\u80a1i\u3001\u65e5\u671f\u70bat\u4e14\u6301\u6709\u671f\u9593\u70ban\u7684\u6301\u6709\u671f\u5831\u916c\u7387=}\\frac{(\u80a1\u50f9_{i,t+n})}{\u80a1\u50f9_{i,t}}{-1}\\)\\) </p> <p>\u7bc4\u4f8b\uff1a</p> <p>date=2013-01-02\uff0casset=1102\uff0c\u6301\u67091D\u5831\u916c\u7387 =\uff082013-01-03\u6536\u76e4\u50f9\uff0f2013-01-02\u6536\u76e4\u50f9\uff09\uff0d1\u3002</p> <pre><code>factor_data = alphalens.utils.get_clean_factor_and_forward_returns(mkt_value,\n                                                                   pricing,\n                                                                   quantiles = 5,\n                                                                   bins = None,\n                                                                   groupby = sector_map\n                                                                  )\n\nfactor_data                                                                  \n</code></pre>"},{"location":"example/documents5/#analysis_1","title":"Analysis","text":""},{"location":"example/documents5/#alphalens_2","title":"Alphalens\u63d0\u4f9b\u4ee5\u4e0b\u4e09\u7a2e\u985e\u578b\u7684\u56e0\u5b50\u5206\u6790\u5de5\u5177\uff0c\u8b93\u6211\u5011\u5c0d\u56e0\u5b50\u6709\u521d\u6b65\u7684\u4e86\u89e3\uff1a","text":"<ul> <li>Returns\uff08\u5831\u916c\u7387\u5206\u6790\uff09</li> <li>Information\uff08\u8cc7\u8a0a\u5206\u6790\uff09</li> <li>Turnover\uff08\u5468\u8f49\u7387\u5206\u6790\uff09</li> </ul>"},{"location":"example/documents5/#_8","title":"\u900f\u904e\u4ee5\u4e0a\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u5f9e\u4e2d\u4e86\u89e3\u4ee5\u4e0b\u5167\u5bb9\uff0c\u4e26\u8f14\u52a9\u5f8c\u7e8c\u7684\u56de\u6e2c\uff1a","text":"<ul> <li>\u56e0\u5b50\u9810\u6e2c\u529b\u7684\u597d\u58de\u3002</li> <li>\u56e0\u5b50\u7684\u5468\u8f49\u7387\u662f\u5426\u904e\u9ad8\uff08\u53ef\u80fd\u5c0e\u81f4\u8f03\u9ad8\u7684\u4ea4\u6613\u6210\u672c\uff09\u3002</li> <li>\u6301\u6709\u671f\u61c9\u8a72\u5982\u4f55\u8a2d\u7f6e\u6700\u6070\u7576\u3002</li> <li>\u56e0\u5b50\u5728\u6240\u6709\u90e8\u9580\u4e2d\u7684\u8868\u73fe\u662f\u5426\u4e00\u81f4\u3002</li> <li>\u5728\u591a\u7a7a\u5c0d\u6c96\u7b56\u7565\u4e2d\uff0c\u54ea\u4e9b\u80a1\u7968\u61c9\u8a72\u505a\u591a\uff0c\u54ea\u4e9b\u80a1\u7968\u61c9\u8a72\u653e\u7a7a\u3002</li> <li>\u61c9\u8a72\u7528\u54ea\u4e00\u7a2e\u6b0a\u91cd\u5f62\u6210\u6295\u8cc7\u7d44\u5408\uff1f\u7b49\u6b0a\u91cd\uff08equally weighted\uff09\u6216\u56e0\u5b50\u52a0\u6b0a\uff08factor weighted\uff09\u3002</li> </ul>"},{"location":"example/documents5/#_9","title":"\u5f8c\u7e8c\u7814\u7a76\uff1a","text":"<p>\u7576\u4f7f\u7528Alphalens\u5206\u6790\u56e0\u5b50\u5f8c\uff0c\u6211\u5011\u53ef\u4ee5\u4e86\u89e3\u56e0\u5b50\u7684**\u9810\u6e2c\u80fd\u529b**\u53ca**\u56e0\u5b50\u6700\u4f73\u7684\u4ea4\u6613\u65b9\u5f0f**\u3002\u4f46\u56e0\u70baAlphalens\u4e0d\u8003\u616e\u80a1\u7968\u4ea4\u6613\u6642\u6240\u7522\u751f\u7684**\u624b\u7e8c\u8cbb\u3001\u6ed1\u50f9\u3001\u66ab\u505c\u4ea4\u6613\u3001\u6f32\u8dcc\u505c**\u7b49\u56e0\u7d20\uff0c\u6545\u5f8c\u7e8c\u53ef\u4ee5\u518d\u900f\u904eZipline\u3001Pyfolio\u6216\u5176\u4ed6\u5206\u6790\u5de5\u5177\u9032\u884c\u66f4\u6df1\u5165\u7684\u5206\u6790\uff0c\u4e86\u89e3\u56e0\u5b50\u5728\u5be6\u969b\u4ea4\u6613\u4e0a\u7684\u53ef\u80fd\u6027\u3002</p>"},{"location":"example/documents51/","title":"handle_data","text":""},{"location":"example/documents51/#handle_data","title":"Handle_data \u51fd\u5f0f","text":"<p><code>handle_data</code> \u70ba\u69cb\u5efa zipline \u4ea4\u6613\u7b56\u7565\u7684\u91cd\u8981\u51fd\u5f0f\uff0c\u6703\u5728\u56de\u6e2c\u958b\u59cb\u5f8c\u6bcf\u5929\u88ab\u547c\u53eb\uff0c\u4e3b\u8981\u4efb\u52d9\u70ba\u8a2d\u5b9a\u4ea4\u6613\u7b56\u7565\u3001\u4e0b\u55ae\u8207\u7d00\u9304\u4ea4\u6613\u8cc7\u8a0a\u3002</p> <p>\u5176\u4e2d <code>handle_data</code> \u542b\u6709\u5169\u7a2e\u53c3\u6578 -- context , data\u3002context \u8207\u4e0a\u8ff0 <code>initialize</code> \u4ecb\u7d39\u529f\u80fd\u76f8\u540c\uff0c\u9019\u88e1\u70ba\u4e86\u8a18\u9304\u4ea4\u6613\u5929\u6578\u8207\u5426\u6301\u6709\u53f0\u7a4d\u96fb\u80a1\u7968\uff0c\u6211\u5011\u8a2d\u5b9a\u70ba:</p> <pre><code>def handle_data(context, data):\n\n    # \u6bcf\u6b21\u4ea4\u6613\u65e5\u52a0 1 \u5929\u3002\n    context.day += 1 \n\n    # \u5224\u5225\u662f\u5426\u6301\u6709\u53f0\u7a4d\u96fb\uff0c\u8acb\u6ce8\u610f\u6211\u5011\u5728 initialize \u8a2d\u5b9a context.has_ordered \u70ba False\u3002\n    if not context.has_ordered:\n</code></pre> <p>\u63a5\u8457\u6211\u5011\u5f15\u5165\u4ea4\u6613\u4e0b\u55ae\u51fd\u5f0f\uff0c\u4e0b\u55ae\u51fd\u5f0f\u5171\u6709\u516d\u500b\u4e0d\u540c\u7a2e\u985e\uff0c\u8acb\u898b\u6559\u6750\u4e2d\u4ee5 zipline order \u958b\u982d\u4e4b\u6587\u4ef6\uff0c\u9019\u88e1\u4f7f\u7528\u6700\u57fa\u790e\u7684\u4e0b\u55ae\u51fd\u5f0f:</p>"},{"location":"example/documents51/#ziplineapiorder","title":"zipline.api.order","text":"<p>\u8cb7\u9032\u6216\u8ce3\u51fa n \u80a1\u7684\u8cc7\u7522\u6a19\u7684\u3002</p>"},{"location":"example/documents51/#parameters","title":"Parameters:","text":"<ul> <li>asset: zipline.assets.Asset         \u6b32\u4e0b\u55ae\u4e4b\u8cc7\u7522\uff0c\u8acb\u6ce8\u610f\u8cc7\u6599\u578b\u614b\u70ba zipline \u7368\u6709\u7684 Asset \u578b\u614b\u3002</li> <li>amount: int         \u6b32\u4e0b\u55ae\u80a1\u6578\u3002</li> <li>limit_price: float, optional         \u9650\u50f9\u3002</li> <li>stop_price: float, optional         \u505c\u50f9\u3002</li> </ul> <p>\u52a0\u5165\u4e0b\u55ae\u51fd\u5f0f order(symbol(\"2330\")\uff0c\u5176\u4e2d symbol(\"2330\") \u5c31\u662f zipline \u4e2d\u7684 Asset \u8cc7\u6599\u578b\u614b\u3002\u4e4b\u5f8c\uff0c\u6211\u5011\u6703\u5c07 context.has_ordered \u8abf\u6574\u6210 True\uff0c\u6b64\u6642\u4e0b\u500b\u4ea4\u6613\u65e5\u5c31\u4e0d\u6703\u518d\u5ea6\u4e0b\u55ae\uff0c\u66f4\u6539\u5b8c\u7a0b\u5f0f\u5982\u4e0b: <pre><code>def handle_data(context, data):\n\n    context.day += 1 \n    if not context.has_ordered:\n\n        # \u4e0b\u55ae\u53f0\u7a4d\u96fb\u80a1\u7968\u4e00\u5f35 == 1000\u80a1\n        order(symbol(\"2330\", 1000)\n\n        # \u8a2d\u5b9a context.has_ordered \u70ba True \u4ee5\u907f\u514d\u4e0b\u6b21\u4ea4\u6613\u65e5\u4e0b\u55ae\n        context.has_ordered = True\n</code></pre> \u6700\u5f8c\u70ba\u4e86\u8a18\u9304\u4ea4\u6613\u5929\u6578\u3001\u662f\u5426\u6301\u6709\u90e8\u4f4d\u8207\u7576\u65e5\u50f9\u683c\uff0c\u6211\u5011\u4f7f\u7528 <code>record</code> \u51fd\u5f0f\uff0c\u5176\u529f\u80fd\u70ba\u8a18\u9304\u6bcf\u500b\u4ea4\u6613\u65e5\u7684\u8cc7\u8a0a\u4e26\u4e14\u5728\u6700\u7d42 <code>run_algorithm</code> \u8f38\u51fa\u7684\u8cc7\u6599\u8868\u4e2d\uff0c\u4ee5\u6b04\u4f4d\u578b\u5f0f\u52a0\u5165\u6240\u7d00\u9304\u8cc7\u8a0a\u3002\u5176\u7a0b\u5f0f\u7de8\u8f2f\u65b9\u5f0f\u5982\u4e0b: <pre><code>record( \u6b04\u4f4d\u540d\u7a31 = \u8cc7\u8a0a)\n</code></pre> \u9019\u88e1\u6211\u5011\u7d00\u9304\u7576\u5929\u4ea4\u6613\u5929\u6578 (context.day)\u3001\u662f\u5426\u6301\u6709\u90e8\u4f4d (context.has_ordered) \u8207\u7576\u5929\u6536\u76e4\u50f9\u683c (data.current(symbol(\"2330\"), \"close\"))\uff0c\u5176\u4e2d\u4e0a\u9762\u6240\u63d0\u5230\u7684 data \u5c31\u662f\u5728 <code>handle_data</code> \u4e2d\u7684 data\uff0cdata \u4e3b\u8981\u529f\u80fd\u70ba\u4fdd\u5b58\u6bcf\u5929\u80a1\u50f9\u7684\u50f9\u91cf\u8cc7\u6599\u4e26\u4e14\u63d0\u4f9b\u547c\u53eb\uff0c\u65bc\u672c\u5be6\u4f8b\u6211\u5011\u6b32\u7d00\u9304\u7576\u5929\u6536\u76e4\u50f9\uff0c\u65bc\u662f\u7528\u5230 <code>data.current()</code> \u51fd\u5f0f\u3002</p>"},{"location":"example/documents51/#ziplinedatacurrent","title":"zipline.data.current","text":"<p>\u547c\u53eb\u80a1\u7968\u7684\u7576\u65e5\u50f9\u91cf\u8cc7\u8a0a\u3002</p>"},{"location":"example/documents51/#parameters_1","title":"Parameters:","text":"<ul> <li>assets: zipline.asset.Asset         \u6240\u6b32\u547c\u53eb\u7684\u80a1\u7968\uff0c\u8acb\u6ce8\u610f\u8cc7\u6599\u578b\u614b\u70ba zipline \u7368\u6709\u7684 Asset \u578b\u614b\u3002</li> <li>fields: str         \u6240\u6b32\u547c\u53eb\u7684\u50f9\u91cf\u8cc7\u8a0a\uff0c\u63d0\u4f9b 'close', 'open', 'high', 'low' \u8207 'volume'\u3002</li> </ul> <p>\u7531\u65bc\u6211\u5011\u5e0c\u671b\u8a18\u9304\u53f0\u7a4d\u96fb\u7576\u65e5\u6536\u76e4\u50f9\u683c\uff0c\u56e0\u6b64\u7a0b\u5f0f\u7de8\u8f2f\u5982\u4e0b: <pre><code>def handle_data(context, data):\n    context.day += 1 \n    if not context.has_ordered:\n        order(symbol(\"2330\", 1000)\n        context.has_ordered = True\n\n    record( # \u7d00\u9304\u7528\n        trade_days = context.day,\n        has_ordered = context.has_ordered,\n        TSMC = data.current(symbol(\"2330\"), \"close\")\n    )\n</code></pre></p> <pre><code>from zipline.api import order, record, symbol\n\ndef handle_data(context, data):\n    context.day += 1\n    if not context.has_ordered:\n        order(symbol(\"2330\"), 1000)\n        context.has_ordered = True\n\n    record(\n        trade_days = context.day,\n        has_ordered = context.has_ordered,\n        TSMC = data.current(symbol(\"2330\"), \"close\")\n    )\n</code></pre>"},{"location":"example/documents52/","title":"before_trading_start","text":""},{"location":"example/documents52/#before_trading_start","title":"before_trading_start \u51fd\u6578\u4ecb\u7d39","text":""},{"location":"example/documents52/#_1","title":"\u51fd\u6578\u7528\u9014","text":"<p><code>before_trading_start(context, data)</code> \u662f Zipline \u56de\u6e2c\u67b6\u69cb\u4e2d\u7684\u4e00\u500b \u53ef\u9078\u7684 callback \u51fd\u6578\uff0c\u5728\u6bcf\u5929\u5e02\u5834\u958b\u76e4\u524d\u6703\u88ab\u547c\u53eb\u4e00\u6b21\u3002\u9019\u53ef\u4ee5\u8b93\u4f60\u5728\u6bcf\u5929\u958b\u59cb\u4e4b\u524d\uff0c\u5148\u6e96\u5099\u597d\u6240\u9700\u8cc7\u6599\u6216\u904b\u7b97\u7d50\u679c\u3002</p> <pre><code>Called every day before market open.\n</code></pre>"},{"location":"example/documents52/#pipeline","title":"\u4f7f\u7528\u5834\u666f\u4e00\uff1a\u53d6\u51fa\u7576\u65e5\u7684 pipeline \u7d50\u679c","text":"<pre><code>def before_trading_start(context, data):\n    \"\"\"\n    Called every day before market open.\n    \"\"\"\n    context.output = pipeline_output('signals')\n</code></pre>"},{"location":"example/documents52/#contexttrades","title":"\u4f7f\u7528\u5834\u666f\u4e8c\uff1a\u8a2d\u5b9a\u6301\u80a1\u76ee\u6a19 (context.trades)","text":"<pre><code>def before_trading_start(context, data):\n    \"\"\"\n    Called every day before market open.\n    \"\"\"\n    output = pipeline_output('signals')\n    context.output = output\n    context.trades = (output['longs'].astype(int)\n                      .reset_index()\n                      .drop_duplicates()\n                      .set_index('index')\n                      .squeeze())\n</code></pre> <ul> <li><code>context.trades</code>: \u70ba\u4e00\u500b <code>pandas.Series</code>\uff0c\u4ee3\u8868\u6bcf\u5929\u9810\u8a08\u6301\u6709\u7684\u6a19\u7684\uff081 \u8868\u6301\u6709\uff0c0 \u8868\u4e0d\u6301\u6709\uff09\u3002</li> </ul>"},{"location":"example/documents52/#_2","title":"\u8a2d\u5b9a\u65b9\u5f0f\u7c21\u8ff0","text":"<pre><code>before_trading_start: callable, optional\n</code></pre> <p>\u53ef\u8a2d\u5b9a\u70ba\u4e00\u500b\u51fd\u6578\uff0c\u7528\u65bc Zipline \u7b56\u7565\u521d\u59cb\u5316\u7684\u53c3\u6578\u4e4b\u4e00\u3002</p>"},{"location":"example/documents53/","title":"analyze","text":""},{"location":"example/documents53/#analyze","title":"Analyze \u51fd\u5f0f","text":"<p><code>analyze</code> \u4e3b\u8981\u7528\u65bc\u56de\u6e2c\u5f8c\u8996\u89ba\u5316\u7b56\u7565\u7e3e\u6548\u8207\u98a8\u96aa\uff0c\u9019\u88e1\u6211\u5011\u4ee5 <code>matplotlib</code> \u7e6a\u88fd\u6295\u7d44\u50f9\u503c\u8868\u8207\u53f0\u7a4d\u96fb\u80a1\u50f9\u8d70\u52e2\u8868\u3002\u5176\u4e2d <code>analyze</code> \u6709\u5169\u500b\u53c3\u6578 context \u8207 perf\uff0ccontext \u5c31\u8207\u4e0a\u8ff0\u76f8\u540c\uff0cperf \u5c31\u662f\u6700\u7d42 <code>run_algorithm</code> \u8f38\u51fa\u7684\u8cc7\u6599\u8868 -- results\u3002\u6211\u5011\u53ef\u4ee5\u63d0\u53d6\u88e1\u9762\u7279\u5b9a\u6b04\u4f4d\u4f86\u7e6a\u88fd\u5716\u8868\u3002</p> <pre><code>import matplotlib.pyplot as plt\ndef analyze(context, perf):\n    ax1 = plt.subplot(211)\n    perf.portfolio_value.plot(ax=ax1,title='portfolio values')\n    ax2 = plt.subplot(212, sharex=ax1)\n    perf['TSMC'].plot(ax=ax2,title='TSMC close')\n    plt.gcf().set_size_inches(18, 8)\n    plt.show()\n</code></pre>"},{"location":"example/documents54/","title":"Zipline Context \u529f\u80fd\u4ecb\u7d39","text":"<p>\u8acb\u65bc\u95b1\u8b80\u672c\u6587\u524d\uff0c\u9810\u5148\u95b1\u8b80 TSMC buy and hold strategy\uff0c\u4ee5\u4e86\u89e3\u56db\u5927\u51fd\u5f0f (initialize, handel_data, analyze, run_algorithm) \u4f7f\u7528\u65b9\u6cd5\u3002</p> <p>\u5728 Zipline \u7a0b\u5f0f\u904b\u884c\u4e2d\u7684\u5404\u7a2e\u6578\u64da\uff0c\u6703\u8a18\u9304\u5728context\u4e26\u4e0d\u65b7\u66f4\u65b0\uff0c\u6240\u4ee5\u5728\u7a0b\u5f0f\u904b\u884c\u4e2d\uff0c\u53ef\u4ee5\u96a8\u6642\u53d6\u5f97\u5373\u6642\u8cc7\u8a0a\u3002\u4e0b\u9762\u4ecb\u7d39\u5e7e\u500b\u5e38\u7528\u9805\u76ee\uff1a</p> <pre><code>context.asset\ncontext.account\ncontext.portfolio\ncontext.blotter\n</code></pre>"},{"location":"example/documents54/#contextasset","title":"context.asset","text":"<p>\u5728 initialize \u7684\u968e\u6bb5\u53ef\u4ee5\u52a0\u5165</p> <pre><code>context.tickers = ['1216', '2330', '2327']\ncontext.asset = [symbol(ticker) for ticker in context.tickers]\n</code></pre> <p>\u5efa\u7acb\u4e00\u500b\u80a1\u7968\u6e05\u55ae\uff1a[Equity(2 [1216]), Equity(14 [2330]), Equity(13 [2327])]\uff0c\u683c\u5f0f\u662f list\uff0c\u88e1\u9762\u8cc7\u6599\u578b\u614b\u662f zipline.asset.Assets\uff0c\u9019\u6a23\u5728handle_data \u968e\u6bb5\u5c31\u53ef\u4ee5\u7528\u4f86\u9078\u53d6\u80a1\u7968\u3002</p>"},{"location":"example/documents54/#contextaccount","title":"context.account","text":"<p>account \u88e1\u9762\u7684\u8cc7\u8a0a\uff0c\u5927\u591a\u90fd\u662f\u4f86\u81ea context.portfolio\uff0c\u5171\u8a08\u6709\uff1a</p> <pre><code>account.settled_cash = portfolio.cash \u5e33\u4e0a\u73fe\u91d1\naccount.accrued_interest = 0.0\u3002\u80a1\u7968\u4e0d\u9069\u7528\u3002\naccount.buying_power = np.inf \uff08\u7121\u9650\u5927\uff09\u3002\u80a1\u7968\u4e0d\u9069\u7528\u3002\naccount.equity_with_loan = portfolio.portfolio_value \u6295\u8cc7\u7d44\u5408\u7e3d\u5e02\u503c\naccount.total_positions_value = portfolio.portfolio_value - portfolio.cash \u6295\u8cc7\u7d44\u5408\u7e3d\u5e02\u503c - \u73fe\u91d1\naccount.total_positions_exposure = portfolio.positions_exposure sum(\u80a1\u6578 * \u7576\u5929\u6536\u76e4\u50f9)\uff0clong\u70ba\u6b63\u503c\uff0cshort\u70ba\u8ca0\u503c\naccount.regt_equity = portfolio.cash \u73fe\u91d1\naccount.regt_margin = np.inf \uff08\u7121\u9650\u5927\uff09\u3002\u80a1\u7968\u4e0d\u9069\u7528\u3002\naccount.initial_margin_requirement = 0.0 \u5fc5\u9808\u4fdd\u8b49\u91d1\u3002\u80a1\u7968\u4e0d\u9069\u7528\u3002\naccount.maintenance_margin_requirement = 0.0 \u7dad\u6301\u4fdd\u8b49\u91d1\u3002\u80a1\u7968\u4e0d\u9069\u7528\u3002\naccount.available_funds = portfolio.cash \u73fe\u91d1\naccount.excess_liquidity = portfolio.cash \u73fe\u91d1\naccount.cushion = portfolio.cash / portfolio.portfolio_value \u73fe\u91d1 / \u6295\u8cc7\u7d44\u5408\u7e3d\u5e02\u503c\uff0c\u5f8c\u8005\u5982\u679c\u662f 0 \u5247\u56de\u50b3 np.inf \uff08\u7121\u9650\u5927\uff09\naccount.day_trades_remaining = \u5269\u9918\u4ea4\u6613\u65e5\uff0c\u9810\u8a2dnp.inf \uff08\u7121\u9650\u5927\uff09\u3002\u80a1\u7968\u4e0d\u9069\u7528\u3002\naccount.net_liquidation = portfolio.portfolio_value\naccount.gross_leverage = gross_exposure / portfolio_value \u5f8c\u8005\u5982\u679c\u662f 0 \u5247\u56de\u50b3 np.inf \uff08\u7121\u9650\u5927\uff09\naccount.net_leverage = net_exposure / portfolio_value \u5f8c\u8005\u5982\u679c\u662f 0 \u5247\u56de\u50b3 np.inf \uff08\u7121\u9650\u5927\uff09\naccount.leverage = account.gross_leverage\n</code></pre> <p>gross_exposure\u7b97\u6cd5\uff1asum(\u80a1\u6578 * \u7576\u5929\u6536\u76e4\u50f9)\u3002\u5176\u4e2d\uff0c\u80a1\u6578\u4e0d\u7ba1\u662flong\u6216short\u90fd\u662f\u6b63\u503c</p> <p>net_exposure\u7b97\u6cd5\uff1asum(\u80a1\u6578 * \u7576\u5929\u6536\u76e4\u50f9)\u3002\u5176\u4e2d\uff0c\u80a1\u6578long\u70ba\u6b63\uff0cshort\u70ba\u8ca0</p>"},{"location":"example/documents54/#contextportfolio","title":"context.portfolio","text":"<p>portfolio\u88e1\u9762\u7684\u8cc7\u8a0a\uff0c\u6709\u4e00\u4e9b\u4e5f\u540c\u6642\u51fa\u73fe\u5728\u56de\u6e2c\u7522\u51fa\u7684\u8cc7\u6599\u4e2d\uff0c\u4f46\u662f\u6709\u4e9b\u8a08\u7b97\u65b9\u5f0f\u4e0d\u592a\u4e00\u6a23</p> <pre><code>cash_flow\uff1a\u5f9e\u958b\u59cb\u65e5\u5230\u7576\u5929\u7684\u7d2f\u8a08\u73fe\u91d1\u6d41\uff0c\u6d41\u5165\u6b63\u6d41\u51fa\u8ca0\nstarting_cash\uff1a\u8d77\u59cb\u8cc7\u91d1\uff0c\u4e0d\u662f\u7576\u5929\u958b\u59cb\u6642\u7684\u73fe\u91d1\nportfolio_value\uff1apositions_value + cash \u6295\u8cc7\u7d44\u5408\u7e3d\u5e02\u503c\npnl\uff1a\u7d2f\u8a08\u7684pnl\uff0c\u70ba portfolio_value - \u8d77\u59cb\u8cc7\u91d1\nreturns\uff1a\u7d2f\u8a08return\uff0c( 1 + \u6bcf\u65e5 pnl / \u6bcf\u65e5\u8d77\u59cb portfolio_value) \u7684\u4e58\u7a4d - 1\ncash\uff1a\u56de\u6e2c\u8cc7\u6599\u4e2d\u7684 ending_cash\npositions\uff1a\u5e33\u4e0a\u7684\u80a1\u7968\u90e8\u4f4d\nstart_date\uff1a\u6574\u500b\u6e2c\u8a66\u7684\u958b\u59cb\u65e5\npositions_value\uff1a\u8ddf net_exposure \u7b97\u6cd5\u4e00\u6a23\uff0csum(\u80a1\u6578 * \u7576\u5929\u6536\u76e4\u50f9)\u3002\u5176\u4e2d\uff0c\u80a1\u6578long\u70ba\u6b63\uff0cshort\u70ba\u8ca0\npositions_exposure\uff1a\u8cb7\u8ce3\u80a1\u7968\u6642 value = exposure\uff0c\u8ddf\u4e0a\u9762\u4e00\u6a23 \u53c3\u8003~\\zipline\\finance\\_finance_ext.pyx\n</code></pre> <p>context.portfolio.positions \u56de\u50b3\u5167\u5bb9\u7bc4\u4f8b\uff1a</p> <p>{Equity(0 [1101]): Position({'asset': Equity(0 [1101]), 'amount': 1000, 'cost_basis': 45.56483750129291, 'last_sale_price': 45.1, 'last_sale_date': Timestamp('2018-07-25 05:30:00+0000', tz='UTC')}), Equity(14 [2330]): Position({'asset': Equity(14 [2330]), 'amount': -1000, 'cost_basis': 240.65657496810346, 'last_sale_price': 240.5, 'last_sale_date': Timestamp('2018-07-25 05:30:00+0000', tz='UTC')})}</p>"},{"location":"example/documents54/#contextblotter","title":"context.blotter","text":"<p>blotter\u4e3b\u8981\u7d00\u9304\u8a02\u55ae\u76f8\u95dc\u7684\u8cc7\u8a0a</p> <ol> <li> <p>slippage_models \u7d00\u9304\u9019\u6b21\u6a21\u64ec\u6642\uff0c\u80a1\u7968\u548c\u671f\u8ca8\u6240\u7528\u7684slippage model\uff0c\u7bc4\u4f8b\uff1a</p> <p>{: VolumeShareSlippage( volume_limit=0.025, price_impact=0.1), : VolatilityVolumeShare(volume_limit=0.05, eta=)} <li> <p>commissions_models \u6982\u5ff5\u76f8\u540c\uff0c\u7bc4\u4f8b\uff1a</p> <p>{: PerDollar(cost_per_dollar=0.001425), :  PerContract(cost_per_contract=0.85, exchange_fee=, min_trade_cost=0)} <li> <p>open_orders\uff1a\u56de\u50b3\u5b57\u5178\uff0ckey\u662fasset (\u4f8b\u5982 symbol('2327'))\uff0c\u5c0d\u61c9list\uff0clist\u88e1\u9762\u662f\u8a72\u80a1\u7968\u7684open orders\uff1a</p> <p>Order({'id': 'c201d801586349febfd88f3b97b35738', 'dt': Timestamp('2022-10-20 05:30:00+0000', tz='UTC'), 'reason': None,  'created': Timestamp('2022-10-20 05:30:00+0000', tz='UTC'), 'amount': 1000, 'filled': 0, 'commission': 0, 'stop': None,  'limit': None, 'stop_reached': False, 'limit_reached': False, 'sid': Equity(11 [2327]), 'status': }) <li> <p>orders\uff1a\u76ee\u524d\u70ba\u6b62\u6240\u6709\u7684\u8a02\u55ae\uff0c\u5305\u62ecopen, canceled, filled\uff0c\u56de\u50b3\u683c\u5f0f\u662f\u5b57\u5178\uff0ckey\u662forder id\uff0c\u5c0d\u61c9\u7684\u662f\u548c\u4e0a\u9762\u4e00\u6a23\u7684  <li> <p>new_orders\uff1a\u7576\u5929\u5275\u7acb\u7684\u8a02\u55ae\uff0c\u56de\u50b3\u4e00\u500b\u6e05\u55ae\uff0c\u88e1\u9762\u7269\u4ef6\u548c\u4e0a\u9762\u4e00\u6a23\uff0c <li> <p>current_dt\uff1a \u7576\u65e5\u65e5\u671f</p> </li>"},{"location":"example/documents54/#contextsim_params","title":"context.sim_params","text":"<p>sim_params\u7d00\u9304\u5404\u7a2e\u6a21\u64ec\u7684\u53c3\u6578\uff0c\u7bc4\u4f8b\uff1a</p> <pre><code>SimulationParameters(\nstart_session=2022-12-05 00:00:00+00:00,\nend_session=2022-12-23 00:00:00+00:00,\ncapital_base=1000000.0,\ndata_frequency=daily,\nemission_rate=daily,\nfirst_open=2022-12-05 01:01:00+00:00,\nlast_close=2022-12-23 05:30:00+00:00,\ntrading_calendar=&lt;exchange_calendars.exchange_calendar_tejxtai.TEJ_XTAIExchangeCalendar object at 0x000001B76D7682E0&gt;\n)\n</code></pre> <ol> <li>start_session\uff1a\u958b\u59cb\u65e5\uff0cUTC\u5348\u591c\u6642\u9593</li> <li>end_session\uff1a\u7d50\u675f\u65e5\uff0cUTC\u5348\u591c\u6642\u9593</li> <li>capital_base\uff1a\u8d77\u59cb\u8cc7\u91d1</li> <li>data_frequency\uff1a\u8cc7\u6599\u983b\u7387\uff0c\u76ee\u524d\u50c5\u652f\u63f4\u65e5\u983b\u7387</li> <li>emission_rate\uff1a\u8a08\u7b97\u983b\u7387\uff0c\u4e5f\u662f\u6bcf\u65e5</li> <li>first_open\uff1a\u7b2c\u4e00\u500b\u958b\u59cb\u4ea4\u6613\u6642\u9593</li> <li>last_close\uff1a\u6700\u5f8c\u4e00\u500b\u6536\u76e4\u6642\u9593</li> <li>trading_calendar\uff1a\u4f7f\u7528\u7684\u4ea4\u6613\u65e5\u66c6(TEJ_XTAI)</li> </ol> <pre><code>\n</code></pre>"},{"location":"example/documents55/","title":"TSMC \u8cb7\u9032\u6301\u6709\u7b56\u7565","text":"<p>\u672c\u6b21\u7bc4\u4f8b\u5c07\u4ee5\u6700\u7d93\u5178\u7684\u8cb7\u9032\u6301\u6709\u7b56\u7565\u5411\u60a8\u4ecb\u7d39 zipline \u56de\u6e2c\u65b9\u6cd5\uff0c\u4e26\u4e14\u4ecb\u7d39\u7d44\u5efa zipline \u4ea4\u6613\u7b56\u7565\u6700\u57fa\u790e\u7684\u56db\u5927\u51fd\u5f0f - <code>initialize</code>\u3001<code>handle_data</code>\u3001<code>analyze</code>\u3001<code>run_algorithm</code>\u3002</p>"},{"location":"example/documents55/#_1","title":"\u5c0e\u5165\u80a1\u50f9\u8cc7\u6599","text":"<p>\u5728 zipline \u4e2d\uff0c\u6211\u5011\u4f7f\u7528 <code>os</code> \u642d\u914d <code>!zipline ingest</code> \u5c07\u80a1\u50f9\u8cc7\u6599\u5c0e\u5165\u5230\u672c\u5730\u7aef\u3002\u5e38\u7528\u5beb\u6cd5\u70ba:  <pre><code>!zipline ingest -b tqant \n</code></pre> \u5176\u4e2d <code>-b</code> \u70ba bundle \u4e4b\u6db5\u7fa9\uff0cbundle \u70ba\u80a1\u7968\u50f9\u91cf\u8cc7\u8a0a\u7684\u8f09\u9ad4\uff0c<code>tquant</code> \u5247\u662f bundle \u4e4b\u540d\u7a31\uff0c\u53ef\u7531\u4f7f\u7528\u8005\u81ea\u5b9a\u7fa9\u3002\u5728 ingest \u4e4b\u524d\uff0c\u9700\u5148\u4f7f\u7528 <code>os</code> \u8a2d\u5b9a\u74b0\u5883\u8b8a\u6578\uff0c\u4ee5\u65b9\u4fbf zipline \u63a5\u6536\u4f7f\u7528\u8005\u6240\u6b32\u6293\u53d6\u4e4b\u8cc7\u7522\u6a19\u7684\u8207\u5e74\u4efd\u4e4b\u8981\u6c42\u3002\u4e00\u822c\u800c\u8a00\uff0c\u91dd\u5c0d\u74b0\u5883\u8b8a\u6578\u4e4b\u5beb\u6cd5\u5982\u4e0b: <pre><code>os.environ['TEJAPI_BASE'] = \"https://api.tej.com.tw\" ==&gt; \u5c0e\u822a\u81f3 tej api \u7db2\u57df\u3002\nos.environ['TEJAPI_KEY'] = \"your key\" ==&gt; \u500b\u4eba api key \u4ee5\u9a57\u8b49\u8eab\u5206\u3002\nos.environ['mdate'] = \"20170601 20230702\" ==&gt; \u6b32\u6293\u53d6\u8cc7\u6599\u4e4b\u65e5\u671f\u5340\u9593\uff0c\u524d\u8005\u70ba\u8d77\u59cb\u65e5\uff0c\u5f8c\u8005\u70ba\u7d42\u6b62\u65e5\u3002\nos.environ['ticker'] = '2330 2337' ==&gt; \u6240\u6b32\u6293\u53d6\u80a1\u7968\u4e4b\u4ee3\u78bc\u3002\n</code></pre></p> <pre><code>import os \nos.environ['TEJAPI_BASE'] = \"https://api.tej.com.tw\"\nos.environ['TEJAPI_KEY'] = \"your key\"\nos.environ['mdate'] = \"20170601 20230702\"\nos.environ['ticker'] = '2330 IR0001'\n!zipline ingest -b tquant\n</code></pre> <pre><code>Merging daily equity files:\n\n\n[2023-08-09 05:09:50.565678] INFO: zipline.data.bundles.core: Ingesting tquant.\n</code></pre>"},{"location":"example/documents55/#initialize","title":"Initialize \u51fd\u5f0f","text":"<p><code>initialize</code> \u70ba\u69cb\u5efa zipline \u4ea4\u6613\u7b56\u7565\u7684\u91cd\u8981\u51fd\u5f0f\uff0c\u6703\u5728\u56de\u6e2c\u958b\u59cb\u524d\u88ab\u547c\u53eb\u4e00\u6b21\uff0c\u4e3b\u8981\u4efb\u52d9\u70ba\u8a2d\u5b9a\u56de\u6e2c\u74b0\u5883\uff0c\u5e38\u898b\u7528\u65bc\u8a2d\u5b9a\u6ed1\u50f9\u6216\u624b\u7e8c\u8cbb\u3002\u5206\u5225\u53ef\u4ee5\u4f7f\u7528:</p> <ol> <li> <p>zipline.api.set_slippage</p> <p>\u8a2d\u5b9a\u6ed1\u50f9\u6a21\u5f0f\uff0czipline \u5171\u63d0\u4f9b\u56db\u7a2e\u6ed1\u50f9\u8a08\u7b97\u65b9\u6cd5\uff0c\u8a73\u8acb\u8acb\u898b\u5f8c\u7e8c\u6559\u5b78-zipline slippage\u3002</p> </li> <li> <p>zipline.api.set_commission</p> <p>\u8a2d\u5b9a\u624b\u7e8c\u8cbb\u6a21\u5f0f\uff0czipline \u5171\u63d0\u4f9b\u4e09\u7a2e\u624b\u7e8c\u8cbb\u8a08\u7b97\u65b9\u6cd5\uff0c\u8a73\u8acb\u8acb\u898b\u5f8c\u7e8c\u6559\u5b78-zipline commission\u3002</p> </li> </ol> <p>\u5e38\u898b\u7684\u5beb\u6cd5\u5982\u4e0b: <pre><code>def initialize(context):\n    set_slippage(slippage.FixedSlippage())\n    set_commission(commission.PerShare(cost=0.00285))\n</code></pre> \u9664\u6b64\u4e4b\u5916\uff0c\u6211\u5011\u53ef\u4ee5\u6ce8\u610f\u5230 initialize \u542b\u6709\u4e00\u500b\u53c3\u6578 context\uff0ccontext \u70ba\u4e00\u500b\u547d\u540d\u7a7a\u9593 (namespace)\uff0c\u53ef\u4ee5\u5728\u5132\u5b58\u5404\u7a2e\u81ea\u5b9a\u7fa9\u4e4b\u8b8a\u6578\u4e26\u4e14\u5728\u6bcf\u6b21\u4ea4\u6613\u65e5\u4e2d\u5faa\u74b0\u547c\u53eb\u3002\u8209\u4f8b\u4f86\u8aaa\uff0c\u6211\u5011\u8a2d\u7f6e\u4e00\u500b\u8b8a\u6578 (context.day = 0) \u4f86\u8a08\u7b97\u4ea4\u6613\u65e5\u5929\u6578\u8207\u4e00\u500b\u8b8a\u6578 (context.has_ordered = False) \u7d00\u9304\u662f\u5426\u5df2\u7d93\u6301\u6709\u53f0\u7a4d\u96fb\u80a1\u7968\u3002 <pre><code>def initialize(context):\n    context.day = 0\n    context.has_ordered = False\n    set_slippage(slippage.FixedSlippage())\n    set_commission(commission.PerShare(cost=0.00285))\n</code></pre></p> <pre><code>from zipline.api import set_slippage, set_commission\nfrom zipline.finance import slippage, commission\n\ndef initialize(context):\n    context.day = 0\n    context.has_ordered = False\n    set_slippage(slippage.FixedSlippage())\n    set_commission(commission.PerShare(cost=0.00285))\n</code></pre>"},{"location":"example/documents55/#handle_data","title":"Handle_data \u51fd\u5f0f","text":"<p><code>handle_data</code> \u70ba\u69cb\u5efa zipline \u4ea4\u6613\u7b56\u7565\u7684\u91cd\u8981\u51fd\u5f0f\uff0c\u6703\u5728\u56de\u6e2c\u958b\u59cb\u5f8c\u6bcf\u5929\u88ab\u547c\u53eb\uff0c\u4e3b\u8981\u4efb\u52d9\u70ba\u8a2d\u5b9a\u4ea4\u6613\u7b56\u7565\u3001\u4e0b\u55ae\u8207\u7d00\u9304\u4ea4\u6613\u8cc7\u8a0a\u3002</p> <p>\u5176\u4e2d <code>handle_data</code> \u542b\u6709\u5169\u7a2e\u53c3\u6578 -- context , data\u3002context \u8207\u4e0a\u8ff0 <code>initialize</code> \u4ecb\u7d39\u529f\u80fd\u76f8\u540c\uff0c\u9019\u88e1\u70ba\u4e86\u8a18\u9304\u4ea4\u6613\u5929\u6578\u8207\u5426\u6301\u6709\u53f0\u7a4d\u96fb\u80a1\u7968\uff0c\u6211\u5011\u8a2d\u5b9a\u70ba:</p> <pre><code>def handle_data(context, data):\n\n    # \u6bcf\u6b21\u4ea4\u6613\u65e5\u52a0 1 \u5929\u3002\n    context.day += 1 \n\n    # \u5224\u5225\u662f\u5426\u6301\u6709\u53f0\u7a4d\u96fb\uff0c\u8acb\u6ce8\u610f\u6211\u5011\u5728 initialize \u8a2d\u5b9a context.has_ordered \u70ba False\u3002\n    if not context.has_ordered:\n</code></pre> <p>\u63a5\u8457\u6211\u5011\u5f15\u5165\u4ea4\u6613\u4e0b\u55ae\u51fd\u5f0f\uff0c\u4e0b\u55ae\u51fd\u5f0f\u5171\u6709\u516d\u500b\u4e0d\u540c\u7a2e\u985e\uff0c\u8acb\u898b\u6559\u6750\u4e2d\u4ee5 zipline order \u958b\u982d\u4e4b\u6587\u4ef6\uff0c\u9019\u88e1\u4f7f\u7528\u6700\u57fa\u790e\u7684\u4e0b\u55ae\u51fd\u5f0f:</p>"},{"location":"example/documents55/#ziplineapiorder","title":"zipline.api.order","text":"<p>\u8cb7\u9032\u6216\u8ce3\u51fa n \u80a1\u7684\u8cc7\u7522\u6a19\u7684\u3002</p>"},{"location":"example/documents55/#parameters","title":"Parameters:","text":"<ul> <li>asset: zipline.assets.Asset         \u6b32\u4e0b\u55ae\u4e4b\u8cc7\u7522\uff0c\u8acb\u6ce8\u610f\u8cc7\u6599\u578b\u614b\u70ba zipline \u7368\u6709\u7684 Asset \u578b\u614b\u3002</li> <li>amount: int         \u6b32\u4e0b\u55ae\u80a1\u6578\u3002</li> <li>limit_price: float, optional         \u9650\u50f9\u3002</li> <li>stop_price: float, optional         \u505c\u50f9\u3002</li> </ul> <p>\u52a0\u5165\u4e0b\u55ae\u51fd\u5f0f order(symbol(\"2330\")\uff0c\u5176\u4e2d symbol(\"2330\") \u5c31\u662f zipline \u4e2d\u7684 Asset \u8cc7\u6599\u578b\u614b\u3002\u4e4b\u5f8c\uff0c\u6211\u5011\u6703\u5c07 context.has_ordered \u8abf\u6574\u6210 True\uff0c\u6b64\u6642\u4e0b\u500b\u4ea4\u6613\u65e5\u5c31\u4e0d\u6703\u518d\u5ea6\u4e0b\u55ae\uff0c\u66f4\u6539\u5b8c\u7a0b\u5f0f\u5982\u4e0b: <pre><code>def handle_data(context, data):\n\n    context.day += 1 \n    if not context.has_ordered:\n\n        # \u4e0b\u55ae\u53f0\u7a4d\u96fb\u80a1\u7968\u4e00\u5f35 == 1000\u80a1\n        order(symbol(\"2330\", 1000)\n\n        # \u8a2d\u5b9a context.has_ordered \u70ba True \u4ee5\u907f\u514d\u4e0b\u6b21\u4ea4\u6613\u65e5\u4e0b\u55ae\n        context.has_ordered = True\n</code></pre> \u6700\u5f8c\u70ba\u4e86\u8a18\u9304\u4ea4\u6613\u5929\u6578\u3001\u662f\u5426\u6301\u6709\u90e8\u4f4d\u8207\u7576\u65e5\u50f9\u683c\uff0c\u6211\u5011\u4f7f\u7528 <code>record</code> \u51fd\u5f0f\uff0c\u5176\u529f\u80fd\u70ba\u8a18\u9304\u6bcf\u500b\u4ea4\u6613\u65e5\u7684\u8cc7\u8a0a\u4e26\u4e14\u5728\u6700\u7d42 <code>run_algorithm</code> \u8f38\u51fa\u7684\u8cc7\u6599\u8868\u4e2d\uff0c\u4ee5\u6b04\u4f4d\u578b\u5f0f\u52a0\u5165\u6240\u7d00\u9304\u8cc7\u8a0a\u3002\u5176\u7a0b\u5f0f\u7de8\u8f2f\u65b9\u5f0f\u5982\u4e0b: <pre><code>record( \u6b04\u4f4d\u540d\u7a31 = \u8cc7\u8a0a)\n</code></pre> \u9019\u88e1\u6211\u5011\u7d00\u9304\u7576\u5929\u4ea4\u6613\u5929\u6578 (context.day)\u3001\u662f\u5426\u6301\u6709\u90e8\u4f4d (context.has_ordered) \u8207\u7576\u5929\u6536\u76e4\u50f9\u683c (data.current(symbol(\"2330\"), \"close\"))\uff0c\u5176\u4e2d\u4e0a\u9762\u6240\u63d0\u5230\u7684 data \u5c31\u662f\u5728 <code>handle_data</code> \u4e2d\u7684 data\uff0cdata \u4e3b\u8981\u529f\u80fd\u70ba\u4fdd\u5b58\u6bcf\u5929\u80a1\u50f9\u7684\u50f9\u91cf\u8cc7\u6599\u4e26\u4e14\u63d0\u4f9b\u547c\u53eb\uff0c\u65bc\u672c\u5be6\u4f8b\u6211\u5011\u6b32\u7d00\u9304\u7576\u5929\u6536\u76e4\u50f9\uff0c\u65bc\u662f\u7528\u5230 <code>data.current()</code> \u51fd\u5f0f\u3002</p>"},{"location":"example/documents55/#ziplinedatacurrent","title":"zipline.data.current","text":"<p>\u547c\u53eb\u80a1\u7968\u7684\u7576\u65e5\u50f9\u91cf\u8cc7\u8a0a\u3002</p>"},{"location":"example/documents55/#parameters_1","title":"Parameters:","text":"<ul> <li>assets: zipline.asset.Asset         \u6240\u6b32\u547c\u53eb\u7684\u80a1\u7968\uff0c\u8acb\u6ce8\u610f\u8cc7\u6599\u578b\u614b\u70ba zipline \u7368\u6709\u7684 Asset \u578b\u614b\u3002</li> <li>fields: str         \u6240\u6b32\u547c\u53eb\u7684\u50f9\u91cf\u8cc7\u8a0a\uff0c\u63d0\u4f9b 'close', 'open', 'high', 'low' \u8207 'volume'\u3002</li> </ul> <p>\u7531\u65bc\u6211\u5011\u5e0c\u671b\u8a18\u9304\u53f0\u7a4d\u96fb\u7576\u65e5\u6536\u76e4\u50f9\u683c\uff0c\u56e0\u6b64\u7a0b\u5f0f\u7de8\u8f2f\u5982\u4e0b: <pre><code>def handle_data(context, data):\n    context.day += 1 \n    if not context.has_ordered:\n        order(symbol(\"2330\", 1000)\n        context.has_ordered = True\n\n    record( # \u7d00\u9304\u7528\n        trade_days = context.day,\n        has_ordered = context.has_ordered,\n        TSMC = data.current(symbol(\"2330\"), \"close\")\n    )\n</code></pre></p> <pre><code>from zipline.api import order, record, symbol\n\ndef handle_data(context, data):\n    context.day += 1\n    if not context.has_ordered:\n        order(symbol(\"2330\"), 1000)\n        context.has_ordered = True\n\n    record(\n        trade_days = context.day,\n        has_ordered = context.has_ordered,\n        TSMC = data.current(symbol(\"2330\"), \"close\")\n    )\n</code></pre>"},{"location":"example/documents55/#analyze","title":"Analyze \u51fd\u5f0f","text":"<p><code>analyze</code> \u4e3b\u8981\u7528\u65bc\u56de\u6e2c\u5f8c\u8996\u89ba\u5316\u7b56\u7565\u7e3e\u6548\u8207\u98a8\u96aa\uff0c\u9019\u88e1\u6211\u5011\u4ee5 <code>matplotlib</code> \u7e6a\u88fd\u6295\u7d44\u50f9\u503c\u8868\u8207\u53f0\u7a4d\u96fb\u80a1\u50f9\u8d70\u52e2\u8868\u3002\u5176\u4e2d <code>analyze</code> \u6709\u5169\u500b\u53c3\u6578 context \u8207 perf\uff0ccontext \u5c31\u8207\u4e0a\u8ff0\u76f8\u540c\uff0cperf \u5c31\u662f\u6700\u7d42 <code>run_algorithm</code> \u8f38\u51fa\u7684\u8cc7\u6599\u8868 -- results\u3002\u6211\u5011\u53ef\u4ee5\u63d0\u53d6\u88e1\u9762\u7279\u5b9a\u6b04\u4f4d\u4f86\u7e6a\u88fd\u5716\u8868\u3002</p> <pre><code>import matplotlib.pyplot as plt\ndef analyze(context, perf):\n    ax1 = plt.subplot(211)\n    perf.portfolio_value.plot(ax=ax1,title='portfolio values')\n    ax2 = plt.subplot(212, sharex=ax1)\n    perf['TSMC'].plot(ax=ax2,title='TSMC close')\n    plt.gcf().set_size_inches(18, 8)\n    plt.show()\n</code></pre>"},{"location":"example/documents55/#run_algorithm","title":"Run_algorithm \u51fd\u5f0f","text":""},{"location":"example/documents55/#ziplinerun_algorithm","title":"zipline.run_algorithm","text":"<p>\u9032\u884c\u7b56\u7565\u56de\u6e2c\u3002</p>"},{"location":"example/documents55/#parameters_2","title":"Parameters:","text":"<ul> <li>start: pd.Timestamp or datetime         \u56de\u6e2c\u8d77\u59cb\u65e5\u671f\u3002</li> <li>end: pd.Timestamp or datetime         \u56de\u6e2c\u7d50\u675f\u65e5\u671f\u3002</li> <li>initialize: callable         \u547c\u53eb initialize \u51fd\u5f0f\u4ee5\u7528\u65bc\u56de\u6e2c\u3002</li> <li>capital_base: int         \u521d\u59cb\u8cc7\u91d1\u984d\u5ea6\u3002</li> <li>handle_data: callable, optional         \u547c\u53eb handle_data \u51fd\u5f0f\u4ee5\u7528\u65bc\u56de\u6e2c\u3002</li> <li>before_trading_start: callable, optional         \u547c\u53eb before_trading_start \u51fd\u5f0f\u4ee5\u7528\u65bc\u56de\u6e2c\u3002</li> <li>analyze: callable, optional         \u547c\u53eb analyze \u51fd\u5f0f\u4ee5\u7528\u65bc\u56de\u6e2c\u3002</li> <li>data_frequency: {\"daily\", \"minute\"}, optional         \u8a2d\u7f6e\u4ea4\u6613\u983b\u7387\u3002</li> <li>bundle: str, optional         \u8a2d\u7f6e\u56de\u6e2c\u7528\u7684 bundle\u3002</li> <li>trading_calendar: TradingCalendar, optional         \u8a2d\u7f6e\u4ea4\u6613\u65e5\u66c6\u3002</li> <li>benchmark_returns: pd.Series, optional         \u8a2d\u7f6e\u6307\u6a19\u5831\u916c\u7387\u3002</li> <li>treasury_returns: pd.Series, optional         \u8a2d\u7f6e\u7121\u98a8\u96aa\u5229\u7387\u3002</li> </ul>"},{"location":"example/documents55/#returns","title":"Returns:","text":"<p>Perf: pd.DataFrame, \u5167\u5efa\u6b04\u4f4d\u6709:</p> <ul> <li>benchmark_return\uff1a     \u7576\u65e5\u7684benchmark\u5831\u916c\u7387\uff0c\u82e5\u662f\u7531<code>set_benchmark()</code>\u8a2d\u5b9a\uff0c\u5247\u8a08\u7b97\u65b9\u5f0f\u70ba(\u7576\u65e5benchmark\u6536\u76e4\u50f9 / \u524d\u4e00\u65e5benchmark\u6536\u76e4\u50f9) - 1\u3002</li> <li>benchmark_period_return\uff1a     \u7d2f\u7a4d\u7684benchmark\u65e5\u5831\u916c\u7387\u3002\u8a08\u7b97\u65b9\u5f0f\uff1anp.nancumprod(1 + <code>benchmark_return</code> Series) - 1\u3002</li> <li>treasury_return\uff1a     \u7576\u65e5\u7684treasury\u5831\u916c\u7387\uff0c\u76f4\u63a5\u7531TEJ API\u63d0\u4f9b\u3002</li> <li>treasury_period_return\uff1a     \u7d2f\u7a4d\u7684treasury\u65e5\u5831\u916c\u7387\u3002\u8a08\u7b97\u65b9\u5f0f\uff1anp.nancumprod(1 + <code>treasury_return</code> Series) - 1\u3002</li> <li> <p>benchmark_volatility\uff1a     benchmark\u65e5\u5831\u916c\u7387\u7684\u5e74\u5316\u6ce2\u52d5\u7387\uff0c\u81f3\u5c11\u9700\u6709\u5169\u671f\u7684\u5831\u916c\u7387\u624d\u9032\u884c\u8a08\u7b97\u3002\u8a08\u7b97\u65b9\u5f0f\uff1a(<code>benchmark_return</code> Series).expanding(2).std(ddof=1) * np.sqrt(252)</p> </li> <li> <p>orders\uff1a\u986f\u793a\u4e0b\u55ae\u7d00\u9304     \u6bcf\u4e00\u7b46\u4e0b\u55ae\u7528\u4e00\u500b\u5b57\u5178\u7684\u65b9\u5f0f\u5448\u73fe\uff0c\u5176\u4e2d\uff1a</p> </li> <li>id\uff1a\u865b\u64ec\u55ae\u865f\u3002</li> <li>dt\uff1a\u4e0b\u55ae\u6642\u9593\u3002</li> <li>reason\uff1aNone, Hold, or Reject\uff08\u76ee\u524d\u4e0d\u9069\u7528\uff09</li> <li>created\uff1a\u5efa\u7acb\u6642\u9593\u3002</li> <li>amount\uff1a<ul> <li>\u4e0b\u55ae\u80a1\u6578\u3002</li> <li>\u82e5&gt;0\u8868\u793a\u8cb7\u9032\u6216\u56de\u88dc\uff0c&lt;0\u8868\u793a\u8ce3\u51fa\u6216\u653e\u7a7a\u3002</li> <li>\u82e5\u6709\u767c\u80a1\u7968\u80a1\u5229\u6216\u80a1\u7968\u5206\u5272\u7684\u60c5\u5f62\uff0c\u9664\u6b0a\u65e5\u7576\u5929\u6703\u66f4\u65b0\u4e4b\u524d\u672a\u6210\u4ea4\u8a02\u55ae\u7684amount\uff08new_amount = old_amount / ratio\uff0c\u5176\u4e2dratio = 1/\u50c5\u9664\u6b0a\u8abf\u6574\u4fc2\u6578\uff09\u3002</li> </ul> </li> <li> <p>filled\uff1a\u6210\u4ea4\u80a1\u6578\u3002</p> <ul> <li>\u8a3b\uff1aOrder execution - \u7576\u6f14\u7b97\u6cd5\u5728\u67d0\u4e00\u5929\u4e0b\u55ae\u6642\uff0c\u8a72\u8a02\u55ae\u6703\u5728\u4e0b\u4e00\u500b\u4ea4\u6613\u65e5\u6210\u4ea4\uff0c\u4ee5\u907f\u514dlookahead bias\u3002   </li> </ul> </li> <li> <p>commission\uff1a\u8a72\u7b46\u4ea4\u6613\u50ad\u91d1\u3002</p> </li> <li>stop\uff1a\u505c\u640d\u50f9\uff0c\u82e5\u6709\u767c\u80a1\u7968\u80a1\u5229\u6216\u80a1\u7968\u5206\u5272\u7684\u60c5\u5f62\uff0c\u9664\u6b0a\u65e5\u7576\u5929\u6703\u66f4\u65b0\u4e4b\u524d\u672a\u6210\u4ea4\u8a02\u55ae\u7684stop price\uff08new_stop = old_stop * ratio\uff0c\u5176\u4e2dratio = 1/\u50c5\u9664\u6b0a\u8abf\u6574\u4fc2\u6578\uff09\u3002</li> <li>limit\uff1a\u9650\u50f9\u50f9\uff0c\u82e5\u6709\u767c\u80a1\u7968\u80a1\u5229\u6216\u80a1\u7968\u5206\u5272\u7684\u60c5\u5f62\uff0c\u9664\u6b0a\u65e5\u7576\u5929\u6703\u66f4\u65b0\u4e4b\u524d\u672a\u6210\u4ea4\u8a02\u55ae\u7684limit price\uff08new_limit = old_limit * ratio\uff0c\u5176\u4e2dratio = 1/\u50c5\u9664\u6b0a\u8abf\u6574\u4fc2\u6578\uff09\u3002</li> <li>stop_reached\uff1a<ul> <li>\u5c0d\u65bcbuy stop order\uff0c\u82e5\u73fe\u50f9&gt;=stop price\uff0c\u5247\u986f\u793aTrue\u5426\u5247False\u3002</li> <li>\u5c0d\u65bcsell stop order\uff0c\u82e5\u73fe\u50f9&lt;=stop price\uff0c\u5247\u986f\u793aTrue\u5426\u5247False\u3002</li> </ul> </li> <li>limit_reached\uff1a<ul> <li>\u5c0d\u65bcbuy limit order\uff0c\u82e5\u73fe\u50f9&lt;=limit price\uff0c\u5247\u986f\u793aTrue\u5426\u5247False\u3002</li> <li>\u5c0d\u65bcsell limit order\uff0c\u82e5\u73fe\u50f9&gt;=limit price\uff0c\u5247\u986f\u793aTrue\u5426\u5247False\u3002</li> </ul> </li> <li>sid\uff08asset\uff09\uff1a\u4e0b\u55ae\u7684\u6a19\u7684\u3002</li> <li> <p>status\uff1a\u82e5=0\u8868\u793aOPEN\uff08\u672a\u5b8c\u5168\u6210\u4ea4\uff09\uff0c=1\u8868\u793aFILLED\uff08\u5b8c\u5168\u6210\u4ea4\uff09\uff0c=2\u8868\u793aCANCEL\uff08\u5df2\u53d6\u6d88\uff09\u3002</p> </li> <li> <p>transactions\uff1a\u986f\u793a\u4ea4\u6613\u7d00\u9304</p> </li> <li>amount\uff1a\u4e0b\u55ae\u80a1\u6578\u3002</li> <li>dt \uff1a \u4ea4\u6613\u6642\u9593\u3002</li> <li>price\uff1a\u6210\u4ea4\u50f9\uff08\u70ba\u8abf\u6574\u524d\u6536\u76e4\u50f9\uff0c\u4e0d\u8abf\u6574\u80a1\u606f\u3001\u5206\u5272\u3001\u80a1\u7968\u80a1\u5229\uff09\u3002</li> <li>order_id\uff1a\u55ae\u865f\uff0c\u53ef\u8207orders\u4e2d\u7684id\u6bd4\u5c0d\u3002</li> <li>sid\uff08asset\uff09\uff1a\u4e0b\u55ae\u7684\u6a19\u7684\u3002</li> <li> <p>commission\uff1a\u4e00\u5f8b\u70baNone\u3002\u50ad\u91d1\u8cc7\u6599\u5df2\u7d93\u5728'orders'\u5e95\u4e0b\u3002</p> </li> <li> <p>positions\uff1a\u986f\u793a\u6301\u6709\u90e8\u4f4d</p> </li> <li>sid\uff08asset\uff09\uff1a\u4e0b\u55ae\u7684\u6a19\u7684\u3002</li> <li>amount\uff1a\u8a72\u6a19\u7684\u7e3d\u6301\u6709\u80a1\u6578\u3002\u9664\u6b0a\u65e5\u7576\u5929amount\u6703\u9032\u884c\u8abf\u6574\uff08old_amount / ratio = new_amount\uff0c\u5176\u4e2dratio = 1/\u50c5\u9664\u6b0a\u8abf\u6574\u4fc2\u6578\uff09\u3002</li> <li>last_sale_price\uff1a\u6a19\u7684\u6700\u8fd1\u4e00\u7b46\u7684\u6536\u76e4\u50f9\u3002</li> <li>cost_basis\uff1a\u6bcf\u80a1\u5e73\u5747\u6210\u672c\uff08\u542bcommissions\uff09\u3002<ul> <li>\u8a08\u7b97\u65b9\u6cd5\u70ba\uff1asum(\u6210\u4ea4\u50f9 * (1+commission) * \u80a1\u6578) / \u7e3d\u80a1\u6578</li> <li>\u9664\u6b0a\u65e5\u7576\u5929cost_basis\u6703\u9032\u884c\u8abf\u6574\uff08old_cost_basis * ratio = new_cost_basis\uff0c\u5176\u4e2dratio = 1/\u50c5\u9664\u6b0a\u8abf\u6574\u4fc2\u6578\uff09\u3002</li> <li>\u5c0d\u65bc\u8cb7\u9032\u6216\u56de\u88dc\u4f86\u8aaa\uff0ccommissions\u6703\u9020\u6210cost_basis\u589e\u52a0\uff1b\u5c0d\u65bc\u8ce3\u51fa\u6216\u653e\u7a7a\u4f86\u8aaa\uff0ccommissions\u6703\u9020\u6210cost_basis\u6e1b\u5c11\u3002</li> </ul> </li> <li>longs_count\uff1a</li> <li>\u7576\u65e5\u5e33\u4e0a\u6709\u5e7e\u6a94\u9577\u90e8\u4f4d\u80a1\u7968\u3002\u53ef\u8207<code>positions</code>\u6bd4\u8f03\u3002</li> <li>shorts_count\uff1a</li> <li>\u7576\u65e5\u5e33\u4e0a\u6709\u5e7e\u6a94\u77ed\u90e8\u4f4d\u80a1\u7968\u3002\u53ef\u8207<code>positions</code>\u6bd4\u8f03\u3002</li> <li>long_exposure\uff08long_value\uff09\uff1a</li> <li>\u7576\u65e5\u5e33\u4e0a\u9577\u90e8\u4f4d\u7684\u5e02\u503c\u3002</li> <li>\u53ef\u8207<code>positions</code>\u6bd4\u8f03\u3002</li> <li>\u7576\u6295\u8cc7\u6a19\u7684\u70ba\u80a1\u7968\u6642<code>long_exposure</code>\u548c<code>long_value</code>\u5169\u6b04\u4f4d\u6578\u503c\u4e00\u81f4\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\u70basum(\u6301\u6709\u80a1\u6578 * \u6536\u76e4\u50f9) = sum(amount * last_sale_price)\uff0cwhere amount &gt; 0\u3002</li> <li>short_exposure\uff08short_value\uff09\uff1a</li> <li>\u7576\u65e5\u5e33\u4e0a\u77ed\u90e8\u4f4d\u7684\u5e02\u503c\u3002</li> <li>\u53ef\u8207<code>positions</code>\u6bd4\u8f03\u3002</li> <li>\u7576\u6295\u8cc7\u6a19\u7684\u70ba\u80a1\u7968\u6642<code>short_exposure</code>\u548c<code>short_value</code>\u5169\u6b04\u4f4d\u6578\u503c\u4e00\u81f4\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\u70basum(\u6301\u6709\u80a1\u6578 * \u6536\u76e4\u50f9) = sum(amount * last_sale_price)\uff0cwhere amount &lt; 0\u3002</li> <li>short_exposure\u5fc5\u7136 &lt;= 0\u3002</li> <li>ending_exposure\uff08ending_value\uff09\uff1a</li> <li>\u7576\u65e5\u7d50\u675f\u6642\u5e33\u4e0a\u90e8\u4f4d\u7684\u6de8\u5e02\u503c\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a<code>long_exposure</code> + <code>short_exposure</code></li> <li>starting_exposure\uff08starting_value\uff09\uff1a</li> <li>\u7576\u65e5\u958b\u59cb\u6642\u5e33\u4e0a\u90e8\u4f4d\u7684\u6de8\u5e02\u503c\u3002</li> <li>\u70ba\u524d\u4e00\u65e5\u7684<code>ending_exposure</code>\u3002</li> <li>gross_leverage\uff08leverage\uff09\uff1a</li> <li>Gross leverage is the sum of long and short leverage exposureper share divided by net asset value\uff08portfolio_value\uff09\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a\uff08<code>long_exposure</code> - <code>short_exposure</code>\uff09\uff0f<code>portfolio_value</code></li> <li>net_leverage\uff1a</li> <li>Net leverage is the net leverage exposure per share divided by net asset value\uff08portfolio_value\uff09\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a\uff08<code>long_exposure</code> + <code>short_exposure</code>\uff09\uff0f<code>portfolio_value</code></li> <li>capital_used\uff1a</li> <li>\u7576\u5929\u7684cash flow\u3002&gt;0\u8868\u793a\u6d41\u5165\uff0c&lt;0\u8868\u793a\u6d41\u51fa\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a<ul> <li>-1 * sum(<code>transaction.price</code> * <code>transaction.amount</code>) - sum(<code>order.commission</code>) + sum(earn_dividends) + sum(leftover_cash)</li> </ul> </li> <li> <p>\u8a3b\uff1a    </p> <ol> <li>earn_dividends\uff1a\u6703\u65bcpay_date\u7576\u5929\u914d\u767c\u3002</li> <li>leftover_cash\uff1a\u5206\u5272\u3001\u80a1\u7968\u80a1\u5229\u7b49\u539f\u56e0\u5c0e\u81f4\u80a1\u6578\u8b8a\u52d5\u6642\uff0c\u82e5\u6709&lt;1\u80a1(fractional_share_count)\u7121\u6cd5\u5206\u914d\u7684\u60c5\u6cc1\u6642\u5247\u8fd4\u56de\u73fe\u91d1\u3002</li> <li>leftover_cash\u7bc4\u4f8b\uff1a</li> <li>\u82e5\u73fe\u5728\u6301\u6709100\u80a1\uff08amount\uff09\uff0cratio=3\u3002</li> <li>\u65b0\u7684amount\u7406\u8ad6\u4e0a\u662f100/3=33.333\uff0c\u7136\u800c\u4e0d\u6eff\u4e00\u80a1\u7684\u90e8\u5206\u9700\u8f49\u63db\u6210\u73fe\u91d1 (return cash)\u3002</li> <li>\u6240\u4ee5\u65b0\u7684amount\u6703\u662f33\uff0c\u5269\u9918\u76840.333\u80a1\uff0833.333-33\uff09\u5c31\u662ffractional_share_count\u3002</li> <li>\u7531\u65bcratio=3\u4ee3\u8868\u8a72\u516c\u53f8\u80a1\u6578\u6709\u767c\u751f\u8b8a\u52d5\uff0c\u6240\u4ee5\u6bcf\u80a1\u5e73\u5747\u6210\u672c (cost basis)\u9700\u8abf\u6574=\u539fcost basis * \u539famount / \u65b0amount \u5f8c\u56db\u6368\u4e94\u5165\u5230\u5c0f\u6578\u7b2c\u4e8c\u4f4d\u3002</li> <li>\u6240\u4ee5\u9000\u56de\u73fe\u91d1(return cash)=(fractional_share_count) * (\u65b0cost basis) \u518d\u56db\u6368\u4e94\u5165\u5230\u5c0f\u6578\u7b2c\u4e8c\u4f4d</li> </ol> </li> <li> <p>ending_cash\uff1a</p> </li> <li>\u7576\u65e5\u7d50\u675f\u6642\u5e33\u4e0a\u6301\u6709\u73fe\u91d1\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a<code>starting_cash</code>+<code>capital_used</code></li> <li>starting_cash\uff1a</li> <li>\u7576\u65e5\u958b\u59cb\u6642\u5e33\u4e0a\u6301\u6709\u73fe\u91d1\u3002</li> <li>\u70ba\u524d\u4e00\u65e5\u7684<code>ending_cash</code>+sum(earn_dividends)\uff0c\u82e5\u7121\u524d\u4e00\u65e5\u5247\u70ba<code>capital_base</code>\u3002</li> <li>pnl\uff1a</li> <li>\u7576\u65e5\u6295\u8cc7\u7d44\u5408\u640d\u76ca\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a(<code>ending_exposure</code> + <code>ending_cash</code>) - (<code>starting_exposure</code> + <code>starting_cash</code>)\u3002</li> <li>returns\uff1a</li> <li>\u7576\u65e5\u5831\u916c\u7387\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a(\u7576\u65e5<code>portfolio_value</code>) / (\u524d\u4e00\u65e5<code>portfolio_value</code>) - 1\u3002</li> <li>\u5b58\u5728\u5c3e\u5dee\u3002</li> <li>portfolio_value\uff1a</li> <li>\u5373net asset value\uff0c\u7576\u65e5\u6295\u8cc7\u7d44\u5408\u7e3d\u50f9\u503c\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a(<code>ending_exposure</code> + <code>ending_cash</code>)</li> <li>algorithm_period_return\uff1a</li> <li>\u6295\u8cc7\u7d44\u5408\u7d2f\u7a4d\u65e5\u5831\u916c\u7387\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a( 1 + \u524d\u4e00\u65e5\u7684<code>algorithm_period_return</code>) * ( 1 + \u7576\u65e5<code>returns</code>) - 1\u3002</li> <li>\u5b58\u5728\u5c3e\u5dee\u3002</li> <li>algo_volatility\uff1a</li> <li>\u6295\u8cc7\u7d44\u5408\u65e5\u5831\u916c\u7387\u7684\u5e74\u5316\u6ce2\u52d5\u7387\uff0c\u81f3\u5c11\u9700\u6709\u5169\u671f\u7684\u5831\u916c\u7387\u624d\u9032\u884c\u8a08\u7b97\u3002</li> <li>\u5229\u7528empyrical\u5957\u4ef6\u8a08\u7b97\uff1a      empyrical.annual_volatility(<code>returns</code>Series, period='daily', alpha=2.0, annualization=None)\u3002</li> <li>\u5177\u9ad4\u4f86\u8aaa\uff0cempyrical\u5957\u4ef6\u7684\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a<code>returns</code>Series.std(ddof=1) * (252 ** (1 / 2))\uff0cstd\u70ba\u6a23\u672c\u6a19\u6e96\u5dee\u3002</li> <li>\u7528\u5b8c\u6574<code>returns</code>\u8cc7\u6599\uff0c\u5247\u6703\u56de\u50b3\u6700\u5f8c\u4e00\u65e5algo_volatility\uff0c\u82e5\u6263\u6389\u6700\u5f8c\u4e00\u65e5<code>returns</code>\uff0c\u5247\u56de\u50b3\u5012\u6578\u7b2c\u4e8c\u65e5\uff0c\u4ee5\u6b64\u985e\u63a8\u3002  </li> <li>excess_return\uff1a</li> <li>\u6295\u8cc7\u7d44\u5408\u7d2f\u7a4d\u8d85\u984d\u65e5\u5831\u916c\uff08\u76f8\u5c0d\u65bc<code>benchmark_period_return</code>\uff09\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a(<code>algorithm_period_return</code> - <code>benchmark_period_return</code>)\u3002</li> <li>max_drawdown\uff1a</li> <li>\u6295\u8cc7\u7d44\u5408\u7d2f\u7a4d\u5831\u916c\u7387\u5f9e\u904e\u53bb\u7684\u5cf0\u503c\u4e0b\u8dcc\u7684\u6700\u5927\u8dcc\u5e45\u767e\u5206\u6bd4\u3002</li> <li>\u5229\u7528empyrical\u5957\u4ef6\u8a08\u7b97\uff1aempyrical.max_drawdown(<code>returns</code> Series)\u3002</li> <li>\u5177\u9ad4\u4f86\u8aaa\uff0cempyrical\u5957\u4ef6\u7684\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a<ul> <li>cumulative_returns\uff1a\u5148\u8a08\u7b97\u904e\u53bb\u6bcf\u4e00\u65e5\u7684\u7d2f\u7a4d\u5831\u916c\u3002</li> <li>previous_peaks\uff1a\u8a08\u7b97\u904e\u53bb\u7d2f\u7a4d\u5831\u916c\u7387\u7684\u6700\u5927\u503c\u3002</li> <li>daily_drawdown\uff1a\u8a08\u7b97\u6bcf\u65e5\u56de\u64a4 = (cumulative_returns - previous_peaks) / previous_peaks</li> <li>max_drawdown\uff1a\u904e\u53bb\u6bcf\u4e00\u65e5\u7684daily_drawdown\u53d6\u6975\u5c0f\u503c\u3002</li> </ul> </li> <li>sharpe\uff1a</li> <li>\u5e74\u5316\u590f\u666e\u6bd4\u7387\uff0c\u8861\u91cf\u6bcf\u627f\u64d41\u55ae\u4f4d\u98a8\u96aa\uff0c\u53ef\u4ee5\u7372\u53d6\u591a\u5c11\u7684\u5831\u916c\u3002</li> <li>\u5229\u7528empyrical\u5957\u4ef6\u8a08\u7b97\uff1aempyrical.sharpe_ratio(<code>returns</code> Series, risk_free=0)\u3002</li> <li>\u5177\u9ad4\u4f86\u8aaa\uff0cempyrical\u5957\u4ef6\u7684\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a     np.mean(<code>returns</code> Series) / np.std(<code>returns</code> Series,ddof=1) * np.sqrt(252)</li> <li>sortino\uff1a   </li> <li>\u5e74\u5316\u7d22\u63d0\u8afe\u6bd4\u7387\uff0c\u8861\u91cf\u627f\u64d4\u55ae\u4f4d\u4e0b\u65b9\u98a8\u96aa\uff0c\u53ef\u4ee5\u7372\u53d6\u591a\u5c11\u7684\u5831\u916c\u3002</li> <li>\u5229\u7528empyrical\u5957\u4ef6\u8a08\u7b97\uff1aempyrical.sortino_ratio(<code>returns</code> Series, required_return=0)\u3002</li> <li>\u5177\u9ad4\u4f86\u8aaa\uff0cempyrical\u5957\u4ef6\u7684\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a<ul> <li>\u8a08\u7b97downside_risk\uff1anp.sqrt(np.nanmean(np.square(downside_return))) * np.sqrt(252)\uff0c\u5176\u4e2ddownside_return\u5c07<code>returns</code> Series\u4e2d&gt;0\u7684\u6578\u503c\u66ff\u63db\u62100\u3002</li> <li>\u8a08\u7b97mean_return\uff1anp.nanmean(<code>returns</code> Series)</li> <li>\u8a08\u7b97sortino_ratio =  mean_return / downside_risk * 252\u3002</li> </ul> </li> <li> <p>\u5b58\u5728\u5c3e\u5dee\u3002</p> </li> <li> <p>alpha\uff1a</p> </li> <li>\u5e74\u5316alpha\uff0c\u8861\u91cf\u6295\u8cc7\u7d44\u5408\u5275\u9020\u8d85\u984d\u5831\u916c\u7684\u80fd\u529b\u3002</li> <li>\u5229\u7528empyrical\u5957\u4ef6\u8a08\u7b97\uff1aempyrical.alpha_beta_aligned(returns=<code>returns</code>Series, factor_returns=<code>benchmark_return</code> Series,risk_free=0.0)</li> <li>\u5177\u9ad4\u4f86\u8aaa\uff0cempyrical\u5957\u4ef6\u7684\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a<ul> <li>\u8a08\u7b97alpha_series\uff1a<code>returns</code> Series - (\u7576\u65e5<code>beta</code> * <code>benchmark_return</code> Series)</li> <li>\u8a08\u7b97\u5e73\u5747alpha\uff1ananmean(alpha_series)</li> <li>\u8a08\u7b97\u5e74\u5316alpha\uff1a(\u5e73\u5747alpha + 1) ^ 252 -1  </li> </ul> </li> <li>beta\uff1a    </li> <li>\u8861\u91cf\u6295\u8cc7\u7d44\u5408\u76f8\u5c0d\u65bc\u6574\u9ad4\u5e02\u5834\u7684\u6ce2\u52d5\u6027\u3002</li> <li>\u5229\u7528empyrical\u5957\u4ef6\u8a08\u7b97\uff1aempyrical.alpha_beta_aligned(returns=<code>returns</code>Series, factor_returns=<code>benchmark_return</code> Series,risk_free=0.0)</li> <li>\u5177\u9ad4\u4f86\u8aaa\uff0cempyrical\u5957\u4ef6\u7684\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a     Cov(<code>benchmark_return</code> Series, <code>returns</code> Series) / Var(<code>benchmark_return</code> Series)</li> </ul> <pre><code>from zipline import run_algorithm\nimport pandas as pd \n\nstart_date = pd.Timestamp('2018-12-30',tz='utc')\nend_date = pd.Timestamp('2023-05-26',tz='utc')\n\nresults = run_algorithm(start= start_date,  \n                       end=end_date,\n                       initialize=initialize,                       \n                       capital_base=1e6,                       \n                       analyze=analyze,\n                       handle_data=handle_data,\n                       data_frequency='daily',\n                       bundle='tquant'\n                       )\n</code></pre> <pre><code>results\n</code></pre> period_open period_close short_value long_exposure benchmark_return treasury_return pnl short_exposure capital_used returns ... treasury_period_return algorithm_period_return alpha beta sharpe sortino max_drawdown max_leverage trading_days period_label 2019-01-02 13:30:00+08:00 2019-01-02 09:01:00+08:00 2019-01-02 13:30:00+08:00 0.0 0.0 0.0 0.0 0.00 0.0 0.00 0.000000 ... 0.0 0.000000 None None NaN NaN 0.000000 0.000000 1 2019-01 2019-01-03 13:30:00+08:00 2019-01-03 09:01:00+08:00 2019-01-03 13:30:00+08:00 0.0 215500.0 0.0 0.0 -2.85 0.0 -215502.85 -0.000003 ... 0.0 -0.000003 None None -11.224972 -11.224972 -0.000003 0.215501 2 2019-01 2019-01-04 13:30:00+08:00 2019-01-04 09:01:00+08:00 2019-01-04 13:30:00+08:00 0.0 208000.0 0.0 0.0 -7500.00 0.0 0.00 -0.007500 ... 0.0 -0.007503 None None -9.170376 -9.168633 -0.007503 0.215501 3 2019-01 2019-01-07 13:30:00+08:00 2019-01-07 09:01:00+08:00 2019-01-07 13:30:00+08:00 0.0 213000.0 0.0 0.0 5000.00 0.0 0.00 0.005038 ... 0.0 -0.002503 None None -1.893153 -2.608781 -0.007503 0.215501 4 2019-01 2019-01-08 13:30:00+08:00 2019-01-08 09:01:00+08:00 2019-01-08 13:30:00+08:00 0.0 211000.0 0.0 0.0 -2000.00 0.0 0.00 -0.002005 ... 0.0 -0.004503 None None -3.141155 -4.087705 -0.007503 0.215501 5 2019-01 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 2023-05-22 13:30:00+08:00 2023-05-22 09:01:00+08:00 2023-05-22 13:30:00+08:00 0.0 531000.0 0.0 0.0 -1000.00 0.0 0.00 -0.000734 ... 0.0 0.362247 None None 0.816172 1.250657 -0.202433 0.455182 1063 2023-05 2023-05-23 13:30:00+08:00 2023-05-23 09:01:00+08:00 2023-05-23 13:30:00+08:00 0.0 530000.0 0.0 0.0 -1000.00 0.0 0.00 -0.000734 ... 0.0 0.361247 None None 0.813954 1.247253 -0.202433 0.455182 1064 2023-05 2023-05-24 13:30:00+08:00 2023-05-24 09:01:00+08:00 2023-05-24 13:30:00+08:00 0.0 525000.0 0.0 0.0 -5000.00 0.0 0.00 -0.003673 ... 0.0 0.356247 None None 0.804283 1.232180 -0.202433 0.455182 1065 2023-05 2023-05-25 13:30:00+08:00 2023-05-25 09:01:00+08:00 2023-05-25 13:30:00+08:00 0.0 543000.0 0.0 0.0 18000.00 0.0 0.00 0.013272 ... 0.0 0.374247 None None 0.835019 1.282067 -0.202433 0.455182 1066 2023-05 2023-05-26 13:30:00+08:00 2023-05-26 09:01:00+08:00 2023-05-26 13:30:00+08:00 0.0 566000.0 0.0 0.0 23000.00 0.0 0.00 0.016736 ... 0.0 0.397247 None None 0.873009 1.345075 -0.202433 0.455182 1067 2023-05 <p>1067 rows \u00d7 42 columns</p> <p>\u6211\u5011\u53ef\u4ee5\u767c\u73fe\u4e4b\u524d\u4f7f\u7528 <code>order</code> \u7d00\u9304\u7684 trade_days, has_ordered \u8207 TSMC \u78ba\u5be6\u4ee5\u6b04\u4f4d\u578b\u5f0f\u8a18\u9304\u5728 results \u8868\u4e2d\u3002 </p> <pre><code>results[['trade_days','has_ordered','TSMC']]\n</code></pre> trade_days has_ordered TSMC 2019-01-02 13:30:00+08:00 1 True 219.5 2019-01-03 13:30:00+08:00 2 True 215.5 2019-01-04 13:30:00+08:00 3 True 208.0 2019-01-07 13:30:00+08:00 4 True 213.0 2019-01-08 13:30:00+08:00 5 True 211.0 ... ... ... ... 2023-05-22 13:30:00+08:00 1063 True 531.0 2023-05-23 13:30:00+08:00 1064 True 530.0 2023-05-24 13:30:00+08:00 1065 True 525.0 2023-05-25 13:30:00+08:00 1066 True 543.0 2023-05-26 13:30:00+08:00 1067 True 566.0 <p>1067 rows \u00d7 3 columns</p> <pre><code>\n</code></pre>"},{"location":"example/documents55/#run_algorithm_1","title":"Run_algorithm \u51fd\u5f0f","text":""},{"location":"example/documents55/#ziplinerun_algorithm_1","title":"zipline.run_algorithm","text":"<p>\u9032\u884c\u7b56\u7565\u56de\u6e2c\u3002</p>"},{"location":"example/documents55/#parameters_3","title":"Parameters:","text":"<ul> <li>start: pd.Timestamp or datetime         \u56de\u6e2c\u8d77\u59cb\u65e5\u671f\u3002</li> <li>end: pd.Timestamp or datetime         \u56de\u6e2c\u7d50\u675f\u65e5\u671f\u3002</li> <li>initialize: callable         \u547c\u53eb initialize \u51fd\u5f0f\u4ee5\u7528\u65bc\u56de\u6e2c\u3002</li> <li>capital_base: int         \u521d\u59cb\u8cc7\u91d1\u984d\u5ea6\u3002</li> <li>handle_data: callable, optional         \u547c\u53eb handle_data \u51fd\u5f0f\u4ee5\u7528\u65bc\u56de\u6e2c\u3002</li> <li>before_trading_start: callable, optional         \u547c\u53eb before_trading_start \u51fd\u5f0f\u4ee5\u7528\u65bc\u56de\u6e2c\u3002</li> <li>analyze: callable, optional         \u547c\u53eb analyze \u51fd\u5f0f\u4ee5\u7528\u65bc\u56de\u6e2c\u3002</li> <li>data_frequency: {\"daily\", \"minute\"}, optional         \u8a2d\u7f6e\u4ea4\u6613\u983b\u7387\u3002</li> <li>bundle: str, optional         \u8a2d\u7f6e\u56de\u6e2c\u7528\u7684 bundle\u3002</li> <li>trading_calendar: TradingCalendar, optional         \u8a2d\u7f6e\u4ea4\u6613\u65e5\u66c6\u3002</li> <li>benchmark_returns: pd.Series, optional         \u8a2d\u7f6e\u6307\u6a19\u5831\u916c\u7387\u3002</li> <li>treasury_returns: pd.Series, optional         \u8a2d\u7f6e\u7121\u98a8\u96aa\u5229\u7387\u3002</li> </ul>"},{"location":"example/documents55/#returns_1","title":"Returns:","text":"<p>Perf: pd.DataFrame, \u5167\u5efa\u6b04\u4f4d\u6709:</p> <ul> <li>benchmark_return\uff1a     \u7576\u65e5\u7684benchmark\u5831\u916c\u7387\uff0c\u82e5\u662f\u7531<code>set_benchmark()</code>\u8a2d\u5b9a\uff0c\u5247\u8a08\u7b97\u65b9\u5f0f\u70ba(\u7576\u65e5benchmark\u6536\u76e4\u50f9 / \u524d\u4e00\u65e5benchmark\u6536\u76e4\u50f9) - 1\u3002</li> <li>benchmark_period_return\uff1a     \u7d2f\u7a4d\u7684benchmark\u65e5\u5831\u916c\u7387\u3002\u8a08\u7b97\u65b9\u5f0f\uff1anp.nancumprod(1 + <code>benchmark_return</code> Series) - 1\u3002</li> <li>treasury_return\uff1a     \u7576\u65e5\u7684treasury\u5831\u916c\u7387\uff0c\u76f4\u63a5\u7531TEJ API\u63d0\u4f9b\u3002</li> <li>treasury_period_return\uff1a     \u7d2f\u7a4d\u7684treasury\u65e5\u5831\u916c\u7387\u3002\u8a08\u7b97\u65b9\u5f0f\uff1anp.nancumprod(1 + <code>treasury_return</code> Series) - 1\u3002</li> <li> <p>benchmark_volatility\uff1a     benchmark\u65e5\u5831\u916c\u7387\u7684\u5e74\u5316\u6ce2\u52d5\u7387\uff0c\u81f3\u5c11\u9700\u6709\u5169\u671f\u7684\u5831\u916c\u7387\u624d\u9032\u884c\u8a08\u7b97\u3002\u8a08\u7b97\u65b9\u5f0f\uff1a(<code>benchmark_return</code> Series).expanding(2).std(ddof=1) * np.sqrt(252)</p> </li> <li> <p>orders\uff1a\u986f\u793a\u4e0b\u55ae\u7d00\u9304     \u6bcf\u4e00\u7b46\u4e0b\u55ae\u7528\u4e00\u500b\u5b57\u5178\u7684\u65b9\u5f0f\u5448\u73fe\uff0c\u5176\u4e2d\uff1a</p> </li> <li>id\uff1a\u865b\u64ec\u55ae\u865f\u3002</li> <li>dt\uff1a\u4e0b\u55ae\u6642\u9593\u3002</li> <li>reason\uff1aNone, Hold, or Reject\uff08\u76ee\u524d\u4e0d\u9069\u7528\uff09</li> <li>created\uff1a\u5efa\u7acb\u6642\u9593\u3002</li> <li>amount\uff1a<ul> <li>\u4e0b\u55ae\u80a1\u6578\u3002</li> <li>\u82e5&gt;0\u8868\u793a\u8cb7\u9032\u6216\u56de\u88dc\uff0c&lt;0\u8868\u793a\u8ce3\u51fa\u6216\u653e\u7a7a\u3002</li> <li>\u82e5\u6709\u767c\u80a1\u7968\u80a1\u5229\u6216\u80a1\u7968\u5206\u5272\u7684\u60c5\u5f62\uff0c\u9664\u6b0a\u65e5\u7576\u5929\u6703\u66f4\u65b0\u4e4b\u524d\u672a\u6210\u4ea4\u8a02\u55ae\u7684amount\uff08new_amount = old_amount / ratio\uff0c\u5176\u4e2dratio = 1/\u50c5\u9664\u6b0a\u8abf\u6574\u4fc2\u6578\uff09\u3002</li> </ul> </li> <li> <p>filled\uff1a\u6210\u4ea4\u80a1\u6578\u3002</p> <ul> <li>\u8a3b\uff1aOrder execution - \u7576\u6f14\u7b97\u6cd5\u5728\u67d0\u4e00\u5929\u4e0b\u55ae\u6642\uff0c\u8a72\u8a02\u55ae\u6703\u5728\u4e0b\u4e00\u500b\u4ea4\u6613\u65e5\u6210\u4ea4\uff0c\u4ee5\u907f\u514dlookahead bias\u3002   </li> </ul> </li> <li> <p>commission\uff1a\u8a72\u7b46\u4ea4\u6613\u50ad\u91d1\u3002</p> </li> <li>stop\uff1a\u505c\u640d\u50f9\uff0c\u82e5\u6709\u767c\u80a1\u7968\u80a1\u5229\u6216\u80a1\u7968\u5206\u5272\u7684\u60c5\u5f62\uff0c\u9664\u6b0a\u65e5\u7576\u5929\u6703\u66f4\u65b0\u4e4b\u524d\u672a\u6210\u4ea4\u8a02\u55ae\u7684stop price\uff08new_stop = old_stop * ratio\uff0c\u5176\u4e2dratio = 1/\u50c5\u9664\u6b0a\u8abf\u6574\u4fc2\u6578\uff09\u3002</li> <li>limit\uff1a\u9650\u50f9\u50f9\uff0c\u82e5\u6709\u767c\u80a1\u7968\u80a1\u5229\u6216\u80a1\u7968\u5206\u5272\u7684\u60c5\u5f62\uff0c\u9664\u6b0a\u65e5\u7576\u5929\u6703\u66f4\u65b0\u4e4b\u524d\u672a\u6210\u4ea4\u8a02\u55ae\u7684limit price\uff08new_limit = old_limit * ratio\uff0c\u5176\u4e2dratio = 1/\u50c5\u9664\u6b0a\u8abf\u6574\u4fc2\u6578\uff09\u3002</li> <li>stop_reached\uff1a<ul> <li>\u5c0d\u65bcbuy stop order\uff0c\u82e5\u73fe\u50f9&gt;=stop price\uff0c\u5247\u986f\u793aTrue\u5426\u5247False\u3002</li> <li>\u5c0d\u65bcsell stop order\uff0c\u82e5\u73fe\u50f9&lt;=stop price\uff0c\u5247\u986f\u793aTrue\u5426\u5247False\u3002</li> </ul> </li> <li>limit_reached\uff1a<ul> <li>\u5c0d\u65bcbuy limit order\uff0c\u82e5\u73fe\u50f9&lt;=limit price\uff0c\u5247\u986f\u793aTrue\u5426\u5247False\u3002</li> <li>\u5c0d\u65bcsell limit order\uff0c\u82e5\u73fe\u50f9&gt;=limit price\uff0c\u5247\u986f\u793aTrue\u5426\u5247False\u3002</li> </ul> </li> <li>sid\uff08asset\uff09\uff1a\u4e0b\u55ae\u7684\u6a19\u7684\u3002</li> <li> <p>status\uff1a\u82e5=0\u8868\u793aOPEN\uff08\u672a\u5b8c\u5168\u6210\u4ea4\uff09\uff0c=1\u8868\u793aFILLED\uff08\u5b8c\u5168\u6210\u4ea4\uff09\uff0c=2\u8868\u793aCANCEL\uff08\u5df2\u53d6\u6d88\uff09\u3002</p> </li> <li> <p>transactions\uff1a\u986f\u793a\u4ea4\u6613\u7d00\u9304</p> </li> <li>amount\uff1a\u4e0b\u55ae\u80a1\u6578\u3002</li> <li>dt \uff1a \u4ea4\u6613\u6642\u9593\u3002</li> <li>price\uff1a\u6210\u4ea4\u50f9\uff08\u70ba\u8abf\u6574\u524d\u6536\u76e4\u50f9\uff0c\u4e0d\u8abf\u6574\u80a1\u606f\u3001\u5206\u5272\u3001\u80a1\u7968\u80a1\u5229\uff09\u3002</li> <li>order_id\uff1a\u55ae\u865f\uff0c\u53ef\u8207orders\u4e2d\u7684id\u6bd4\u5c0d\u3002</li> <li>sid\uff08asset\uff09\uff1a\u4e0b\u55ae\u7684\u6a19\u7684\u3002</li> <li> <p>commission\uff1a\u4e00\u5f8b\u70baNone\u3002\u50ad\u91d1\u8cc7\u6599\u5df2\u7d93\u5728'orders'\u5e95\u4e0b\u3002</p> </li> <li> <p>positions\uff1a\u986f\u793a\u6301\u6709\u90e8\u4f4d</p> </li> <li>sid\uff08asset\uff09\uff1a\u4e0b\u55ae\u7684\u6a19\u7684\u3002</li> <li>amount\uff1a\u8a72\u6a19\u7684\u7e3d\u6301\u6709\u80a1\u6578\u3002\u9664\u6b0a\u65e5\u7576\u5929amount\u6703\u9032\u884c\u8abf\u6574\uff08old_amount / ratio = new_amount\uff0c\u5176\u4e2dratio = 1/\u50c5\u9664\u6b0a\u8abf\u6574\u4fc2\u6578\uff09\u3002</li> <li>last_sale_price\uff1a\u6a19\u7684\u6700\u8fd1\u4e00\u7b46\u7684\u6536\u76e4\u50f9\u3002</li> <li>cost_basis\uff1a\u6bcf\u80a1\u5e73\u5747\u6210\u672c\uff08\u542bcommissions\uff09\u3002<ul> <li>\u8a08\u7b97\u65b9\u6cd5\u70ba\uff1asum(\u6210\u4ea4\u50f9 * (1+commission) * \u80a1\u6578) / \u7e3d\u80a1\u6578</li> <li>\u9664\u6b0a\u65e5\u7576\u5929cost_basis\u6703\u9032\u884c\u8abf\u6574\uff08old_cost_basis * ratio = new_cost_basis\uff0c\u5176\u4e2dratio = 1/\u50c5\u9664\u6b0a\u8abf\u6574\u4fc2\u6578\uff09\u3002</li> <li>\u5c0d\u65bc\u8cb7\u9032\u6216\u56de\u88dc\u4f86\u8aaa\uff0ccommissions\u6703\u9020\u6210cost_basis\u589e\u52a0\uff1b\u5c0d\u65bc\u8ce3\u51fa\u6216\u653e\u7a7a\u4f86\u8aaa\uff0ccommissions\u6703\u9020\u6210cost_basis\u6e1b\u5c11\u3002</li> </ul> </li> <li>longs_count\uff1a</li> <li>\u7576\u65e5\u5e33\u4e0a\u6709\u5e7e\u6a94\u9577\u90e8\u4f4d\u80a1\u7968\u3002\u53ef\u8207<code>positions</code>\u6bd4\u8f03\u3002</li> <li>shorts_count\uff1a</li> <li>\u7576\u65e5\u5e33\u4e0a\u6709\u5e7e\u6a94\u77ed\u90e8\u4f4d\u80a1\u7968\u3002\u53ef\u8207<code>positions</code>\u6bd4\u8f03\u3002</li> <li>long_exposure\uff08long_value\uff09\uff1a</li> <li>\u7576\u65e5\u5e33\u4e0a\u9577\u90e8\u4f4d\u7684\u5e02\u503c\u3002</li> <li>\u53ef\u8207<code>positions</code>\u6bd4\u8f03\u3002</li> <li>\u7576\u6295\u8cc7\u6a19\u7684\u70ba\u80a1\u7968\u6642<code>long_exposure</code>\u548c<code>long_value</code>\u5169\u6b04\u4f4d\u6578\u503c\u4e00\u81f4\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\u70basum(\u6301\u6709\u80a1\u6578 * \u6536\u76e4\u50f9) = sum(amount * last_sale_price)\uff0cwhere amount &gt; 0\u3002</li> <li>short_exposure\uff08short_value\uff09\uff1a</li> <li>\u7576\u65e5\u5e33\u4e0a\u77ed\u90e8\u4f4d\u7684\u5e02\u503c\u3002</li> <li>\u53ef\u8207<code>positions</code>\u6bd4\u8f03\u3002</li> <li>\u7576\u6295\u8cc7\u6a19\u7684\u70ba\u80a1\u7968\u6642<code>short_exposure</code>\u548c<code>short_value</code>\u5169\u6b04\u4f4d\u6578\u503c\u4e00\u81f4\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\u70basum(\u6301\u6709\u80a1\u6578 * \u6536\u76e4\u50f9) = sum(amount * last_sale_price)\uff0cwhere amount &lt; 0\u3002</li> <li>short_exposure\u5fc5\u7136 &lt;= 0\u3002</li> <li>ending_exposure\uff08ending_value\uff09\uff1a</li> <li>\u7576\u65e5\u7d50\u675f\u6642\u5e33\u4e0a\u90e8\u4f4d\u7684\u6de8\u5e02\u503c\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a<code>long_exposure</code> + <code>short_exposure</code></li> <li>starting_exposure\uff08starting_value\uff09\uff1a</li> <li>\u7576\u65e5\u958b\u59cb\u6642\u5e33\u4e0a\u90e8\u4f4d\u7684\u6de8\u5e02\u503c\u3002</li> <li>\u70ba\u524d\u4e00\u65e5\u7684<code>ending_exposure</code>\u3002</li> <li>gross_leverage\uff08leverage\uff09\uff1a</li> <li>Gross leverage is the sum of long and short leverage exposure per share divided by net asset value\uff08portfolio_value\uff09\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a\uff08<code>long_exposure</code> - <code>short_exposure</code>\uff09\uff0f<code>portfolio_value</code></li> <li>net_leverage\uff1a</li> <li>Net leverage is the net leverage exposure per share divided by net asset value\uff08portfolio_value\uff09\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a\uff08<code>long_exposure</code> + <code>short_exposure</code>\uff09\uff0f<code>portfolio_value</code></li> <li>capital_used\uff1a</li> <li>\u7576\u5929\u7684cash flow\u3002&gt;0\u8868\u793a\u6d41\u5165\uff0c&lt;0\u8868\u793a\u6d41\u51fa\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a<ul> <li>-1 * sum(<code>transaction.price</code> * <code>transaction.amount</code>) - sum(<code>order.commission</code>) + sum(earn_dividends) + sum(leftover_cash)</li> </ul> </li> <li> <p>\u8a3b\uff1a    </p> <ol> <li>earn_dividends\uff1a\u6703\u65bcpay_date\u7576\u5929\u914d\u767c\u3002</li> <li>leftover_cash\uff1a\u5206\u5272\u3001\u80a1\u7968\u80a1\u5229\u7b49\u539f\u56e0\u5c0e\u81f4\u80a1\u6578\u8b8a\u52d5\u6642\uff0c\u82e5\u6709&lt;1\u80a1(fractional_share_count)\u7121\u6cd5\u5206\u914d\u7684\u60c5\u6cc1\u6642\u5247\u8fd4\u56de\u73fe\u91d1\u3002</li> <li>leftover_cash\u7bc4\u4f8b\uff1a</li> <li>\u82e5\u73fe\u5728\u6301\u6709100\u80a1\uff08amount\uff09\uff0cratio=3\u3002</li> <li>\u65b0\u7684amount\u7406\u8ad6\u4e0a\u662f100/3=33.333\uff0c\u7136\u800c\u4e0d\u6eff\u4e00\u80a1\u7684\u90e8\u5206\u9700\u8f49\u63db\u6210\u73fe\u91d1 (return cash)\u3002</li> <li>\u6240\u4ee5\u65b0\u7684amount\u6703\u662f33\uff0c\u5269\u9918\u76840.333\u80a1\uff0833.333-33\uff09\u5c31\u662ffractional_share_count\u3002</li> <li>\u7531\u65bcratio=3\u4ee3\u8868\u8a72\u516c\u53f8\u80a1\u6578\u6709\u767c\u751f\u8b8a\u52d5\uff0c\u6240\u4ee5\u6bcf\u80a1\u5e73\u5747\u6210\u672c (cost basis)\u9700\u8abf\u6574=\u539fcost basis * \u539famount / \u65b0amount \u5f8c\u56db\u6368\u4e94\u5165\u5230\u5c0f\u6578\u7b2c\u4e8c\u4f4d\u3002</li> <li>\u6240\u4ee5\u9000\u56de\u73fe\u91d1(return cash)=(fractional_share_count) * (\u65b0cost basis) \u518d\u56db\u6368\u4e94\u5165\u5230\u5c0f\u6578\u7b2c\u4e8c\u4f4d</li> </ol> </li> <li> <p>ending_cash\uff1a</p> </li> <li>\u7576\u65e5\u7d50\u675f\u6642\u5e33\u4e0a\u6301\u6709\u73fe\u91d1\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a<code>starting_cash</code>+<code>capital_used</code></li> <li>starting_cash\uff1a</li> <li>\u7576\u65e5\u958b\u59cb\u6642\u5e33\u4e0a\u6301\u6709\u73fe\u91d1\u3002</li> <li>\u70ba\u524d\u4e00\u65e5\u7684<code>ending_cash</code>+sum(earn_dividends)\uff0c\u82e5\u7121\u524d\u4e00\u65e5\u5247\u70ba<code>capital_base</code>\u3002</li> <li>pnl\uff1a</li> <li>\u7576\u65e5\u6295\u8cc7\u7d44\u5408\u640d\u76ca\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a(<code>ending_exposure</code> + <code>ending_cash</code>) - (<code>starting_exposure</code> + <code>starting_cash</code>)\u3002</li> <li>returns\uff1a</li> <li>\u7576\u65e5\u5831\u916c\u7387\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a(\u7576\u65e5<code>portfolio_value</code>) / (\u524d\u4e00\u65e5<code>portfolio_value</code>) - 1\u3002</li> <li>\u5b58\u5728\u5c3e\u5dee\u3002</li> <li>portfolio_value\uff1a</li> <li>\u5373net asset value\uff0c\u7576\u65e5\u6295\u8cc7\u7d44\u5408\u7e3d\u50f9\u503c\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a(<code>ending_exposure</code> + <code>ending_cash</code>)</li> <li>algorithm_period_return\uff1a</li> <li>\u6295\u8cc7\u7d44\u5408\u7d2f\u7a4d\u65e5\u5831\u916c\u7387\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a( 1 + \u524d\u4e00\u65e5\u7684<code>algorithm_period_return</code>) * ( 1 + \u7576\u65e5<code>returns</code>) - 1\u3002</li> <li>\u5b58\u5728\u5c3e\u5dee\u3002</li> <li>algo_volatility\uff1a</li> <li>\u6295\u8cc7\u7d44\u5408\u65e5\u5831\u916c\u7387\u7684\u5e74\u5316\u6ce2\u52d5\u7387\uff0c\u81f3\u5c11\u9700\u6709\u5169\u671f\u7684\u5831\u916c\u7387\u624d\u9032\u884c\u8a08\u7b97\u3002</li> <li>\u5229\u7528empyrical\u5957\u4ef6\u8a08\u7b97\uff1a      empyrical.annual_volatility(<code>returns</code>Series, period='daily', alpha=2.0, annualization=None)\u3002</li> <li>\u5177\u9ad4\u4f86\u8aaa\uff0cempyrical\u5957\u4ef6\u7684\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a<code>returns</code>Series.std(ddof=1) * (252 ** (1 / 2))\uff0cstd\u70ba\u6a23\u672c\u6a19\u6e96\u5dee\u3002</li> <li>\u7528\u5b8c\u6574<code>returns</code>\u8cc7\u6599\uff0c\u5247\u6703\u56de\u50b3\u6700\u5f8c\u4e00\u65e5algo_volatility\uff0c\u82e5\u6263\u6389\u6700\u5f8c\u4e00\u65e5<code>returns</code>\uff0c\u5247\u56de\u50b3\u5012\u6578\u7b2c\u4e8c\u65e5\uff0c\u4ee5\u6b64\u985e\u63a8\u3002  </li> <li>excess_return\uff1a</li> <li>\u6295\u8cc7\u7d44\u5408\u7d2f\u7a4d\u8d85\u984d\u65e5\u5831\u916c\uff08\u76f8\u5c0d\u65bc<code>benchmark_period_return</code>\uff09\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a(<code>algorithm_period_return</code> - <code>benchmark_period_return</code>)\u3002</li> <li>max_drawdown\uff1a</li> <li>\u6295\u8cc7\u7d44\u5408\u7d2f\u7a4d\u5831\u916c\u7387\u5f9e\u904e\u53bb\u7684\u5cf0\u503c\u4e0b\u8dcc\u7684\u6700\u5927\u8dcc\u5e45\u767e\u5206\u6bd4\u3002</li> <li>\u5229\u7528empyrical\u5957\u4ef6\u8a08\u7b97\uff1aempyrical.max_drawdown(<code>returns</code> Series)\u3002</li> <li>\u5177\u9ad4\u4f86\u8aaa\uff0cempyrical\u5957\u4ef6\u7684\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a<ul> <li>cumulative_returns\uff1a\u5148\u8a08\u7b97\u904e\u53bb\u6bcf\u4e00\u65e5\u7684\u7d2f\u7a4d\u5831\u916c\u3002</li> <li>previous_peaks\uff1a\u8a08\u7b97\u904e\u53bb\u7d2f\u7a4d\u5831\u916c\u7387\u7684\u6700\u5927\u503c\u3002</li> <li>daily_drawdown\uff1a\u8a08\u7b97\u6bcf\u65e5\u56de\u64a4 = (cumulative_returns - previous_peaks) / previous_peaks</li> <li>max_drawdown\uff1a\u904e\u53bb\u6bcf\u4e00\u65e5\u7684daily_drawdown\u53d6\u6975\u5c0f\u503c\u3002</li> </ul> </li> <li>sharpe\uff1a</li> <li>\u5e74\u5316\u590f\u666e\u6bd4\u7387\uff0c\u8861\u91cf\u6bcf\u627f\u64d41\u55ae\u4f4d\u98a8\u96aa\uff0c\u53ef\u4ee5\u7372\u53d6\u591a\u5c11\u7684\u5831\u916c\u3002</li> <li>\u5229\u7528empyrical\u5957\u4ef6\u8a08\u7b97\uff1aempyrical.sharpe_ratio(<code>returns</code> Series, risk_free=0)\u3002</li> <li>\u5177\u9ad4\u4f86\u8aaa\uff0cempyrical\u5957\u4ef6\u7684\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a     np.mean(<code>returns</code> Series) / np.std(<code>returns</code> Series,ddof=1) * np.sqrt(252)</li> <li>sortino\uff1a   </li> <li>\u5e74\u5316\u7d22\u63d0\u8afe\u6bd4\u7387\uff0c\u8861\u91cf\u627f\u64d4\u55ae\u4f4d\u4e0b\u65b9\u98a8\u96aa\uff0c\u53ef\u4ee5\u7372\u53d6\u591a\u5c11\u7684\u5831\u916c\u3002</li> <li>\u5229\u7528empyrical\u5957\u4ef6\u8a08\u7b97\uff1aempyrical.sortino_ratio(<code>returns</code> Series, required_return=0)\u3002</li> <li>\u5177\u9ad4\u4f86\u8aaa\uff0cempyrical\u5957\u4ef6\u7684\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a<ul> <li>\u8a08\u7b97downside_risk\uff1anp.sqrt(np.nanmean(np.square(downside_return))) * np.sqrt(252)\uff0c\u5176\u4e2ddownside_return\u5c07<code>returns</code> Series\u4e2d&gt;0\u7684\u6578\u503c\u66ff\u63db\u62100\u3002</li> <li>\u8a08\u7b97mean_return\uff1anp.nanmean(<code>returns</code> Series)</li> <li>\u8a08\u7b97sortino_ratio =  mean_return / downside_risk * 252\u3002</li> </ul> </li> <li> <p>\u5b58\u5728\u5c3e\u5dee\u3002</p> </li> <li> <p>alpha\uff1a</p> </li> <li>\u5e74\u5316alpha\uff0c\u8861\u91cf\u6295\u8cc7\u7d44\u5408\u5275\u9020\u8d85\u984d\u5831\u916c\u7684\u80fd\u529b\u3002</li> <li>\u5229\u7528empyrical\u5957\u4ef6\u8a08\u7b97\uff1aempyrical.alpha_beta_aligned(returns=<code>returns</code>Series, factor_returns=<code>benchmark_return</code> Series,risk_free=0.0)</li> <li>\u5177\u9ad4\u4f86\u8aaa\uff0cempyrical\u5957\u4ef6\u7684\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a<ul> <li>\u8a08\u7b97alpha_series\uff1a<code>returns</code> Series - (\u7576\u65e5<code>beta</code> * <code>benchmark_return</code> Series)</li> <li>\u8a08\u7b97\u5e73\u5747alpha\uff1ananmean(alpha_series)</li> <li>\u8a08\u7b97\u5e74\u5316alpha\uff1a(\u5e73\u5747alpha + 1) ^ 252 -1  </li> </ul> </li> <li>beta\uff1a    </li> <li>\u8861\u91cf\u6295\u8cc7\u7d44\u5408\u76f8\u5c0d\u65bc\u6574\u9ad4\u5e02\u5834\u7684\u6ce2\u52d5\u6027\u3002</li> <li>\u5229\u7528empyrical\u5957\u4ef6\u8a08\u7b97\uff1aempyrical.alpha_beta_aligned(returns=<code>returns</code>Series, factor_returns=<code>benchmark_return</code> Series,risk_free=0.0)</li> <li>\u5177\u9ad4\u4f86\u8aaa\uff0cempyrical\u5957\u4ef6\u7684\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a     Cov(<code>benchmark_return</code> Series, <code>returns</code> Series) / Var(<code>benchmark_return</code> Series)</li> </ul> <pre><code>from zipline import run_algorithm\nimport pandas as pd \n\nstart_date = pd.Timestamp('2018-12-30',tz='utc')\nend_date = pd.Timestamp('2023-05-26',tz='utc')\n\nresults = run_algorithm(start= start_date,  \n                       end=end_date,\n                       initialize=initialize,                       \n                       capital_base=1e6,                       \n                       analyze=analyze,\n                       handle_data=handle_data,\n                       data_frequency='daily',\n                       bundle='tquant'\n                       )\n</code></pre> <pre><code>results\n</code></pre> <p>\u6211\u5011\u53ef\u4ee5\u767c\u73fe\u4e4b\u524d\u4f7f\u7528 <code>order</code> \u7d00\u9304\u7684 trade_days, has_ordered \u8207 TSMC \u78ba\u5be6\u4ee5\u6b04\u4f4d\u578b\u5f0f\u8a18\u9304\u5728 results \u8868\u4e2d\u3002 </p> <pre><code>results[['trade_days','has_ordered','TSMC']]\n</code></pre> <pre><code>\n</code></pre>"},{"location":"example/documents55/#run_algorithm_2","title":"Run_algorithm \u51fd\u5f0f","text":""},{"location":"example/documents55/#ziplinerun_algorithm_2","title":"zipline.run_algorithm","text":"<p>\u9032\u884c\u7b56\u7565\u56de\u6e2c\u3002</p>"},{"location":"example/documents55/#parameters_4","title":"Parameters:","text":"<ul> <li>start: pd.Timestamp or datetime         \u56de\u6e2c\u8d77\u59cb\u65e5\u671f\u3002</li> <li>end: pd.Timestamp or datetime         \u56de\u6e2c\u7d50\u675f\u65e5\u671f\u3002</li> <li>initialize: callable         \u547c\u53eb initialize \u51fd\u5f0f\u4ee5\u7528\u65bc\u56de\u6e2c\u3002</li> <li>capital_base: int         \u521d\u59cb\u8cc7\u91d1\u984d\u5ea6\u3002</li> <li>handle_data: callable, optional         \u547c\u53eb handle_data \u51fd\u5f0f\u4ee5\u7528\u65bc\u56de\u6e2c\u3002</li> <li>before_trading_start: callable, optional         \u547c\u53eb before_trading_start \u51fd\u5f0f\u4ee5\u7528\u65bc\u56de\u6e2c\u3002</li> <li>analyze: callable, optional         \u547c\u53eb analyze \u51fd\u5f0f\u4ee5\u7528\u65bc\u56de\u6e2c\u3002</li> <li>data_frequency: {\"daily\", \"minute\"}, optional         \u8a2d\u7f6e\u4ea4\u6613\u983b\u7387\u3002</li> <li>bundle: str, optional         \u8a2d\u7f6e\u56de\u6e2c\u7528\u7684 bundle\u3002</li> <li>trading_calendar: TradingCalendar, optional         \u8a2d\u7f6e\u4ea4\u6613\u65e5\u66c6\u3002</li> <li>benchmark_returns: pd.Series, optional         \u8a2d\u7f6e\u6307\u6a19\u5831\u916c\u7387\u3002</li> <li>treasury_returns: pd.Series, optional         \u8a2d\u7f6e\u7121\u98a8\u96aa\u5229\u7387\u3002</li> </ul>"},{"location":"example/documents55/#returns_2","title":"Returns:","text":"<p>Perf: pd.DataFrame, \u5167\u5efa\u6b04\u4f4d\u6709:</p> <ul> <li>benchmark_return\uff1a     \u7576\u65e5\u7684benchmark\u5831\u916c\u7387\uff0c\u82e5\u662f\u7531<code>set_benchmark()</code>\u8a2d\u5b9a\uff0c\u5247\u8a08\u7b97\u65b9\u5f0f\u70ba(\u7576\u65e5benchmark\u6536\u76e4\u50f9 / \u524d\u4e00\u65e5benchmark\u6536\u76e4\u50f9) - 1\u3002</li> <li>benchmark_period_return\uff1a     \u7d2f\u7a4d\u7684benchmark\u65e5\u5831\u916c\u7387\u3002\u8a08\u7b97\u65b9\u5f0f\uff1anp.nancumprod(1 + <code>benchmark_return</code> Series) - 1\u3002</li> <li>treasury_return\uff1a     \u7576\u65e5\u7684treasury\u5831\u916c\u7387\uff0c\u76f4\u63a5\u7531TEJ API\u63d0\u4f9b\u3002</li> <li>treasury_period_return\uff1a     \u7d2f\u7a4d\u7684treasury\u65e5\u5831\u916c\u7387\u3002\u8a08\u7b97\u65b9\u5f0f\uff1anp.nancumprod(1 + <code>treasury_return</code> Series) - 1\u3002</li> <li> <p>benchmark_volatility\uff1a     benchmark\u65e5\u5831\u916c\u7387\u7684\u5e74\u5316\u6ce2\u52d5\u7387\uff0c\u81f3\u5c11\u9700\u6709\u5169\u671f\u7684\u5831\u916c\u7387\u624d\u9032\u884c\u8a08\u7b97\u3002\u8a08\u7b97\u65b9\u5f0f\uff1a(<code>benchmark_return</code> Series).expanding(2).std(ddof=1) * np.sqrt(252)</p> </li> <li> <p>orders\uff1a\u986f\u793a\u4e0b\u55ae\u7d00\u9304     \u6bcf\u4e00\u7b46\u4e0b\u55ae\u7528\u4e00\u500b\u5b57\u5178\u7684\u65b9\u5f0f\u5448\u73fe\uff0c\u5176\u4e2d\uff1a</p> </li> <li>id\uff1a\u865b\u64ec\u55ae\u865f\u3002</li> <li>dt\uff1a\u4e0b\u55ae\u6642\u9593\u3002</li> <li>reason\uff1aNone, Hold, or Reject\uff08\u76ee\u524d\u4e0d\u9069\u7528\uff09</li> <li>created\uff1a\u5efa\u7acb\u6642\u9593\u3002</li> <li>amount\uff1a<ul> <li>\u4e0b\u55ae\u80a1\u6578\u3002</li> <li>\u82e5&gt;0\u8868\u793a\u8cb7\u9032\u6216\u56de\u88dc\uff0c&lt;0\u8868\u793a\u8ce3\u51fa\u6216\u653e\u7a7a\u3002</li> <li>\u82e5\u6709\u767c\u80a1\u7968\u80a1\u5229\u6216\u80a1\u7968\u5206\u5272\u7684\u60c5\u5f62\uff0c\u9664\u6b0a\u65e5\u7576\u5929\u6703\u66f4\u65b0\u4e4b\u524d\u672a\u6210\u4ea4\u8a02\u55ae\u7684amount\uff08new_amount = old_amount / ratio\uff0c\u5176\u4e2dratio = 1/\u50c5\u9664\u6b0a\u8abf\u6574\u4fc2\u6578\uff09\u3002</li> </ul> </li> <li> <p>filled\uff1a\u6210\u4ea4\u80a1\u6578\u3002</p> <ul> <li>\u8a3b\uff1aOrder execution - \u7576\u6f14\u7b97\u6cd5\u5728\u67d0\u4e00\u5929\u4e0b\u55ae\u6642\uff0c\u8a72\u8a02\u55ae\u6703\u5728\u4e0b\u4e00\u500b\u4ea4\u6613\u65e5\u6210\u4ea4\uff0c\u4ee5\u907f\u514dlookahead bias\u3002   </li> </ul> </li> <li> <p>commission\uff1a\u8a72\u7b46\u4ea4\u6613\u50ad\u91d1\u3002</p> </li> <li>stop\uff1a\u505c\u640d\u50f9\uff0c\u82e5\u6709\u767c\u80a1\u7968\u80a1\u5229\u6216\u80a1\u7968\u5206\u5272\u7684\u60c5\u5f62\uff0c\u9664\u6b0a\u65e5\u7576\u5929\u6703\u66f4\u65b0\u4e4b\u524d\u672a\u6210\u4ea4\u8a02\u55ae\u7684stop price\uff08new_stop = old_stop * ratio\uff0c\u5176\u4e2dratio = 1/\u50c5\u9664\u6b0a\u8abf\u6574\u4fc2\u6578\uff09\u3002</li> <li>limit\uff1a\u9650\u50f9\u50f9\uff0c\u82e5\u6709\u767c\u80a1\u7968\u80a1\u5229\u6216\u80a1\u7968\u5206\u5272\u7684\u60c5\u5f62\uff0c\u9664\u6b0a\u65e5\u7576\u5929\u6703\u66f4\u65b0\u4e4b\u524d\u672a\u6210\u4ea4\u8a02\u55ae\u7684limit price\uff08new_limit = old_limit * ratio\uff0c\u5176\u4e2dratio = 1/\u50c5\u9664\u6b0a\u8abf\u6574\u4fc2\u6578\uff09\u3002</li> <li>stop_reached\uff1a<ul> <li>\u5c0d\u65bcbuy stop order\uff0c\u82e5\u73fe\u50f9&gt;=stop price\uff0c\u5247\u986f\u793aTrue\u5426\u5247False\u3002</li> <li>\u5c0d\u65bcsell stop order\uff0c\u82e5\u73fe\u50f9&lt;=stop price\uff0c\u5247\u986f\u793aTrue\u5426\u5247False\u3002</li> </ul> </li> <li>limit_reached\uff1a<ul> <li>\u5c0d\u65bcbuy limit order\uff0c\u82e5\u73fe\u50f9&lt;=limit price\uff0c\u5247\u986f\u793aTrue\u5426\u5247False\u3002</li> <li>\u5c0d\u65bcsell limit order\uff0c\u82e5\u73fe\u50f9&gt;=limit price\uff0c\u5247\u986f\u793aTrue\u5426\u5247False\u3002</li> </ul> </li> <li>sid\uff08asset\uff09\uff1a\u4e0b\u55ae\u7684\u6a19\u7684\u3002</li> <li> <p>status\uff1a\u82e5=0\u8868\u793aOPEN\uff08\u672a\u5b8c\u5168\u6210\u4ea4\uff09\uff0c=1\u8868\u793aFILLED\uff08\u5b8c\u5168\u6210\u4ea4\uff09\uff0c=2\u8868\u793aCANCEL\uff08\u5df2\u53d6\u6d88\uff09\u3002</p> </li> <li> <p>transactions\uff1a\u986f\u793a\u4ea4\u6613\u7d00\u9304</p> </li> <li>amount\uff1a\u4e0b\u55ae\u80a1\u6578\u3002</li> <li>dt \uff1a \u4ea4\u6613\u6642\u9593\u3002</li> <li>price\uff1a\u6210\u4ea4\u50f9\uff08\u70ba\u8abf\u6574\u524d\u6536\u76e4\u50f9\uff0c\u4e0d\u8abf\u6574\u80a1\u606f\u3001\u5206\u5272\u3001\u80a1\u7968\u80a1\u5229\uff09\u3002</li> <li>order_id\uff1a\u55ae\u865f\uff0c\u53ef\u8207orders\u4e2d\u7684id\u6bd4\u5c0d\u3002</li> <li>sid\uff08asset\uff09\uff1a\u4e0b\u55ae\u7684\u6a19\u7684\u3002</li> <li> <p>commission\uff1a\u4e00\u5f8b\u70baNone\u3002\u50ad\u91d1\u8cc7\u6599\u5df2\u7d93\u5728'orders'\u5e95\u4e0b\u3002</p> </li> <li> <p>positions\uff1a\u986f\u793a\u6301\u6709\u90e8\u4f4d</p> </li> <li>sid\uff08asset\uff09\uff1a\u4e0b\u55ae\u7684\u6a19\u7684\u3002</li> <li>amount\uff1a\u8a72\u6a19\u7684\u7e3d\u6301\u6709\u80a1\u6578\u3002\u9664\u6b0a\u65e5\u7576\u5929amount\u6703\u9032\u884c\u8abf\u6574\uff08old_amount / ratio = new_amount\uff0c\u5176\u4e2dratio = 1/\u50c5\u9664\u6b0a\u8abf\u6574\u4fc2\u6578\uff09\u3002</li> <li>last_sale_price\uff1a\u6a19\u7684\u6700\u8fd1\u4e00\u7b46\u7684\u6536\u76e4\u50f9\u3002</li> <li>cost_basis\uff1a\u6bcf\u80a1\u5e73\u5747\u6210\u672c\uff08\u542bcommissions\uff09\u3002<ul> <li>\u8a08\u7b97\u65b9\u6cd5\u70ba\uff1asum(\u6210\u4ea4\u50f9 * (1+commission) * \u80a1\u6578) / \u7e3d\u80a1\u6578</li> <li>\u9664\u6b0a\u65e5\u7576\u5929cost_basis\u6703\u9032\u884c\u8abf\u6574\uff08old_cost_basis * ratio = new_cost_basis\uff0c\u5176\u4e2dratio = 1/\u50c5\u9664\u6b0a\u8abf\u6574\u4fc2\u6578\uff09\u3002</li> <li>\u5c0d\u65bc\u8cb7\u9032\u6216\u56de\u88dc\u4f86\u8aaa\uff0ccommissions\u6703\u9020\u6210cost_basis\u589e\u52a0\uff1b\u5c0d\u65bc\u8ce3\u51fa\u6216\u653e\u7a7a\u4f86\u8aaa\uff0ccommissions\u6703\u9020\u6210cost_basis\u6e1b\u5c11\u3002</li> </ul> </li> <li>longs_count\uff1a</li> <li>\u7576\u65e5\u5e33\u4e0a\u6709\u5e7e\u6a94\u9577\u90e8\u4f4d\u80a1\u7968\u3002\u53ef\u8207<code>positions</code>\u6bd4\u8f03\u3002</li> <li>shorts_count\uff1a</li> <li>\u7576\u65e5\u5e33\u4e0a\u6709\u5e7e\u6a94\u77ed\u90e8\u4f4d\u80a1\u7968\u3002\u53ef\u8207<code>positions</code>\u6bd4\u8f03\u3002</li> <li>long_exposure\uff08long_value\uff09\uff1a</li> <li>\u7576\u65e5\u5e33\u4e0a\u9577\u90e8\u4f4d\u7684\u5e02\u503c\u3002</li> <li>\u53ef\u8207<code>positions</code>\u6bd4\u8f03\u3002</li> <li>\u7576\u6295\u8cc7\u6a19\u7684\u70ba\u80a1\u7968\u6642<code>long_exposure</code>\u548c<code>long_value</code>\u5169\u6b04\u4f4d\u6578\u503c\u4e00\u81f4\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\u70basum(\u6301\u6709\u80a1\u6578 * \u6536\u76e4\u50f9) = sum(amount * last_sale_price)\uff0cwhere amount &gt; 0\u3002</li> <li>short_exposure\uff08short_value\uff09\uff1a</li> <li>\u7576\u65e5\u5e33\u4e0a\u77ed\u90e8\u4f4d\u7684\u5e02\u503c\u3002</li> <li>\u53ef\u8207<code>positions</code>\u6bd4\u8f03\u3002</li> <li>\u7576\u6295\u8cc7\u6a19\u7684\u70ba\u80a1\u7968\u6642<code>short_exposure</code>\u548c<code>short_value</code>\u5169\u6b04\u4f4d\u6578\u503c\u4e00\u81f4\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\u70basum(\u6301\u6709\u80a1\u6578 * \u6536\u76e4\u50f9) = sum(amount * last_sale_price)\uff0cwhere amount &lt; 0\u3002</li> <li>short_exposure\u5fc5\u7136 &lt;= 0\u3002</li> <li>ending_exposure\uff08ending_value\uff09\uff1a</li> <li>\u7576\u65e5\u7d50\u675f\u6642\u5e33\u4e0a\u90e8\u4f4d\u7684\u6de8\u5e02\u503c\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a<code>long_exposure</code> + <code>short_exposure</code></li> <li>starting_exposure\uff08starting_value\uff09\uff1a</li> <li>\u7576\u65e5\u958b\u59cb\u6642\u5e33\u4e0a\u90e8\u4f4d\u7684\u6de8\u5e02\u503c\u3002</li> <li>\u70ba\u524d\u4e00\u65e5\u7684<code>ending_exposure</code>\u3002</li> <li>gross_leverage\uff08leverage\uff09\uff1a</li> <li>Gross leverage is the sum of long and short leverage exposure per share divided by net asset value\uff08portfolio_value\uff09\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a\uff08<code>long_exposure</code> - <code>short_exposure</code>\uff09\uff0f<code>portfolio_value</code></li> <li>net_leverage\uff1a</li> <li>Net leverage is the net leverage exposure per share divided by net asset value\uff08portfolio_value\uff09\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a\uff08<code>long_exposure</code> + <code>short_exposure</code>\uff09\uff0f<code>portfolio_value</code></li> <li>capital_used\uff1a</li> <li>\u7576\u5929\u7684cash flow\u3002&gt;0\u8868\u793a\u6d41\u5165\uff0c&lt;0\u8868\u793a\u6d41\u51fa\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a<ul> <li>-1 * sum(<code>transaction.price</code> * <code>transaction.amount</code>) - sum(<code>order.commission</code>) + sum(earn_dividends) + sum(leftover_cash)</li> </ul> </li> <li> <p>\u8a3b\uff1a    </p> <ol> <li>earn_dividends\uff1a\u6703\u65bcpay_date\u7576\u5929\u914d\u767c\u3002</li> <li>leftover_cash\uff1a\u5206\u5272\u3001\u80a1\u7968\u80a1\u5229\u7b49\u539f\u56e0\u5c0e\u81f4\u80a1\u6578\u8b8a\u52d5\u6642\uff0c\u82e5\u6709&lt;1\u80a1(fractional_share_count)\u7121\u6cd5\u5206\u914d\u7684\u60c5\u6cc1\u6642\u5247\u8fd4\u56de\u73fe\u91d1\u3002</li> <li>leftover_cash\u7bc4\u4f8b\uff1a</li> <li>\u82e5\u73fe\u5728\u6301\u6709100\u80a1\uff08amount\uff09\uff0cratio=3\u3002</li> <li>\u65b0\u7684amount\u7406\u8ad6\u4e0a\u662f100/3=33.333\uff0c\u7136\u800c\u4e0d\u6eff\u4e00\u80a1\u7684\u90e8\u5206\u9700\u8f49\u63db\u6210\u73fe\u91d1 (return cash)\u3002</li> <li>\u6240\u4ee5\u65b0\u7684amount\u6703\u662f33\uff0c\u5269\u9918\u76840.333\u80a1\uff0833.333-33\uff09\u5c31\u662ffractional_share_count\u3002</li> <li>\u7531\u65bcratio=3\u4ee3\u8868\u8a72\u516c\u53f8\u80a1\u6578\u6709\u767c\u751f\u8b8a\u52d5\uff0c\u6240\u4ee5\u6bcf\u80a1\u5e73\u5747\u6210\u672c (cost basis)\u9700\u8abf\u6574=\u539fcost basis * \u539famount / \u65b0amount \u5f8c\u56db\u6368\u4e94\u5165\u5230\u5c0f\u6578\u7b2c\u4e8c\u4f4d\u3002</li> <li>\u6240\u4ee5\u9000\u56de\u73fe\u91d1(return cash)=(fractional_share_count) * (\u65b0cost basis) \u518d\u56db\u6368\u4e94\u5165\u5230\u5c0f\u6578\u7b2c\u4e8c\u4f4d</li> </ol> </li> <li> <p>ending_cash\uff1a</p> </li> <li>\u7576\u65e5\u7d50\u675f\u6642\u5e33\u4e0a\u6301\u6709\u73fe\u91d1\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a<code>starting_cash</code>+<code>capital_used</code></li> <li>starting_cash\uff1a</li> <li>\u7576\u65e5\u958b\u59cb\u6642\u5e33\u4e0a\u6301\u6709\u73fe\u91d1\u3002</li> <li>\u70ba\u524d\u4e00\u65e5\u7684<code>ending_cash</code>+sum(earn_dividends)\uff0c\u82e5\u7121\u524d\u4e00\u65e5\u5247\u70ba<code>capital_base</code>\u3002</li> <li>pnl\uff1a</li> <li>\u7576\u65e5\u6295\u8cc7\u7d44\u5408\u640d\u76ca\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a(<code>ending_exposure</code> + <code>ending_cash</code>) - (<code>starting_exposure</code> + <code>starting_cash</code>)\u3002</li> <li>returns\uff1a</li> <li>\u7576\u65e5\u5831\u916c\u7387\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a(\u7576\u65e5<code>portfolio_value</code>) / (\u524d\u4e00\u65e5<code>portfolio_value</code>) - 1\u3002</li> <li>\u5b58\u5728\u5c3e\u5dee\u3002</li> <li>portfolio_value\uff1a</li> <li>\u5373net asset value\uff0c\u7576\u65e5\u6295\u8cc7\u7d44\u5408\u7e3d\u50f9\u503c\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a(<code>ending_exposure</code> + <code>ending_cash</code>)</li> <li>algorithm_period_return\uff1a</li> <li>\u6295\u8cc7\u7d44\u5408\u7d2f\u7a4d\u65e5\u5831\u916c\u7387\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\uff1a( 1 + \u524d\u4e00\u65e5\u7684<code>algorithm_period_return</code>) * ( 1 + \u7576\u65e5<code>returns</code>) - 1\u3002</li> <li>\u5b58\u5728\u5c3e\u5dee\u3002</li> <li>algo_volatility\uff1a</li> <li>\u6295\u8cc7\u7d44\u5408\u65e5\u5831\u916c\u7387\u7684\u5e74\u5316\u6ce2\u52d5\u7387\uff0c\u81f3\u5c11\u9700\u6709\u5169\u671f\u7684\u5831\u916c\u7387\u624d\u9032\u884c\u8a08\u7b97\u3002</li> <li>\u5229\u7528empyrical\u5957\u4ef6\u8a08\u7b97\uff1a      empyrical.annual_volatility(<code>returns</code>Series, period='daily', alpha=2.0, annualization=None)\u3002</li> <li>\u5177\u9ad4\u4f86\u8aaa\uff0cempyrical\u5957\u4ef6\u7684\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a<code>returns</code>Series.std(ddof=1) * (252 ** (1 / 2))\uff0cstd\u70ba\u6a23\u672c\u6a19\u6e96\u5dee\u3002</li> <li>\u7528\u5b8c\u6574<code>returns</code>\u8cc7\u6599\uff0c\u5247\u6703\u56de\u50b3\u6700\u5f8c\u4e00\u65e5algo_volatility\uff0c\u82e5\u6263\u6389\u6700\u5f8c\u4e00\u65e5<code>returns</code>\uff0c\u5247\u56de\u50b3\u5012\u6578\u7b2c\u4e8c\u65e5\uff0c\u4ee5\u6b64\u985e\u63a8\u3002  </li> <li>excess_return\uff1a</li> <li>\u6295\u8cc7\u7d44\u5408\u7d2f\u7a4d\u8d85\u984d\u65e5\u5831\u916c\uff08\u76f8\u5c0d\u65bc<code>benchmark_period_return</code>\uff09\u3002</li> <li>\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a(<code>algorithm_period_return</code> - <code>benchmark_period_return</code>)\u3002</li> <li>max_drawdown\uff1a</li> <li>\u6295\u8cc7\u7d44\u5408\u7d2f\u7a4d\u5831\u916c\u7387\u5f9e\u904e\u53bb\u7684\u5cf0\u503c\u4e0b\u8dcc\u7684\u6700\u5927\u8dcc\u5e45\u767e\u5206\u6bd4\u3002</li> <li>\u5229\u7528empyrical\u5957\u4ef6\u8a08\u7b97\uff1aempyrical.max_drawdown(<code>returns</code> Series)\u3002</li> <li>\u5177\u9ad4\u4f86\u8aaa\uff0cempyrical\u5957\u4ef6\u7684\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a<ul> <li>cumulative_returns\uff1a\u5148\u8a08\u7b97\u904e\u53bb\u6bcf\u4e00\u65e5\u7684\u7d2f\u7a4d\u5831\u916c\u3002</li> <li>previous_peaks\uff1a\u8a08\u7b97\u904e\u53bb\u7d2f\u7a4d\u5831\u916c\u7387\u7684\u6700\u5927\u503c\u3002</li> <li>daily_drawdown\uff1a\u8a08\u7b97\u6bcf\u65e5\u56de\u64a4 = (cumulative_returns - previous_peaks) / previous_peaks</li> <li>max_drawdown\uff1a\u904e\u53bb\u6bcf\u4e00\u65e5\u7684daily_drawdown\u53d6\u6975\u5c0f\u503c\u3002</li> </ul> </li> <li>sharpe\uff1a</li> <li>\u5e74\u5316\u590f\u666e\u6bd4\u7387\uff0c\u8861\u91cf\u6bcf\u627f\u64d41\u55ae\u4f4d\u98a8\u96aa\uff0c\u53ef\u4ee5\u7372\u53d6\u591a\u5c11\u7684\u5831\u916c\u3002</li> <li>\u5229\u7528empyrical\u5957\u4ef6\u8a08\u7b97\uff1aempyrical.sharpe_ratio(<code>returns</code> Series, risk_free=0)\u3002</li> <li>\u5177\u9ad4\u4f86\u8aaa\uff0cempyrical\u5957\u4ef6\u7684\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a     np.mean(<code>returns</code> Series) / np.std(<code>returns</code> Series,ddof=1) * np.sqrt(252)</li> <li>sortino\uff1a   </li> <li>\u5e74\u5316\u7d22\u63d0\u8afe\u6bd4\u7387\uff0c\u8861\u91cf\u627f\u64d4\u55ae\u4f4d\u4e0b\u65b9\u98a8\u96aa\uff0c\u53ef\u4ee5\u7372\u53d6\u591a\u5c11\u7684\u5831\u916c\u3002</li> <li>\u5229\u7528empyrical\u5957\u4ef6\u8a08\u7b97\uff1aempyrical.sortino_ratio(<code>returns</code> Series, required_return=0)\u3002</li> <li>\u5177\u9ad4\u4f86\u8aaa\uff0cempyrical\u5957\u4ef6\u7684\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a<ul> <li>\u8a08\u7b97downside_risk\uff1anp.sqrt(np.nanmean(np.square(downside_return))) * np.sqrt(252)\uff0c\u5176\u4e2ddownside_return\u5c07<code>returns</code> Series\u4e2d&gt;0\u7684\u6578\u503c\u66ff\u63db\u62100\u3002</li> <li>\u8a08\u7b97mean_return\uff1anp.nanmean(<code>returns</code> Series)</li> <li>\u8a08\u7b97sortino_ratio =  mean_return / downside_risk * 252\u3002</li> </ul> </li> <li> <p>\u5b58\u5728\u5c3e\u5dee\u3002</p> </li> <li> <p>alpha\uff1a</p> </li> <li>\u5e74\u5316alpha\uff0c\u8861\u91cf\u6295\u8cc7\u7d44\u5408\u5275\u9020\u8d85\u984d\u5831\u916c\u7684\u80fd\u529b\u3002</li> <li>\u5229\u7528empyrical\u5957\u4ef6\u8a08\u7b97\uff1aempyrical.alpha_beta_aligned(returns=<code>returns</code>Series, factor_returns=<code>benchmark_return</code> Series,risk_free=0.0)</li> <li>\u5177\u9ad4\u4f86\u8aaa\uff0cempyrical\u5957\u4ef6\u7684\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a<ul> <li>\u8a08\u7b97alpha_series\uff1a<code>returns</code> Series - (\u7576\u65e5<code>beta</code> * <code>benchmark_return</code> Series)</li> <li>\u8a08\u7b97\u5e73\u5747alpha\uff1ananmean(alpha_series)</li> <li>\u8a08\u7b97\u5e74\u5316alpha\uff1a(\u5e73\u5747alpha + 1) ^ 252 -1  </li> </ul> </li> <li>beta\uff1a    </li> <li>\u8861\u91cf\u6295\u8cc7\u7d44\u5408\u76f8\u5c0d\u65bc\u6574\u9ad4\u5e02\u5834\u7684\u6ce2\u52d5\u6027\u3002</li> <li>\u5229\u7528empyrical\u5957\u4ef6\u8a08\u7b97\uff1aempyrical.alpha_beta_aligned(returns=<code>returns</code>Series, factor_returns=<code>benchmark_return</code> Series,risk_free=0.0)</li> <li>\u5177\u9ad4\u4f86\u8aaa\uff0cempyrical\u5957\u4ef6\u7684\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a     Cov(<code>benchmark_return</code> Series, <code>returns</code> Series) / Var(<code>benchmark_return</code> Series)</li> </ul> <pre><code>from zipline import run_algorithm\nimport pandas as pd \n\nstart_date = pd.Timestamp('2018-12-30',tz='utc')\nend_date = pd.Timestamp('2023-05-26',tz='utc')\n\nresults = run_algorithm(start= start_date,  \n                       end=end_date,\n                       initialize=initialize,                       \n                       capital_base=1e6,                       \n                       analyze=analyze,\n                       handle_data=handle_data,\n                       data_frequency='daily',\n                       bundle='tquant'\n                       )\n</code></pre> <pre><code>results\n</code></pre> <p>\u6211\u5011\u53ef\u4ee5\u767c\u73fe\u4e4b\u524d\u4f7f\u7528 <code>order</code> \u7d00\u9304\u7684 trade_days, has_ordered \u8207 TSMC \u78ba\u5be6\u4ee5\u6b04\u4f4d\u578b\u5f0f\u8a18\u9304\u5728 results \u8868\u4e2d\u3002 </p> <pre><code>results[['trade_days','has_ordered','TSMC']]\n</code></pre> <pre><code>\n</code></pre>"},{"location":"example/documents55/#target-percent-pipeline-algorithm","title":"Target Percent Pipeline Algorithm","text":"<p>\u5229\u7528pipeline\u63d0\u4f9b\u7684\u8cb7\u8ce3\u6e05\u55ae\u8207\u6301\u80a1\u6b0a\u91cd\u9032\u884c\u5b9a\u671f\u518d\u5e73\u8861\u7684\u6f14\u7b97\u6cd5\u3002</p> <p> \u672c\u6587\u4ef6\u5305\u542b\u4ee5\u4e0b\u90e8\u4efd\uff1a</p> <p>\u57fa\u672c\u8a2d\u5b9a 1. Set Environment Variables 2. Investment Universe 3. Ingest 4. Imports 5. Pipeline</p> <p>\u53c3\u6578\u8aaa\u660e\u8207\u7bc4\u4f8b</p> <ol> <li>API Reference\uff1a\u53c3\u6578\u8aaa\u660e\u3002</li> <li>class zipline.algo.pipeline_algo.TargetPercentPipeAlgo</li> <li> <p>class zipline.api.date_rules</p> </li> <li> <p>Examples\uff1a\u7bc4\u4f8b\u3002</p> </li> <li>Case 1\uff0d\u8abf\u6574start_session\u8207end_session</li> <li>Case 2\uff0d\u8abf\u6574max_leverage</li> <li>Case 3\uff0d\u8abf\u6574tradeday</li> <li>Case 4\uff0d\u8abf\u6574rebalance_date_rule</li> <li>Case 5\uff0d\u8abf\u6574slippage_model</li> <li>Case 6\uff0d\u8abf\u6574stocklist</li> <li>Case 7\uff0d\u8abf\u6574order_filling_policy</li> <li>Case 8\uff0d\u8abf\u6574allow_short</li> <li>Case 9\uff0d\u8abf\u6574cancel_datedelta </li> <li>Case 10\uff0d\u8abf\u6574limit_buy_multiplier </li> <li>Case 11\uff0d\u8abf\u6574custom_weight\u3001analyze\u3001record_vars\u3001get_record_vars\u8207get_transaction_detail </li> </ol> <p></p>"},{"location":"example/documents55/#1-set-environment-variables","title":"1. Set Environment Variables","text":"<p>Return to Menu</p> <pre><code>import pandas as pd\nimport datetime\nimport tejapi\nimport os\n\n# set tej_key and base\nos.environ['TEJAPI_KEY'] = \"your key\" \nos.environ['TEJAPI_BASE'] = \"https://api.tej.com.tw\"\n\n# set benchmark\nbenchmark=['IR0001']\n\n# set calendar\ncalendar_name='TEJ_XTAI'\n\n# set bundle name\nbundle_name = 'tquant'\n\n# set date\nstart='2023-06-01'\nend='2023-10-03'\n\n# \u7531\u6587\u5b57\u578b\u614b\u8f49\u70baTimestamp\uff0c\u4f9b\u56de\u6e2c\u4f7f\u7528\ntz = 'UTC'\nstart_dt, end_dt = pd.Timestamp(start, tz = tz), pd.Timestamp(end, tz = tz)\n\n# \u8a2d\u5b9aos.environ['mdate'] = start+' '+end\uff0c\u4f9bingest bundle\u4f7f\u7528\nos.environ['mdate'] = start+' '+end\n</code></pre> <p></p>"},{"location":"example/documents55/#2-investment-universe","title":"2. Investment Universe","text":"<p>\u53f0\u706350\u6307\u6578\u6210\u5206\u80a1</p> <p>Return to Menu</p> <pre><code>from zipline.sources.TEJ_Api_Data import get_universe\n\nStockList = get_universe(start, end, idx_id='IX0002')\n\nprint(len(StockList))\n</code></pre> <pre><code>os.environ['ticker'] = ' '.join(StockList + benchmark)\n</code></pre> <pre><code>os.environ['ticker']\n</code></pre> <p></p>"},{"location":"example/documents55/#3-ingest","title":"3. Ingest","text":"<p>Return to Menu</p> <pre><code># Ingest pricing bundle\n!zipline ingest -b tquant\n</code></pre> <pre><code>from zipline.data.data_portal import get_bundle_price\n\ndf_bundle_price = get_bundle_price(bundle_name=bundle_name,\n                                   calendar_name=calendar_name,\n                                   start_dt=start_dt,\n                                   end_dt=end_dt)\n</code></pre> <p></p>"},{"location":"example/documents55/#4-imports-settings","title":"4. Imports &amp; Settings","text":"<p>Return to Menu</p> <pre><code>import warnings\nwarnings.filterwarnings('ignore')\n</code></pre> <pre><code>from time import time\nimport numpy as np\nimport pandas as pd\nimport empyrical as ep\n\nfrom logbook import Logger, StderrHandler, INFO, WARNING\nimport matplotlib.pyplot as plt\nfrom matplotlib.ticker import MaxNLocator\n\n\nfrom TejToolAPI.TejToolAPI import *\n\nfrom zipline.api import record\n\nfrom zipline.utils.calendar_utils import get_calendar\nfrom zipline.utils.run_algo import  (get_transaction_detail,\n                                     get_record_vars)\n\nfrom zipline.pipeline import Pipeline, CustomFactor\nfrom zipline.pipeline.filters import SingleAsset\nfrom zipline.pipeline.factors import RSI\nfrom zipline.pipeline.data import TQAltDataSet\n\nfrom zipline.finance import slippage\n\nfrom zipline.TQresearch.tej_pipeline import run_pipeline\n\n# \u8a2d\u5b9alog\u986f\u793a\u65b9\u5f0f\nlog_handler = StderrHandler(format_string='[{record.time:%Y-%m-%d %H:%M:%S.%f}]: ' +\n                            '{record.level_name}: {record.func_name}: {record.message}',\n                            level=INFO)\nlog_handler.push_application()\nlog = Logger('Algorithm')\n</code></pre> <pre><code>import warnings\nwarnings.filterwarnings('ignore')\n</code></pre> <p></p>"},{"location":"example/documents55/#5-pipeline","title":"5. Pipeline","text":"<p>\u53d6\u5f97<code>Market_Cap_Dollars</code>\uff08\u5e02\u503c\uff09\u8cc7\u6599</p> <p>Return to Menu</p> <pre><code>col = ['Market_Cap_Dollars']\n\nfields = ''\nfor i in col:\n    fields += i\n    fields += ' '\n\nos.environ['fields'] = fields\n</code></pre> <pre><code># Ingest Fundamental Bundle\n!zipline ingest -b fundamentals\n</code></pre> <p></p>"},{"location":"example/documents55/#6-api-reference","title":"6. API Reference","text":"<p>Return to Menu</p>"},{"location":"example/documents55/#class-ziplinealgopipeline_algotargetpercentpipealgo","title":"class zipline.algo.pipeline_algo.TargetPercentPipeAlgo","text":"<p>(self, bundle_name='tquant', start_session=None, end_session=None, trading_calendar=get_calendar('TEJ_XTAI'),</p> <p>capital_base=1e7, data_frequency='daily', tradeday=None, rebalance_date_rule=None, stocklist=None, benchmark='IR0001', </p> <p>zero_treasury_returns=True, slippage_model=slippage.VolumeShareSlippage(volume_limit=0.025, price_impact=0.1),</p> <p>commission_model=commission.Custom_TW_Commission(min_trade_cost=20, discount = 1.0, tax = 0.003), max_leverage=0.8, </p> <p>limit_buy_multiplier=None, limit_sell_multiplier=None, allow_short=False, cancel_datedelta=None, custom_weight=False,</p> <p>custom_loader=None, pipeline=None, analyze=None, record_vars=None, get_record_vars=False, get_transaction_detail=False,</p> <p>order_filling_policy='next_bar')</p> <p>\u5229\u7528pipeline\u63d0\u4f9b\u7684\u8cb7\u8ce3\u6e05\u55ae\u8207\u6301\u80a1\u6b0a\u91cd\u9032\u884c\u5b9a\u671f\u518d\u5e73\u8861\u7684\u6f14\u7b97\u6cd5\u3002\u5fc5\u8981\u53c3\u6578\u50c5\u6709<code>pipeline</code>\u3002</p>"},{"location":"example/documents55/#parameters_5","title":"Parameters:","text":"<ul> <li> <p>bundle_name (str, optional)\uff0dbundle\u540d\u7a31\u3002\u9810\u8a2d\u662f <code>'tquant'</code>\u3002  </p> </li> <li> <p>start_session (pd.Timestamp or datetime, optional)\uff0d\u56de\u6e2c\u8d77\u59cb\u65e5\u671f\u3002\u9810\u8a2d\u662f**bundle\u4e2d\u6700\u65e9\u7684\u8cc7\u6599\u65e5\u671f**\u3002  </p> </li> <li> <p>end_session (pd.Timestamp or datetime, optional)\uff0d\u56de\u6e2c\u7d50\u675f\u65e5\u671f\u3002\u9810\u8a2d\u662f**bundle\u4e2d\u6700\u665a\u7684\u8cc7\u6599\u65e5\u671f**\u3002  </p> </li> <li> <p>trading_calendar (TradingCalendar, optional)\uff0d</p> </li> <li>\u8a2d\u7f6e\u4ea4\u6613\u65e5\u66c6\u3002\u9810\u8a2d\u662f <code>get_calendar('TEJ_XTAI')</code>\u3002</li> <li> <p>TradingCalendar\uff1a<code>zipline.utils.calendar_utils.TradingCalendar</code>\u3002  </p> </li> <li> <p>capital_base (float, optional)\uff0d\u521d\u59cb\u8cc7\u91d1\u984d\u5ea6\u3002\u9810\u8a2d\u662f**\u4e00\u5343\u842c**\u3002  </p> </li> <li> <p>data_frequency ({'daily', 'minute'}, optional)\uff0d\u8cc7\u6599\u983b\u7387\uff0c\u76ee\u524d\u50c5\u652f\u63f4\u65e5\u983b\u7387 <code>'daily'</code>\u3002  </p> </li> <li> <p>tradeday (list[str] or list[pd.Timestamp] or pd.DatetimeIndex, optional)\uff0d</p> </li> <li>\u4ea4\u6613\u65e5\u671f\u6e05\u55ae\uff0c\u9650\u5236\u53ea\u80fd\u5728\u9019\u500b\u6e05\u55ae\u4e2d\u7684\u65e5\u671f\u9032\u884c\u4ea4\u6613\u3002\u9810\u8a2d\u662f**None**\uff0c\u4ee3\u8868**\u6bcf\u65e5**\u90fd\u4ea4\u6613\u3002</li> <li> <p><code>rebalance_date_rule</code>\u8207<code>tradeday</code>\u8acb\u64c7\u4e00\u8a2d\u5b9a\uff0c\u82e5\u5169\u8005\u7686\u8a2d\u5b9a\uff0c\u5247\u6703\u4ee5<code>rebalance_date_rule</code>\u70ba\u4e3b\u3002  </p> </li> <li> <p>rebalance_date_rule(EventRule, optional)\uff0d</p> </li> <li>\u4ea4\u6613\u983b\u7387\uff0c\u8a2d\u5b9a\u56fa\u5b9a\u7684\u4ea4\u6613\u983b\u7387\u3002\u9810\u8a2d\u662f**None**\uff0c\u4ee3\u8868**\u6bcf\u65e5**\u90fd\u4ea4\u6613\u3002</li> <li><code>rebalance_date_rule</code>\u8207<code>tradeday</code>\u8acb\u64c7\u4e00\u8a2d\u5b9a\uff0c\u82e5\u5169\u8005\u7686\u8a2d\u5b9a\uff0c\u5247\u6703\u4ee5<code>rebalance_date_rule</code>\u70ba\u4e3b\u3002</li> <li> <p>EventRule\uff1a<code>zipline.utils.events.EventRule</code>\u3002\u53ef\u4f7f\u7528\u7684<code>rebalance_date_rule</code>\u53c3\u8003zipline.api.date_rules\u3002  </p> </li> <li> <p>stocklist (list[str], optional)\uff0d\u4ea4\u6613\u6e05\u55ae\uff0c\u9650\u5236\u53ea\u80fd\u4ea4\u6613\u9019\u500b\u6e05\u55ae\u4e2d\u7684\u80a1\u7968\u3002\u9810\u8a2d\u662f**None**\uff0c\u4ee3\u8868\u4f7f\u7528\u6240\u6709bundle\u4e2d\u7684\u80a1\u7968\u3002  </p> </li> <li> <p>benchmark (str, optional)\uff0d\u6307\u6578\u540d\u7a31\uff0c\u7528\u4f86\u8207\u6295\u8cc7\u7d44\u5408\u5831\u916c\u7387\u6bd4\u8f03\u3002\u9810\u8a2d\u662f<code>'IR0001'</code>\uff0c\u4ee3\u8868**\u53f0\u7063\u767c\u884c\u91cf\u52a0\u6b0a\u80a1\u50f9\u5831\u916c\u6307\u6578**\u3002  </p> </li> <li> <p>zero_treasury_returns (bool, optional)\uff0d</p> </li> <li>\u662f\u5426\u5c07\u7121\u98a8\u96aa\u5229\u7387\u8a2d\u5b9a\u70ba0\uff0c\u9810\u8a2d\u662f**True**\uff0c\u4ee3\u8868\u8a2d\u5b9a\u70ba0\u3002\u56e0\u6b64\u4f7f\u7528<code>algo.run()</code>\u7522\u51fa\u7684\u56de\u6e2c\u5831\u8868\u4e2d\uff0c<code>treasury_return</code>\u8207<code>treasury_period_return</code>\u7686\u6703\u662f0\u3002</li> <li> <p>\u82e5\u8a2d\u5b9a\u70ba**False**\uff0c\u5247\u6703\u8017\u8cbb\u984d\u5916API\u6d41\u91cf\uff0c\u4e26\u53d6\u5f97\u7b2c\u4e00\u9280\u884c\u4e00\u5e74\u671f\u5b9a\u5b58\u5229\u7387\u4f5c\u70ba\u7121\u98a8\u96aa\u5229\u7387\u3002  </p> </li> <li> <p>slippage_model (SlippageModel, optional)\uff0d</p> </li> <li>\u8a2d\u5b9a\u6ed1\u50f9\u6a21\u578b\u3002\u9810\u8a2d\u70ba<code>slippage.VolumeShareSlippage(volume_limit=0.025, price_impact=0.1)</code>\u3002\u53ef\u4f7f\u7528\u7684\u6a21\u578b\u53c3\u8003\uff1alecture/Zipline Slippage.ipynb</li> <li> <p>SlippageModel\uff1a<code>zipline.finance.slippage.SlippageModel</code>\u3002</p> </li> <li> <p>commission_model (CommissionModel, optional)\uff0d</p> </li> <li>\u8a2d\u5b9a\u624b\u7e8c\u8cbb\u6a21\u578b\u3002\u9810\u8a2d\u70ba<code>commission.Custom_TW_Commission(min_trade_cost=20, discount=1.0, tax = 0.003)</code>\u3002\u53ef\u4f7f\u7528\u7684\u6a21\u578b\u53c3\u8003\uff1alecture/Zipline Commission Models.ipynb</li> <li> <p>CommissionModel\uff1a<code>zipline.finance.commission.CommissionModel</code></p> </li> <li> <p>max_leverage (float, optional)\uff0d\u69d3\u687f\u9650\u5236\uff0c\u9810\u8a2d = 0.8\u3002  </p> </li> <li> <p>limit_buy_multiplier (float, optional)\uff0d</p> </li> <li>\u8cb7\u9032\uff0f\u56de\u88dc\u6642\u7684limit_price\u4e58\u6578\uff0c\u82e5\u6709\u63d0\u4f9b\u5247limit_price = \u4e0b\u55ae\u6642\u6700\u8fd1\u4e00\u7b46\u6536\u76e4\u50f9 * <code>limit_buy_multiplier</code>\u3002</li> <li> <p>\u9810\u8a2d\u70ba**None**\uff0c\u4ee3\u8868**\u4e0d\u8a2d\u5b9a**\u8cb7\u9032\uff0f\u56de\u88dc\u6642\u7684limit_price\u3002  </p> </li> <li> <p>limit_sell_multiplier (float, optional)\uff0d</p> </li> <li>\u8ce3\u51fa\uff0f\u653e\u7a7a\u6642\u7684limit_price\u4e58\u6578\uff0c\u82e5\u6709\u63d0\u4f9b\u5247limit_price = \u4e0b\u55ae\u6642\u6700\u8fd1\u4e00\u7b46\u6536\u76e4\u50f9 * <code>limit_sell_multiplier</code>\u3002</li> <li> <p>\u9810\u8a2d\u70ba**None**\uff0c\u4ee3\u8868**\u4e0d\u8a2d\u5b9a**\u8ce3\u51fa\uff0f\u653e\u7a7a\u6642\u7684limit_price\u3002  </p> </li> <li> <p>allow_short (bool, optional)\uff0d\u662f\u5426\u5141\u8a31\u653e\u7a7a\u80a1\u7968\uff0c\u9810\u8a2d\u70ba**False**\uff0c\u4ee3\u8868\u50c5\u80fd\u505a\u591a\u3002\u82e5\u8a2d\u5b9a\u70ba**True**\uff0c\u5247pipeline\u4e2d\u9700\u8981\u6709<code>shorts</code>\u6b04\u4f4d\u3002  </p> </li> <li> <p>cancel_datedelta (int, optional)\uff0d\u8a02\u55ae\u5e7e\u5929\u5167\u672a\u5b8c\u5168\u6210\u4ea4\u5c31\u53d6\u6d88\u3002\u9810\u8a2d\u662f\u5728**\u4e0b\u4e00\u6b21\u518d\u5e73\u8861**\u6642\u53d6\u6d88\u3002 </p> </li> <li> <p>custom_weight (bool, optional)\uff0d</p> </li> <li>\u662f\u5426\u8981\u4f7f\u7528\u81ea\u8a02\u7684\u52a0\u6b0a\u6b0a\u6578\uff0c\u9810\u8a2d\u70ba**False**\uff0c\u4ee3\u8868\u4e0d\u4f7f\u7528\uff08\u5373\u7b49\u6b0a\u91cd\u52a0\u6b0a\uff09\u3002</li> <li> <p>\u82e5\u8a2d\u5b9a\u70ba**True**\uff0c\u5247pipeline\u4e2d\u9700\u8981\u6709<code>long_weights</code>\uff08\u82e5<code>allow_short</code>=True\uff0c\u5247\u4e5f\u9808\u6709<code>short_weights</code>\uff09\u6b04\u4f4d\u3002</p> </li> <li> <p>custom_loader (PipelineLoader , optional)\uff0d</p> </li> <li>\u7528\u4f86\u53d6\u5f97\u50f9\u91cf\u4ee5\u5916\u8cc7\u6599\uff0c\u9810\u8a2d\u662f**None**\uff0c\u4ee3\u8868\u4e0d\u4f7f\u7528\u50f9\u91cf\u3001<code>TQDataSet</code>\u8207<code>TQAltDataSet</code>\u4ee5\u5916\u8cc7\u6599\u3002</li> <li>TQDataSet\uff1a<code>zipline.pipeline.data.TQDataSet</code></li> <li>TQAltDataSet\uff1a<code>zipline.pipeline.data.TQAltDataSet</code></li> <li> <p>\u76ee\u524d\u652f\u63f4\u7684<code>PipelineLoader</code>\uff1a</p> <ul> <li>DataFrameLoader\uff08<code>zipline.pipeline.loaders.frame.DataFrameLoader</code>\uff09\u3002</li> </ul> </li> <li> <p>pipeline (Pipeline)\uff0d</p> </li> <li>\u8981\u7528\u4f86\u7522\u51fa\u4ea4\u6613\u6e05\u55ae\u6216\u6b0a\u91cd\u7684pipeline\uff0c\u70ba\u5fc5\u8981\u53c3\u6578\u3002</li> <li> <p>Pipeline\uff1a<code>zipline.pipeline.Pipeline</code></p> </li> <li> <p>analyze (callable[(context, pd.DataFrame) -&gt; None], optional)\uff0d</p> </li> <li>\u50b3\u5165<code>analyze</code>\u51fd\u5f0f\u4ee5\u7528\u65bc\u56de\u6e2c\uff0c\u51fd\u5f0f\u4e2d\u5fc5\u9808\u8981\u6709<code>context</code>\u8207<code>perf</code>\u53c3\u6578\uff0c\u9810\u8a2d\u662f**None**\u3002</li> <li> <p>\u6b64\u51fd\u5f0f\u5728**\u56de\u6e2c\u7d50\u675f**\u6642\u88ab\u4e00\u6b21\u6027\u547c\u53eb\uff0c\u4e26\u7e6a\u88fd\u81ea\u8a02\u5716\u8868\u3002</p> </li> <li> <p>record_vars (callable[(context, BarData) -&gt; None], optional)\uff0d</p> </li> <li>\u50b3\u5165<code>record_vars</code>\u51fd\u5f0f\u4ee5\u7528\u65bc\u56de\u6e2c\uff0c\u51fd\u5f0f\u4e2d\u5fc5\u9808\u8981\u6709<code>context</code>\u8207<code>data</code>\u53c3\u6578\uff0c\u9810\u8a2d\u662f**None**\u3002</li> <li> <p>\u6b64\u51fd\u5f0f\u5728**\u6bcf\u500b\u4ea4\u6613\u65e5\u7d50\u675f**\u6642\u88ab\u547c\u53eb\uff0c\u4e26\u628a\u6307\u5b9a\u8cc7\u6599\u7d00\u9304\u65bc\u56de\u6e2c\u7d50\u679c\u7684DataFrame\u4e2d\u3002</p> </li> <li> <p>get_record_vars (bool, optional)\uff0d</p> </li> <li>\u662f\u5426\u7522\u51fa<code>record_vars</code>\u4e2d<code>record</code>\u65b9\u6cd5\u6240\u8a18\u9304\u7684\u8b8a\u6578\uff0c\u9810\u8a2d\u70ba**False**\uff0c\u4ee3\u8868\u4e0d\u7522\u51fa\u3002</li> <li> <p>\u82e5\u8a2d\u5b9a\u70ba**True**\uff0c\u5247\u53ef\u7528<code>algo.dict_record_vars</code>\u53d6\u51fa\u3002</p> </li> <li> <p>get_transaction_detail (bool, optional)\uff0d</p> </li> <li>\u662f\u5426\u7522\u51fa\u4ea4\u6613\u7d50\u679c\uff0c\u9810\u8a2d\u70ba**False**\uff0c\u4ee3\u8868\u4e0d\u7522\u51fa\u3002</li> <li> <p>\u82e5\u8a2d\u5b9a\u70ba**True**\uff0c\u5247\u53ef\u7528<code>algo.positions</code>\u3001<code>algo.transactions</code>\u3001<code>algo.orders</code>\u65b9\u5f0f\u53d6\u51fa\u4ea4\u6613\u7d50\u679c\u3002</p> </li> <li> <p>order_filling_policy ({'next_bar','current_bar'}, optional)\uff0d</p> </li> <li>\u8a2d\u5b9a\u4ea4\u6613\u65b9\u5f0f\uff0c\u9810\u8a2d\u70ba**next_bar**\uff0c\u4ee3\u8868\u7576\u5929\u6536\u76e4\u5f8c\u4e0b\u55ae\uff0c\u9694\u4e00\u65e5\u6536\u76e4\u524d\u6210\u4ea4\uff0c\u4e5f\u5c31\u662f\u539f\u5148\u7684\u56de\u6e2c\u65b9\u5f0f\u3002</li> <li>\u82e5\u8981\u7576\u5929\u958b\u76e4\u524d\u4e0b\u55ae\uff0c\u6536\u76e4\u524d\u6210\u4ea4\uff0c\u5247\u9700\u6307\u5b9a\u8a2d\u5b9a\u70ba**current_bar**\u3002</li> </ul>"},{"location":"example/documents55/#returns_3","title":"Returns:","text":"<pre><code>algo\n</code></pre>"},{"location":"example/documents55/#return-type","title":"Return type:","text":"<pre><code>zipline.algo.pipeline_algo.TargetPercentPipeAlgo\n</code></pre> <p>run()</p> <p>\u57f7\u884c\u6f14\u7b97\u6cd5</p> <p>Returns: - perf\uff08\u56de\u6e2c\u5831\u8868\uff09</p> <p>Return type: - pd.DataFrame</p> <p></p>"},{"location":"example/documents55/#class-ziplineapidate_rules","title":"class zipline.api.date_rules","text":"<p>Return to Menu</p> <ul> <li>\u70baFactory API\uff0c\u4e3b\u8981\u7528\u4f86\u50b3\u5165<code>zipline.api.schedule_function</code>\u7684<code>date_rule</code>\u53c3\u6578\u4e2d\u3002\u7528\u4f86\u6c7a\u5b9a\u8981\u4ee5\u4f55\u7a2e\u983b\u7387\u89f8\u767c\u67d0\u9805\u898f\u5247\u3002</li> <li>\u4f7f\u7528\u524d\u8acb\u5148import\uff1a<code>from zipline.api import date_rules</code>\u3002</li> </ul> <p>static every_day()</p> <p>\u6bcf\u65e5\u89f8\u767c\u67d0\u9805\u898f\u5247\u3002</p> <p>Returns: - rule</p> <p>Return type: - zipline.utils.events.EventRule</p> <p></p> <p>static month_end(days_offset=0)</p> <p>\u6bcf\u500b\u6708\u5e95\u89f8\u767c\u67d0\u9805\u898f\u5247\uff0c\u4e26\u53ef\u4ee5\u9078\u64c7\u6027\u7684\u65b0\u589e\u4e00\u500b\u504f\u79fb\u91cf\u3002</p> <p>Parameters: - days_offset(int , optional)\uff1a   - \u5728\u6708\u5e95\u4e4b\u524d\u7684\u7b2c\u5e7e\u500b\u4ea4\u6613\u65e5\uff08\u75310\u958b\u59cb\u8a08\u7b97\uff09\u89f8\u767c\u67d0\u9805\u898f\u5247\u3002\u9810\u8a2d\u503c\u662f0\uff0c\u5373\u5728\u6708\u5e95\u7684\u6700\u5f8c\u4e00\u500b\u4ea4\u6613\u65e5\u89f8\u767c\u3002   - days_offset\u53ea\u80fd\u4ecb\u65bc0~22\u4e4b\u9593\u3002 </p> <p>Returns: - rule</p> <p>Return type: - zipline.utils.events.EventRule</p> <p></p> <p>static month_start(days_offset=0)</p> <p>\u6bcf\u500b\u6708\u521d\u89f8\u767c\u67d0\u9805\u898f\u5247\uff0c\u4e26\u53ef\u4ee5\u9078\u64c7\u6027\u7684\u65b0\u589e\u4e00\u500b\u504f\u79fb\u91cf\u3002</p> <p>Parameters: - days_offset(int , optional)\uff1a   - \u5728\u6708\u521d\u4e4b\u5f8c\u7684\u7b2c\u5e7e\u500b\u4ea4\u6613\u65e5\uff08\u75310\u958b\u59cb\u8a08\u7b97\uff09\u624d\u89f8\u767c\u67d0\u9805\u898f\u5247\u3002\u9810\u8a2d\u503c\u662f0\uff0c\u5373\u5728\u6708\u521d\u7684\u7b2c\u4e00\u500b\u4ea4\u6613\u65e5\u89f8\u767c\u3002   - days_offset\u53ea\u80fd\u4ecb\u65bc0~22\u4e4b\u9593\u3002 </p> <p>Returns: - rule</p> <p>Return type: - zipline.utils.events.EventRule</p> <p></p> <p>static week_end(days_offset=0)</p> <p>\u5728\u6bcf\u5468\u6700\u5f8c\u4e00\u500b\u4ea4\u6613\u65e5\u89f8\u767c\u67d0\u9805\u898f\u5247\uff0c\u4e26\u53ef\u4ee5\u9078\u64c7\u6027\u7684\u65b0\u589e\u4e00\u500b\u504f\u79fb\u91cf\u3002</p> <p>Parameters: - days_offset(int , optional)\uff1a   - \u5728\u6bcf\u5468\u5012\u6578\u7b2c\u5e7e\u500b\u4ea4\u6613\u65e5\uff08\u75310\u958b\u59cb\u8a08\u7b97\uff09\u89f8\u767c\u67d0\u9805\u898f\u5247\u3002\u9810\u8a2d\u503c\u662f0\uff0c\u5373\u5728\u6bcf\u5468\u7684\u6700\u5f8c\u4e00\u500b\u4ea4\u6613\u65e5\u89f8\u767c\u3002   - days_offset\u53ea\u80fd\u4ecb\u65bc0~4\u4e4b\u9593\u3002 </p> <p>Returns: - rule</p> <p>Return type: - zipline.utils.events.EventRule</p> <p></p> <p>static week_start(days_offset=0)</p> <p>\u5728\u6bcf\u5468\u7684\u7b2c\u4e00\u500b\u4ea4\u6613\u65e5\u89f8\u767c\u67d0\u9805\u898f\u5247\uff0c\u4e26\u53ef\u4ee5\u9078\u64c7\u6027\u7684\u65b0\u589e\u4e00\u500b\u504f\u79fb\u91cf\u3002</p> <p>Parameters: - days_offset(int , optional)\uff1a   - \u5728\u6bcf\u5468\u7684\u7b2c\u5e7e\u500b\u4ea4\u6613\u65e5\uff08\u75310\u958b\u59cb\u8a08\u7b97\uff09\u624d\u89f8\u767c\u67d0\u9805\u898f\u5247\u3002\u9810\u8a2d\u503c\u662f0\uff0c\u5373\u5728\u6bcf\u5468\u7684\u7b2c\u4e00\u500b\u4ea4\u6613\u65e5\u89f8\u767c\u3002   - days_offset\u53ea\u80fd\u4ecb\u65bc0~4\u4e4b\u9593\u3002</p> <p>Returns: - rule</p> <p>Return type: - zipline.utils.events.EventRule</p> <p></p>"},{"location":"example/documents55/#7-examples","title":"7. Examples","text":"<p>Return to Menu</p> <pre><code>from zipline.utils.algo_instance import get_algo_instance, set_algo_instance\nfrom zipline.algo.pipeline_algo import TargetPercentPipeAlgo\n</code></pre> <p></p>"},{"location":"example/documents55/#case-1-start_sessionend_session","title":"Case 1 \u8abf\u6574start_session\u8207end_session","text":"<p>Return to Menu</p> <p>\u50c5\u8abf\u6574<code>start_session</code>\u8207<code>end_session</code>\u3002\u5176\u9918\u4fdd\u6301\u9810\u8a2d\u503c\u3002</p> <p>\u4ee5\u4e0b\u8a2d\u5b9apipeline\uff08<code>make_pipeline()</code>\uff09\uff0c\u4e26\u5b9a\u7fa9<code>longs</code>\u6b04\u4f4d\u7528\u4f86\u5224\u65b7\u9808\u6301\u6709\u7684\u80a1\u7968\u3002\u5728<code>longs</code>\u6b04\u4f4d\u4e2d\u8981\u6301\u6709\u7684\u80a1\u7968\u6a19\u8a18\u70baTrue\uff0c\u53cd\u4e4b\u6a19\u8a18\u70baFalse\u3002</p> <pre><code>from zipline.data import bundles\n\nbundle = bundles.load(bundle_name)\n\ndef make_pipeline():\n    rsi = RSI()\n    longs = rsi.top(2, mask = ~SingleAsset(bundle.asset_finder.lookup_symbol('IR0001', as_of_date=None)))\n\n    return Pipeline(\n\n        columns = {\n            \"longs\" : longs,\n        }\n    )\n</code></pre> <pre><code>algo_start = '2023-09-21'\nalgo_start_dt = pd.Timestamp(algo_start, tz = tz)\n\nresult = run_pipeline(make_pipeline(), algo_start, end)\nresult.query('longs == True')\n</code></pre>"},{"location":"example/documents55/#_2","title":"\u57f7\u884c\u6f14\u7b97\u6cd5","text":"<ol> <li>\u5be6\u9ad4\u5316<code>TargetPercentPipeAlgo</code>\u4e26\u547d\u540d\u70ba<code>algo</code>\u3002</li> <li>\u8a2d\u5b9a\u6f14\u7b97\u6cd5\uff1a<code>set_algo_instance(algo)</code></li> <li>\u57f7\u884c\u6f14\u7b97\u6cd5\uff0c\u4e26\u7522\u51fa\u56de\u6e2c\u5831\u8868<code>stats</code>\uff08pd.DataFrame\uff09\uff1a<code>stats = algo.run()</code></li> </ol> <pre><code>algo = TargetPercentPipeAlgo(\n                     start_session=algo_start_dt,\n                     end_session=end_dt,\n                     pipeline=make_pipeline,\n)\n\n# set_algo_instance\nset_algo_instance(algo)\n\n# run\nstats = algo.run()\n</code></pre> <p>\u67e5\u770b\u6f14\u7b97\u6cd5\u4e2d\u7684\u53c3\u6578\u8a2d\u5b9a</p> <pre><code>algo\n</code></pre> <pre><code>stats.T\n</code></pre> <pre><code>positions, transactions, orders = get_transaction_detail(stats)\n</code></pre> <pre><code>transactions\n</code></pre> <pre><code>positions['mv'] = positions['amount'] * positions['last_sale_price']\npositions\n</code></pre> <pre><code>stats.net_leverage\n</code></pre> <p></p>"},{"location":"example/documents55/#case-2-max_leverage","title":"Case 2 \u8abf\u6574max_leverage","text":"<p>Return to Menu</p> <p>\u63a5\u7e8c**Case 1**\uff0c\u591a\u8abf\u6574<code>max_leverage=0.70</code>\uff0c\u5176\u9918\u8207**Case 1**\u76f8\u540c\u3002</p> <pre><code>algo = TargetPercentPipeAlgo(\n                     start_session=algo_start_dt,\n                     end_session=end_dt,\n                     max_leverage=0.70,\n                     pipeline=make_pipeline,\n)\n\n# set_algo_instance\nset_algo_instance(algo)\n\n# run\nstats = algo.run()\n</code></pre> <pre><code>stats.net_leverage\n</code></pre> <p></p>"},{"location":"example/documents55/#case-3-tradeday","title":"Case 3 \u8abf\u6574tradeday","text":"<p>Return to Menu </p> <p>\u63a5\u7e8c**Case 1**\uff0c\u591a\u65b0\u589e<code>tradeday</code>\uff0c\u5176\u9918\u8207**Case 1**\u76f8\u540c\u3002</p> <pre><code># \u8a2d\u5b9a\u518d\u5e73\u8861\u65e5\u671f\nfreq = 'MS'   # QS-JUL  MS W\n_tradeday = list(pd.date_range(start=start_dt, end=end_dt, freq=freq))\ntradeday = [get_calendar(calendar_name).next_open(pd.Timestamp(i)).strftime('%Y-%m-%d') if \\\n           get_calendar(calendar_name).is_session(i)==False else i.strftime('%Y-%m-%d') for i in _tradeday]\ntradeday\n</code></pre> <pre><code>algo_start_dt\n</code></pre> <pre><code>algo = TargetPercentPipeAlgo(\n                     start_session=algo_start_dt,\n                     end_session=end_dt,           \n                     tradeday=tradeday,\n                     pipeline=make_pipeline,\n)\n\n# set_algo_instance\nset_algo_instance(algo)\n\n# run\nstats = algo.run()\n</code></pre> <pre><code>positions, transactions, orders = get_transaction_detail(stats)\n</code></pre> <pre><code>transactions\n</code></pre> <p></p>"},{"location":"example/documents55/#case-4-rebalance_date_rule","title":"Case 4 \u8abf\u6574rebalance_date_rule","text":"<p>Return to Menu </p> <p>\u63a5\u7e8c**Case 1**\uff0c\u591a\u65b0\u589e<code>rebalance_date_rule</code>\uff0c\u4e26\u4fee\u6539<code>start_session</code>\u70ba2023-09-01\uff0c\u5176\u9918\u8207**Case 1**\u76f8\u540c\u3002</p> <pre><code>from zipline.api import date_rules\n\nalgo = TargetPercentPipeAlgo(\n                     start_session=pd.Timestamp('2023-09-01', tz='UTC'),\n                     end_session=end_dt,\n                     pipeline=make_pipeline,\n                     # \u6bcf\u6708\u7684\u7b2c\u56db\u500b\u4ea4\u6613\u65e5\u4e0b\u55ae\n                     rebalance_date_rule=date_rules.month_start(days_offset=3) \n)\n\n# set_algo_instance\nset_algo_instance(algo)\n\n# run\nstats = algo.run()\n</code></pre> <pre><code>positions, transactions, orders = get_transaction_detail(stats)\n</code></pre> <pre><code>orders\n</code></pre> <p></p>"},{"location":"example/documents55/#case-5-slippage_model","title":"Case 5 \u8abf\u6574slippage_model","text":"<p>Return to Menu </p> <p>\u63a5\u7e8c**Case 1**\uff0c\u591a\u65b0\u589e<code>slippage_model</code>\uff0c\u5c07<code>volume_limit</code>\u7531**0.025**\u8abf\u6574\u70ba**0.01**\uff0c\u5176\u9918\u8207**Case 1**\u76f8\u540c\u3002</p> <pre><code>algo = TargetPercentPipeAlgo(\n                     start_session=algo_start_dt,\n                     end_session=end_dt,\n                     pipeline=make_pipeline,\n                     slippage_model=slippage.VolumeShareSlippage(volume_limit=0.01, price_impact=0.1)\n)\n\n# set_algo_instance\nset_algo_instance(algo)\n\n# run\nstats = algo.run()\n</code></pre> <pre><code>positions, transactions, orders = get_transaction_detail(stats)\n</code></pre> <pre><code>orders.query('(symbol == \"1590\") &amp; (created.dt.strftime(\"%Y-%m-%d\") == \"2023-09-25\")')\n</code></pre> <pre><code># 321000 * 1% = 3210(\u80a1) \n\ndf_bundle_price.query('(symbol == \"1590\") &amp; (date.dt.strftime(\"%Y-%m-%d\") == \"2023-09-26\")')[['symbol','date','volume']]\n</code></pre> <pre><code>orders.query('(symbol == \"2885\") &amp; (created.dt.strftime(\"%Y-%m-%d\") == \"2023-09-27\")')\n</code></pre> <pre><code># 10738000 * 1% = 107380(\u80a1) \n\ndf_bundle_price.query('(symbol == \"2885\") &amp; (date.dt.strftime(\"%Y-%m-%d\") == \"2023-09-28\")')[['symbol','date','volume']]\n</code></pre> <p></p>"},{"location":"example/documents55/#case-6-stocklist","title":"Case 6 \u8abf\u6574stocklist","text":"<p>Return to Menu </p> <p>\u63a5\u7e8c**Case 1**\uff0c\u591a\u65b0\u589e<code>stocklist</code>\uff0c\u5176\u9918\u8207**Case 1**\u76f8\u540c\u3002  </p> <p>\u8a3b1\uff1a<code>stocklist</code>\u9650\u5236\u662f\u5728pipeline\u57f7\u884c\u5b8c\u5f8c\u3002  </p> <p>\u8a3b2\uff1a\u4e5f\u53ef\u4ee5\u4f7f\u7528pipeline\u76f4\u63a5\u9650\u5236\u80a1\u7968\u6c60\u3002</p> <pre><code>len(StockList)\n</code></pre> <pre><code>_StockList = [i for i in StockList if i!='2886']\nlen(_StockList)\n</code></pre> <pre><code>algo = TargetPercentPipeAlgo(\n                     start_session=algo_start_dt,\n                     end_session=end_dt,            \n                     stocklist=_StockList,\n                     pipeline=make_pipeline,\n)\n\n# set_algo_instance\nset_algo_instance(algo)\n\n# run\nstats = algo.run()\n</code></pre> <pre><code>positions, transactions, orders = get_transaction_detail(stats)\n</code></pre> <pre><code>positions\n</code></pre> <p></p>"},{"location":"example/documents55/#case-7-order_filling_policy","title":"Case 7 \u8abf\u6574order_filling_policy","text":"<p>Return to Menu </p> <p>\u63a5\u7e8c**Case 1**\uff0c\u591a\u65b0\u589e<code>order_filling_policy='current_bar'</code>\uff0c\u5176\u9918\u8207**Case 1**\u76f8\u540c\u3002</p> <pre><code>algo = TargetPercentPipeAlgo(\n                     start_session=algo_start_dt,\n                     end_session=end_dt,\n                     pipeline=make_pipeline,\n                     order_filling_policy='current_bar'\n)\n\n# set_algo_instance\nset_algo_instance(algo)\n\n# run\nstats = algo.run()\n</code></pre> <pre><code>positions, transactions, orders = get_transaction_detail(stats)\n</code></pre> <pre><code>result.loc['2023-09-22'].query('longs == True')\n</code></pre> <pre><code># \u5f9e`orders`\u4e2d\u53ef\u4ee5\u767c\u73fecreated=2023-09-22\u7684\u55ae\u5728\u7576\u5929\u5c31\u6210\u4ea4\uff08status\u75310\u8b8a\u70ba1\uff09\norders.loc['2023-09-22']\n</code></pre> <p></p>"},{"location":"example/documents55/#case-8-allow_short","title":"Case 8 \u8abf\u6574allow_short","text":"<p>Return to Menu </p> <p>\u63a5\u7e8c**Case 1**\uff0c\u591a\u65b0\u589e<code>allow_short=True</code>\uff0c\u5176\u9918\u8207**Case 1**\u76f8\u540c\u3002  </p> <p>\u4ee5\u4e0b\u8a2d\u5b9apipeline\uff08<code>make_pipeline()</code>\uff09\uff0c\u4e26\u5b9a\u7fa9<code>shorts</code>\u6b04\u4f4d\u7528\u4f86\u5224\u65b7\u9808\u653e\u7a7a\u7684\u80a1\u7968\u3002\u5728<code>shorts</code>\u6b04\u4f4d\u4e2d\u8981\u653e\u7a7a\u7684\u80a1\u7968\u6a19\u8a18\u70baTrue\uff0c\u53cd\u4e4b\u6a19\u8a18\u70baFalse\u3002</p> <pre><code>def make_pipeline():\n    rsi = RSI()\n    longs = rsi.top(2, mask = ~SingleAsset(bundle.asset_finder.lookup_symbol('IR0001', as_of_date=None)))\n    shorts = rsi.bottom(2, mask = ~SingleAsset(bundle.asset_finder.lookup_symbol('IR0001', as_of_date=None)))\n\n    return Pipeline(\n        columns = {\n            \"longs\" : longs,\n            \"shorts\" : shorts\n        }\n    )\n</code></pre> <pre><code>result = run_pipeline(make_pipeline(), algo_start, end)\nresult.query('(longs == True) | (shorts == True)' )\n</code></pre> <pre><code>algo = TargetPercentPipeAlgo(\n                     start_session=algo_start_dt,\n                     end_session=end_dt,\n                     allow_short=True,\n                     pipeline=make_pipeline,\n)\n\n# set_algo_instance\nset_algo_instance(algo)\n\n# run\nstats = algo.run()\n</code></pre> <pre><code>positions, transactions, orders = get_transaction_detail(stats)\n</code></pre> <pre><code># \u7576\u5929\u53d6\u6d88\norders.query('(symbol == \"2912\") &amp; (created.dt.strftime(\"%Y-%m-%d\") == \"2023-09-28\")')\n</code></pre> <pre><code># 343000 * 2.5% = 8575(\u80a1) \n\ndf_bundle_price.query('(symbol == \"2912\") &amp; (date.dt.strftime(\"%Y-%m-%d\") == \"2023-10-02\")')[['symbol','date','volume']]\n</code></pre> <pre><code>positions['mv'] = positions['amount'] * positions['last_sale_price']\npositions.query('(symbol == \"2912\")')\n</code></pre> <p></p>"},{"location":"example/documents55/#case-9-cancel_datedelta","title":"Case 9 \u8abf\u6574cancel_datedelta","text":"<p>Return to Menu </p> <p>\u63a5\u7e8c**Case 8**\uff0c\u591a\u65b0\u589e<code>cancel_datedelta=2</code>\uff0c\u5176\u9918\u8207**Case 8**\u76f8\u540c\u3002  </p> <pre><code>algo = TargetPercentPipeAlgo(\n                     start_session=algo_start_dt,\n                     end_session=end_dt,\n                     allow_short=True,\n                     cancel_datedelta=2,\n                     pipeline=make_pipeline,\n)\n\n# set_algo_instance\nset_algo_instance(algo)\n\n# run\nstats = algo.run()\n</code></pre> <pre><code>result = run_pipeline(make_pipeline(), algo_start, end)\nresult.query('(longs == True) | (shorts == True)' )\n</code></pre> <pre><code>positions, transactions, orders = get_transaction_detail(stats)\n</code></pre> <pre><code>orders.query('(symbol == \"2912\") &amp; (created.dt.strftime(\"%Y-%m-%d\") == \"2023-09-28\")')\n</code></pre> <pre><code># 10/02\uff1a343000 * 2.5% = 8575(\u80a1) \n# 10/03\uff1a808000 * 2.5% = 20200(\u80a1) \n\ndf_bundle_price.query('(symbol == \"2912\") &amp; (date.dt.strftime(\"%Y-%m-%d\")&gt;=\"2023-10-02\")')\\\n                 [['symbol','date','volume']]\n</code></pre> <pre><code>positions['mv'] = positions['amount'] * positions['last_sale_price']\npositions.query('(symbol == \"2912\")')\n</code></pre> <p></p>"},{"location":"example/documents55/#case-10-limit_buy_multiplier","title":"Case 10 \u8abf\u6574limit_buy_multiplier","text":"<p>Return to Menu </p> <p>\u63a5\u7e8c**Case 9**\uff0c\u591a\u8a2d\u5b9a<code>limit_buy_multiplier=1.015</code>\uff0c\u5176\u9918\u8207**Case 9**\u76f8\u540c\u3002</p> <pre><code>result = run_pipeline(make_pipeline(), algo_start, end)\nresult.query('(longs == True) | (shorts == True)' )\n</code></pre> <pre><code>algo = TargetPercentPipeAlgo(\n                     start_session=algo_start_dt,\n                     end_session=end_dt,\n                     limit_buy_multiplier=1.015,\n                     allow_short=True,\n                     cancel_datedelta=2,\n                     pipeline=make_pipeline,\n)\n\n# set_algo_instance\nset_algo_instance(algo)\n\n# run\nstats = algo.run()\n</code></pre> <pre><code>positions, transactions, orders = get_transaction_detail(stats)\n</code></pre> <pre><code>orders\n</code></pre> <pre><code>orders.query('(symbol == \"1590\") &amp; (created.dt.strftime(\"%Y-%m-%d\") == \"2023-09-28\")')\n</code></pre> <pre><code># 9/28 979 * 1.015 = 993.685\ndf_bundle_price.query('(symbol == \"1590\") &amp; (date.dt.strftime(\"%Y-%m-%d\")&gt;=\"2023-09-28\")')\\\n                 [['symbol','date','close']]\n</code></pre> <p></p>"},{"location":"example/documents55/#case-11-custom_weightanalyzerecord_varsget_record_varsget_transaction_detail","title":"Case 11 \u8abf\u6574custom_weight\u3001analyze\u3001record_vars\u3001get_record_vars\u8207get_transaction_detail","text":"<p>Return to Menu </p> <p>\u63a5\u7e8c**Case 10**\uff0c\u591a\u8a2d\u5b9a<code>custom_weight</code>=True\u3001<code>analyze</code>\u3001<code>record_vars</code>\u3001<code>get_record_vars</code>=True\u8207<code>get_transaction_detail</code>=True\uff0c\u5176\u9918\u8207**Case 10**\u76f8\u540c\u3002</p> <pre><code>class Weight(CustomFactor):\n\n    inputs =  [TQAltDataSet.Market_Cap_Dollars] \n    outputs = [\"Market_Cap_Dollars\",\"Sum_Market_Cap_Dollars\",\"Weight\"]   \n    window_length = 1\n\n    def compute(self, today, assets, out, Market_Cap_Dollars):\n\n        out.Market_Cap_Dollars[:] = Market_Cap_Dollars\n        out.Sum_Market_Cap_Dollars[:] = np.nansum(Market_Cap_Dollars, axis=1)\n        out.Weight[:] = Market_Cap_Dollars / np.sum(Market_Cap_Dollars, axis=1)\n</code></pre> <pre><code>def make_pipeline():\n\n    rsi = RSI()\n    longs = rsi.top(2, mask = ~SingleAsset(bundle.asset_finder.lookup_symbol('IR0001', as_of_date=None)))\n    shorts = rsi.bottom(2, mask = ~SingleAsset(bundle.asset_finder.lookup_symbol('IR0001', as_of_date=None)))\n\n    return Pipeline(\n\n        columns = {\n            \"Market_Cap_Dollars\":Weight().Market_Cap_Dollars,        \n            \"longs\" : longs,\n            \"shorts\" : shorts,\n            \"long_weights\" : Weight(mask=longs).Weight,\n            \"short_weights\" : Weight(mask=shorts).Weight\n        }\n    )\n</code></pre> <pre><code>def analyze(context, perf):\n\n    fig = plt.figure(figsize=(16, 24), dpi=400)\n\n    # First chart(\u7d2f\u7a4d\u5831\u916c)\n    ax = fig.add_subplot(611) \n    ax.set_title('Strategy Results') \n    ax.plot(perf['algorithm_period_return'],\n            linestyle='-', \n            label='algorithm period return',\n            linewidth=3.0)\n    ax.plot(perf['benchmark_period_return'],\n            linestyle='-', \n            label='benchmark period return',\n            linewidth=3.0)\n    ax.legend()\n    ax.grid(False)\n\n    # Second chart(returns)\n    ax = fig.add_subplot(612, sharex=ax)       \n    ax.plot(perf['returns'],\n            linestyle='-', \n            label='returns',\n            linewidth=3.0)\n    ax.legend()\n    ax.grid(False)\n\n    # Third chart(ending_cash) -&gt; \u89c0\u5bdf\u662f\u5426\u8d85\u8cb7\n    ax = fig.add_subplot(613, sharex=ax)\n    ax.plot(perf['ending_cash'], \n            label='ending_cash',\n            linestyle='-',\n            linewidth=3.0)\n    ax.axhline(y=1, c='r', linewidth=1)\n    ax.legend()\n    ax.grid(False)\n\n    # Forth chart(shorts_count) -&gt; \u89c0\u5bdf\u662f\u5426\u653e\u7a7a\n    ax = fig.add_subplot(614, sharex=ax)\n    ax.plot(perf['shorts_count'], \n            label='shorts_count',\n            linestyle='-',\n            linewidth=3.0)\n    ax.yaxis.set_major_locator(MaxNLocator(integer=True))\n    ax.axhline(y=0, c='r', linewidth=1)\n    ax.legend()\n    ax.grid(False)\n\n    # Fifth chart(longs_count)\n    ax = fig.add_subplot(615, sharex=ax)\n    ax.plot(perf['longs_count'], \n            label='longs_count',\n            linestyle='-',\n            linewidth=3.0)\n    ax.yaxis.set_major_locator(MaxNLocator(integer=True))\n    ax.axhline(y=0, c='r', linewidth=1)\n    ax.legend()\n    ax.grid(False) \n\n    # Sixth chart(weights) -&gt; \u89c0\u5bdf\u6bcf\u65e5\u6301\u80a1\u6b0a\u91cd\n    ax = fig.add_subplot(616, sharex=ax)        \n    weights = pd.concat([df.to_frame(d) for d, df in perf['daily_weights'].dropna().items()],axis=1).T\n\n    for i in weights.columns:\n        df = weights.loc[:,i]\n        ax.scatter(df.index,df.values,marker='.', s=5, c='grey', label='daily_weights')\n    ax.axhline(y=0, c='r', linewidth=1)\n    ax.legend(['daily_weights'])\n    ax.grid(False)\n\n    fig.tight_layout()\n\ndef record_vars(context, data):\n    \"\"\"\n    Plot variables at the end of each day.\n    \"\"\"\n\n    record(daily_weights=context.daily_weights,\n           Market_Cap_Dollars=context.output.Market_Cap_Dollars\n          )\n</code></pre> <pre><code>algo = TargetPercentPipeAlgo(\n                     start_session=algo_start_dt,\n                     end_session=end_dt,\n                     limit_buy_multiplier=1.015,\n                     allow_short=True,\n                     custom_weight=True,\n                     cancel_datedelta=2,\n                     pipeline=make_pipeline,\n                     analyze=analyze,\n                     record_vars=record_vars,\n                     get_record_vars=True,\n                     get_transaction_detail=True\n)\n\n# set_algo_instance\nset_algo_instance(algo)\n\n# run\nstats = algo.run()\n</code></pre> <pre><code>result = run_pipeline(make_pipeline(), algo_start, end)\nresult.query('(longs == True) | (shorts == True)' )\n</code></pre>"},{"location":"example/documents55/#algopositions","title":"algo.positions","text":"<pre><code># \u8a08\u7b97\u5be6\u969b\u80a1\u7968\u90e8\u4f4d\u7684weight = \u500b\u80a1\u6301\u80a1\u5e02\u503c\uff0f\u6240\u6709\u80a1\u7968\u90e8\u4f4d\u7684\u6301\u80a1\u5e02\u503c\u52a0\u7e3d\npos = algo.positions\n\npos['mv'] = pos['amount'] * pos['last_sale_price']\n\npositive_sum = pos[pos['mv'] &gt; 0].groupby(level=0)['mv'].sum()\nnegative_sum = - pos[pos['mv'] &lt; 0].groupby(level=0)['mv'].sum()\npos['sum'] = np.where(pos['mv'] &gt; 0,\n                            pos.index.map(positive_sum),\n                            pos.index.map(negative_sum))\n\npos['weight'] = pos['mv'] / pos['sum']\npos\n</code></pre>"},{"location":"example/documents55/#algodict_record_vars","title":"algo.dict_record_vars","text":"<pre><code>record_vars = algo.dict_record_vars\n</code></pre> <pre><code># \u5be6\u969b\u6301\u80a1\u5e02\u503c = \u500b\u80a1\u6301\u80a1\u5e02\u503c\uff0f\u6240\u6709\u80a1\u7968\u90e8\u4f4d\u7684\u6301\u80a1\u5e02\u503c\u52a0\u7e3d * max_leverage\nrecord_vars['daily_weights']\n</code></pre> <pre><code># \u500b\u80a1\u7e3d\u5e02\u503c\nrecord_vars['Market_Cap_Dollars']\n</code></pre> <p>Return to Menu </p>"},{"location":"example/documents56/","title":"Schedule_function \u51fd\u6578\u4ecb\u7d39","text":"<p><code>schedule_function()</code> \u662f Zipline \u63d0\u4f9b\u7684\u4e00\u500b\u6392\u7a0b\u5de5\u5177\uff0c\u7528\u4f86**\u5b89\u6392\u67d0\u500b\u51fd\u6578\u5728\u7279\u5b9a\u6642\u9593\u9ede\u57f7\u884c**\uff0c\u4f8b\u5982\u6bcf\u65e5\u958b\u76e4\u3001\u6bcf\u9031\u4e00\u3001\u6216\u6bcf\u6708\u7684\u6700\u5f8c\u4e00\u500b\u4ea4\u6613\u65e5\u3002</p> <p>\u9019\u8b93\u4f60\u53ef\u4ee5\u5efa\u7acb\u66f4\u5177\u908f\u8f2f\u6027\u8207\u7bc0\u594f\u611f\u7684\u4ea4\u6613\u7b56\u7565\uff0c\u4f8b\u5982\u53ea\u5728\u6bcf\u9031\u505a\u518d\u5e73\u8861\u3001\u4e0d\u6bcf\u5929\u90fd\u57f7\u884c\u3002</p>"},{"location":"example/documents56/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<pre><code>schedule_function(func, date_rule=None, time_rule=None)\n</code></pre> <ul> <li><code>func</code>\uff1a\u4f60\u8981\u6392\u7a0b\u57f7\u884c\u7684\u51fd\u6578\uff08\u4e0d\u7528\u52a0\u62ec\u865f\uff09</li> <li><code>date_rule</code>\uff1a\u4f7f\u7528 <code>date_rules</code> \u6a21\u7d44\u8a2d\u5b9a\u54ea\u5e7e\u5929\u57f7\u884c\uff08\u53ef\u9078\uff09</li> <li><code>time_rule</code>\uff1a\u4f7f\u7528 <code>time_rules</code> \u6a21\u7d44\u8a2d\u5b9a\u7576\u5929\u7684\u5e7e\u9ede\u57f7\u884c\uff08\u53ef\u9078\uff09</li> </ul>"},{"location":"example/documents56/#_2","title":"\u7bc4\u4f8b","text":"<p>\u9019\u6bb5\u6703\u5b89\u6392 <code>rebalance()</code> \u51fd\u6578\u5728 \u6bcf\u9031\u4e00\u7684\u5e02\u5834\u958b\u76e4\u5f8c 30 \u5206\u9418\u57f7\u884c\u4e00\u6b21\uff1a</p> <pre><code>from zipline.api import schedule_function, date_rules, time_rules\n\ndef initialize(context):\n    schedule_function(\n        rebalance,\n        date_rule=date_rules.week_start(),\n        time_rule=time_rules.market_open(minutes=30)\n    )\n\ndef rebalance(context, data):\n    # \u5be6\u969b\u4e0b\u55ae\u908f\u8f2f\n    pass\n</code></pre>"},{"location":"example/documents56/#_3","title":"\u63d0\u9192","text":"<ul> <li>\u82e5\u4f60\u6c92\u6709\u6307\u5b9a <code>date_rule</code> \u548c <code>time_rule</code>\uff0c\u51fd\u6578\u6703\u5728**\u6bcf\u5929\u958b\u76e4\u6642\u57f7\u884c\u4e00\u6b21**\u3002</li> <li>\u53ef\u642d\u914d\u4ee5\u4e0b\u5e38\u898b\u898f\u5247\u4f7f\u7528\uff1a</li> <li><code>date_rules.every_day()</code></li> <li><code>date_rules.week_start(days_offset=0)</code></li> <li><code>date_rules.month_end(days_offset=0)</code></li> <li><code>time_rules.market_open(minutes=N)</code></li> <li><code>time_rules.market_close(minutes=N)</code> </li> <li>\u6bcf\u6b21\u88ab\u89f8\u767c\u57f7\u884c\u6642\uff0c\u90fd\u6703\u9032\u5165\u4f60\u6307\u5b9a\u7684 <code>func(context, data)</code> \u51fd\u6578\uff0c\u56e0\u6b64\u8a18\u5f97\u9019\u4e9b\u51fd\u6578\u4e5f\u8981\u63a5\u53d7\u6a19\u6e96 Zipline \u53c3\u6578\u3002</li> </ul> <p><code>schedule_function()</code> \u662f\u5be6\u73fe\u300c\u6bcf\u9031\u300d\u3001\u300c\u6bcf\u6708\u300d\u7b49\u9031\u671f\u6027\u518d\u5e73\u8861\u7b56\u7565\u7684\u95dc\u9375\u5de5\u5177\uff0c\u5efa\u8b70\u8207 <code>order_target_percent()</code>\u3001<code>pipeline_output()</code> \u4e00\u8d77\u4f7f\u7528\u3002</p>"},{"location":"example/documents57/","title":"Zipline Order \u51fd\u6578\u4ecb\u7d39","text":"<p>Order \u51fd\u6578\u662f\u7528\u65bc\u4ea4\u6613\u80a1\u7968\u7684\u51fd\u6578\uff0c\u53ef\u4ee5\u5229\u7528\u4ee5\u4e0b\u516d\u7a2e\u51fd\u6578\u5f97\u51fa\u6211\u5011\u6307\u5b9a\u8981\u4ea4\u6613\u7684\u80a1\u7968\u4ee5\u53ca\u6578\u91cf</p> <pre><code># Zipline Order\u51fd\u6578\u4ecb\u7d39 - order\n</code></pre> <p>Order \u51fd\u6578\u662f\u7528\u65bc\u4ea4\u6613\u80a1\u7968\u7684\u51fd\u6578\uff0c\u53ef\u4ee5\u5229\u7528\u4ee5\u4e0b\u516d\u7a2e\u51fd\u6578\u5f97\u51fa\u6211\u5011\u6307\u5b9a\u8981\u4ea4\u6613\u7684\u80a1\u7968\u4ee5\u53ca\u6578\u91cf</p>"},{"location":"example/documents57/#zipline","title":"Zipline \u6709\u516d\u7a2e\u4e0b\u55ae\u51fd\u6578\uff1a","text":"<pre><code>order()\uff1a\u8cfc\u8cb7\u6307\u5b9a\u80a1\u6578\u3002  \norder_value()\uff1a\u8cfc\u8cb7\u6307\u5b9a\u50f9\u503c\u7684\u80a1\u7968\u3002  \norder_percent()\uff1a\u8cfc\u8cb7\u6307\u5b9a\u50f9\u503c\uff08\u6574\u500b\u6295\u8cc7\u7d44\u5408\u50f9\u503c\uff08portfolio value\uff09\u7684\u4e00\u500b\u7279\u5b9a\u6bd4\u4f8b\uff09\u7684\u80a1\u7968\u3002  \norder_target()\uff1a\u4ea4\u6613\u76f4\u5230\u8a72\u80a1\u7968\u5e33\u4e0a\u7e3d\u80a1\u6578\u9054\u5230\u6307\u5b9a\u6578\u91cf\u70ba\u6b62\u3002  \norder_target_value()\uff1a\u4ea4\u6613\u5230\u5e33\u4e0a\u8a72\u80a1\u7968\u50f9\u503c\u9054\u5230\u6307\u5b9a\u50f9\u503c\u70ba\u6b62\u3002  \norder_target_percent()\uff1a\u5c07\u80a1\u7968\u5728\u6295\u8cc7\u7d44\u5408\u7684\u6bd4\u91cd\u8abf\u6574\u5230\u6307\u5b9a\u7684\u6bd4\u4f8b\u3002\n</code></pre>"},{"location":"example/documents57/#order","title":"\u672c\u7bc7\u5c07\u6703\u4ecb\u7d39<code>order()</code>\u7684\u4f7f\u7528\u8fa6\u6cd5\u3002","text":"<p>\u672c\u6587\u4ef6\u5305\u542b\u4ee5\u4e0b\u56db\u500b\u90e8\u4efd\uff1a 1. \u51fd\u6578\u8aaa\u660e 2. \u7bc4\u4f8b\uff1aorder\uff08\u642d\u914d limit_price\uff09 3. \u7bc4\u4f8b\uff1aorder\uff08\u642d\u914d stop_price\uff09  </p>"},{"location":"example/documents57/#_1","title":"\u4e0b\u55ae\u51fd\u6578\u7684\u53c3\u6578\u8207\u56de\u50b3\u503c\uff1a","text":""},{"location":"example/documents57/#1","title":"1. \u51fd\u6578\u8aaa\u660e","text":"<p>\u4ee5\u5e02\u50f9\u55ae\u4e0b\u55ae - <code>asset</code>\uff1a\u8981\u4ea4\u6613\u7684\u80a1\u7968\u6a19\u7684\uff08\u4f8b\u5982\u4f7f\u7528 <code>symbol(\"2330\")</code> \u8868\u793a\u53f0\u7a4d\u96fb\uff09</p> <ul> <li> <p><code>amount</code>\uff1a\u6b32\u8cb7\u8ce3\u7684\u80a1\u6578\uff08\u6b63\u503c\u4ee3\u8868\u8cb7\u9032\uff0c\u8ca0\u503c\u4ee3\u8868\u8ce3\u51fa\uff09</p> </li> <li> <p><code>style</code>\uff1a\u4e0b\u55ae\u65b9\u5f0f\uff0c\u9810\u8a2d\u70ba <code>MarketOrder()</code>\uff08\u5e02\u50f9\u55ae\uff09\uff0c\u4e5f\u53ef\u66ff\u63db\u70ba <code>LimitOrder()</code> \u6216 <code>StopOrder()</code> \u7b49\u689d\u4ef6\u55ae</p> </li> </ul> <pre><code>order(asset, amount, style=MarketOrder())\n</code></pre>"},{"location":"example/documents57/#2-order-limit_price","title":"2. \u7bc4\u4f8b\uff1aorder\uff08\u642d\u914d limit_price\uff09","text":"<p>\u7528 \u9650\u50f9610\u5143 \u8cb7\u9032 sid(24) \u9019\u6a94\u80a1\u7968 100 \u80a1\u3002  <pre><code>order(sid(24), 100, style=LimitOrder(610))\n</code></pre></p>"},{"location":"example/documents57/#3-order-stop_price","title":"3. \u7bc4\u4f8b\uff1aorder\uff08\u642d\u914d stop_price\uff09","text":"<p>\u7576\u50f9\u683c\u8dcc\u7834590\u5143\u6642\uff0c\u8ce3\u51fa sid(24) 100 \u80a1\uff08\u505c\u640d\u55ae\uff09\u3002 <pre><code>order(sid(24), -100, style=StopOrder(590))\n</code></pre></p>"},{"location":"example/documents58/","title":"order_target \u51fd\u6578\u4ecb\u7d39","text":"<p><code>order_target()</code> \u662f Zipline \u63d0\u4f9b\u7684\u4e00\u7a2e\u4e0b\u55ae\u65b9\u5f0f\uff0c\u7528\u4f86\u8abf\u6574\u67d0\u652f\u80a1\u7968\u7684 \u6700\u7d42\u6301\u80a1\u6578\u91cf\u3002</p> <p>\u8207 <code>order()</code> \u76f4\u63a5\u8cb7\u8ce3\u80a1\u6578\u4e0d\u540c\uff0c<code>order_target()</code> \u7684\u8a2d\u8a08\u6982\u5ff5\u662f\u300c\u9054\u6210\u76ee\u6a19\u6301\u80a1\u91cf\u300d\uff0c\u4e0d\u8ad6\u76ee\u524d\u6301\u6709\u591a\u5c11\uff0cZipline \u90fd\u6703\u5e6b\u4f60\u81ea\u52d5\u88dc\u4e0a\u6216\u8ce3\u51fa\u5dee\u984d\u3002</p>"},{"location":"example/documents58/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li> <p><code>asset</code>\uff1a\u8981\u4ea4\u6613\u7684\u80a1\u7968\u6a19\u7684\uff08\u4f8b\u5982\u53ef\u4f7f\u7528 <code>symbol(\"2330\")</code> \u8868\u793a\u53f0\u7a4d\u96fb\uff09</p> </li> <li> <p><code>target_amount</code>\uff1a\u76ee\u6a19\u6301\u80a1\u80a1\u6578\uff08\u6574\u6578\uff09\u3002Zipline \u6703\u6839\u64da\u7576\u524d\u6301\u80a1\u81ea\u52d5\u8a08\u7b97\u8cb7\u8ce3\u6578\u91cf\uff0c\u4f7f\u6301\u80a1\u9054\u5230\u6b64\u6578\u503c\u3002</p> </li> </ul> <pre><code>order_target(asset, target_amount)\n</code></pre>"},{"location":"example/documents58/#_2","title":"\u7bc4\u4f8b","text":"<p>\u7bc4\u4f8b\u7a0b\u5f0f\u78bc\u662f\u6307\u7121\u8ad6\u4f60\u76ee\u524d\u6709\u591a\u80a1\u53f0\u7a4d\u96fb (2330) \uff0c\u51fd\u6578\u6703\u901a\u904e\u4e0b\u55ae\u5e6b\u4f60\u8abf\u6574\u81f3 300 \u80a1\u3002 \u5047\u8a2d\u4f60\u76ee\u524d\u6709100\u80a1\u7684\u53f0\u7a4d\u96fb\uff0c\u901a\u904e\u4e0a\u8ff0\u7a0b\u5f0f\u78bc\u6703\u5e6b\u4f60\u5728\u56de\u6e2c\u7cfb\u7d71\u4e0b 200 \u80a1\u7684\u53f0\u7a4d\u96fb\u3002</p> <pre><code>order_target(symbol(2330), 300)\n</code></pre>"},{"location":"example/documents59/","title":"order_percent \u51fd\u6578\u4ecb\u7d39","text":"<p><code>order_percent()</code> \u662f Zipline \u63d0\u4f9b\u7684\u4e00\u7a2e\u4e0b\u55ae\u65b9\u5f0f\uff0c\u8b93\u4f60\u53ef\u4ee5**\u6839\u64da\u6295\u8cc7\u7d44\u5408\u7684\u7e3d\u50f9\u503c\uff08portfolio value\uff09\u4f86\u4e0b\u55ae\u67d0\u500b\u767e\u5206\u6bd4\u7684\u80a1\u7968**\u3002</p> <p>\u4f8b\u5982\uff1a\u4f60\u60f3\u8b93\u67d0\u6a94\u80a1\u7968\u7684\u90e8\u4f4d\u5927\u7d04\u4f54\u7528\u4f60\u6295\u8cc7\u7d44\u5408\u4e2d 10% \u7684\u91d1\u984d\uff0c\u90a3\u9019\u500b\u51fd\u6578\u5c31\u975e\u5e38\u9069\u5408\u3002</p>"},{"location":"example/documents59/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li> <p><code>asset</code>\uff1a\u8981\u4ea4\u6613\u7684\u80a1\u7968\u6a19\u7684\uff08\u4f8b\u5982\u4f7f\u7528 <code>symbol(\"2330\")</code> \u8868\u793a\u53f0\u7a4d\u96fb\uff09</p> </li> <li> <p><code>percent</code>\uff1a\u6b32\u8cb7\u8ce3\u7684\u8cc7\u91d1\u6bd4\u4f8b\uff0c\u4f7f\u7528\u5c0f\u6578\u8868\u793a\uff08\u6b63\u503c\u70ba\u8cb7\u9032\uff0c\u8ca0\u503c\u70ba\u8ce3\u51fa\uff09\uff0c\u4f8b\u5982 0.1 \u8868\u793a 10%\uff0c-0.2 \u8868\u793a\u8ce3\u51fa 20%</p> </li> </ul> <pre><code>order_percent(asset, percent)\n</code></pre> <p>\u4ee5\u4e0b\u7a0b\u5f0f\u78bc\u6703\u6839\u64da\u76ee\u524d\u6295\u8cc7\u7d44\u5408\u7684\u7e3d\u50f9\u503c\uff0c\u81ea\u52d5\u5e6b\u4f60\u8cb7\u9032\u300c10% \u8cc7\u91d1\u300d\u7684\u53f0\u7a4d\u96fb\uff082330\uff09\u90e8\u4f4d\u3002 \u5047\u8a2d portfolio \u7e3d\u50f9\u503c\u70ba 100,000 \u5143\uff0c\u5247\u6703\u4e0b\u55ae\u8cb7\u9032\u7d04 10,000 \u5143\u7684\u53f0\u7a4d\u96fb\u3002 <pre><code>order_percent(symbol(\"2330\"), 0.1)\n</code></pre></p>"},{"location":"example/documents6/","title":"TQuant Lab \u5b89\u88dd\u6559\u5b78","text":""},{"location":"example/documents6/#_1","title":"\u4f7f\u7528\u7684\u5957\u4ef6\u8207\u74b0\u5883","text":"<ul> <li>Main package\uff1aZipline</li> <li>\u652f\u63f4 Python \u7248\u672c\uff1aPython 3.8 ~ 3.11\uff08\u5efa\u8b70\u4f7f\u7528 Python 3.11\uff09</li> <li>\u652f\u63f4\u4f5c\u696d\u7cfb\u7d71\uff1aWindows OS \u6216 macOS</li> <li>\u5efa\u8b70 Pandas \u7248\u672c\uff1a1.5.3 \u6216 2.0.0\uff08\u9ad8\u65bc 2.0.0 \u53ef\u80fd\u6703\u6709\u672a\u9810\u671f\u932f\u8aa4\uff09</li> <li>\u5efa\u8b70 Numpy \u7248\u672c\uff1a1.23.5\uff08\u9ad8\u65bc 1.23.5 \u53ef\u80fd\u6703\u6709\u672a\u9810\u671f\u932f\u8aa4\uff09</li> </ul>"},{"location":"example/documents6/#a-b","title":"\u5b89\u88dd\u65b9\u5f0f\uff08\u64c7\u4e00\u5373\u53ef\uff0c\u63a8\u85a6\u4f7f\u7528\u65b9\u6cd5 A \u6216 B\uff09","text":""},{"location":"example/documents6/#a-docker-zipline-tej","title":"A. \u900f\u904e Docker \u5b89\u88dd zipline-tej\uff08\u63a8\u85a6\uff09","text":""},{"location":"example/documents6/#_2","title":"\u5148\u6c7a\u689d\u4ef6","text":"<ul> <li>\u5df2\u5b89\u88dd Docker Desktop</li> </ul>"},{"location":"example/documents6/#dockerfile","title":"\u65b9\u6cd5\u4e00\uff1a\u4f7f\u7528\u672c\u5730 Dockerfile \u5efa\u69cb","text":"<pre><code># \u4e0b\u8f09 tquant_jupyter\uff08\u9069\u7528 Jupyter \u4f7f\u7528\uff09\n# \u4e0b\u8f09 tquant_bash\uff08\u9069\u7528\u6392\u7a0b\u4f7f\u7528\uff09\n\n# \u9032\u5165 Dockerfile \u6240\u5728\u76ee\u9304\ncd &lt;path_to_dockerfile&gt;\n\n# \u5efa\u7acb\u6620\u50cf\u6a94\ndocker build -f tquant_jupyter . -t \"tquant:latest\"\n</code></pre>"},{"location":"example/documents6/#docker-hub","title":"(\u65b9\u6cd5\u4e8c) \u76f4\u63a5\u5f9e Docker Hub \u4e0b\u8f09\uff08\u63a8\u85a6\uff09","text":""},{"location":"example/documents6/#1-docker-hub","title":"1. \u5f9e Docker Hub \u4e0b\u8f09\u6620\u50cf\u6a94","text":"<p>\u65bc\u7d42\u7aef\u6a5f\u8f38\u5165\u4ee5\u4e0b\u6307\u4ee4\uff1a <pre><code>docker pull tej87681088/tquant:latest\n</code></pre></p>"},{"location":"example/documents6/#2-volume","title":"2. \u5efa\u7acb\u4e00\u500b volume \u4ee5\u50b3\u8f38\u8cc7\u6599","text":"<p>\u65bc\u7d42\u7aef\u6a5f\u8f38\u5165\u4ee5\u4e0b\u6307\u4ee4\uff1a <pre><code>docker volume create data\n</code></pre></p>"},{"location":"example/documents6/#3-image-container","title":"3. \u900f\u904e Image \u5efa\u7acb Container \u4e26\u555f\u52d5","text":"<p>\u82e5\u900f\u904e\u65b9\u6cd5\u4e00\uff08Dockerfile\uff09\u4e0b\u8f09\uff1a <pre><code>docker run -v data:/app -p 8888:8888 --name tquant tquant\n</code></pre> \u82e5\u900f\u904e\u65b9\u6cd5\u4e8c\uff08Docker Hub\uff09\u4e0b\u8f09\uff1a <pre><code>docker run -v data:/app -p 8888:8888 --name tquant tej87681088/tquant\n</code></pre> \u6b64\u547d\u4ee4\u5c07\uff1a</p> <ul> <li>\u555f\u52d5\u4e00\u500b container</li> <li>\u5c07 container \u5167\u7684 8888 \u57e0 \u6620\u5c04\u81f3\u672c\u6a5f\u7684 8888 \u57e0</li> <li>\u5229\u7528 volume data \u8207\u672c\u6a5f\u9032\u884c\u8cc7\u6599\u4ea4\u63db</li> </ul> <p>\u82e5\u4e0d\u5e0c\u671b\u4fdd\u7559 container\uff0c\u8acb\u52a0\u4e0a <code>--rm</code> \u53c3\u6578\uff1a <pre><code>docker run --rm -v data:/app -p 8888:8888 --name tquant tej87681088/tquant\n</code></pre></p>"},{"location":"example/documents6/#4-jupyter","title":"4. \u958b\u59cb\u4f7f\u7528 Jupyter","text":"<p>\u555f\u52d5\u5f8c\uff0c\u7d42\u7aef\u6a5f\u6703\u986f\u793a\u985e\u4f3c\u4e0b\u5217\u7db2\u5740\uff1a</p> <p><pre><code>http://127.0.0.1:8888/tree?token=XXXXXXXXXXXXXXXX\n</code></pre> \u8907\u88fd\u4e26\u8cbc\u4e0a\u81f3\u700f\u89bd\u5668\uff0c\u5373\u53ef\u958b\u555f Jupyter Notebook \u4f7f\u7528\u4ecb\u9762\u3002</p>"},{"location":"example/documents6/#appendix","title":"Appendix","text":"<p>\u82e5\u60f3\u4f7f\u7528\u4e4b\u524d\u5df2\u5275\u5efa\u904e\u7684\u4f46\u95dc\u9589\u7684container\u64cd\u4f5c\uff0c\u53ef\u900f\u904e\u4ee5\u4e0b\u6307\u4ee4\u53d6\u5f97\u7db2\u5740 <pre><code># \u67e5\u770b\u6240\u6709 Container\uff08\u5305\u542b\u95dc\u9589\u7684\uff09\ndocker ps -a\n\n# \u555f\u52d5\u6307\u5b9a Container\ndocker start &lt;CONTAINER_ID&gt;\n\n# \u67e5\u770b Container \u7d42\u7aef\u6a5f\u6700\u8fd1\u7684\u8f38\u51fa\uff08\u542b Jupyter token\uff09\ndocker logs --tail 3 &lt;CONTAINER_ID&gt;\n</code></pre></p>"},{"location":"example/documents6/#b-anaconda-prompt-zipline-tej","title":"B. \u900f\u904e Anaconda Prompt \u4e00\u9375\u5b89\u88dd zipline-tej\uff08\u63a8\u85a6\uff09","text":""},{"location":"example/documents6/#1","title":"1. \u4e0b\u8f09\u5957\u4ef6\u8a2d\u5b9a\u6a94","text":"<p>\u8acb\u5148\u4e0b\u8f09\u4ee5\u4e0b\u5c0d\u61c9\u4f5c\u696d\u7cfb\u7d71\u7684\u5b89\u88dd\u8a2d\u5b9a\u6a94\uff08<code>.yml</code> \u6a94\u6848\uff09\uff1a</p> <ul> <li>Windows \u7248\u672c\uff1azipline-tej.yml</li> <li>Mac \u7248\u672c\uff1azipline-tej_mac.yml</li> </ul> <p>\u26a0\ufe0f \u6211\u5011\u5f37\u70c8\u63a8\u85a6\u4f7f\u7528\u865b\u64ec\u74b0\u5883\uff0c\u4ee5\u4fdd\u6301\u6bcf\u500b\u5c08\u6848\u7684\u7368\u7acb\u6027\u4e26\u907f\u514d\u5957\u4ef6\u7248\u672c\u885d\u7a81\u3002</p>"},{"location":"example/documents6/#2","title":"2. \u4f7f\u7528\u8005\u64cd\u4f5c\u8aaa\u660e","text":""},{"location":"example/documents6/#windows","title":"Windows \u4f7f\u7528\u8005","text":"<pre><code># \u5c07\u4e0b\u8f09\u597d\u7684 zipline-tej.yml \u6a94\u6848\u653e\u5230\u4e0b\u8f09\u8cc7\u6599\u593e\u5f8c\uff0c\u958b\u555f Anaconda Prompt \u4e26\u57f7\u884c\uff1a\n\ncd C:\\Users\\&lt;your_username&gt;\\Downloads\n\n# \u900f\u904e yml \u6a94\u5275\u5efa\u865b\u64ec\u74b0\u5883\u4e26\u5b89\u88dd\u5957\u4ef6\nconda env create -f zipline-tej.yml\n\n# \u555f\u7528\u865b\u64ec\u74b0\u5883\nconda activate zipline-tej\n</code></pre>"},{"location":"example/documents6/#macos","title":"macOS \u4f7f\u7528\u8005","text":"<p><pre><code># \u5c07\u4e0b\u8f09\u597d\u7684 zipline-tej_mac.yml \u6a94\u6848\u653e\u5230\u4e0b\u8f09\u8cc7\u6599\u593e\u5f8c\uff0c\u958b\u555f\u7d42\u7aef\u6a5f\u4e26\u57f7\u884c\uff1a\n\ncd /Users/&lt;your_username&gt;/Downloads\n\n# \u900f\u904e yml \u6a94\u5275\u5efa\u865b\u64ec\u74b0\u5883\nconda env create -f zipline-tej_mac.yml\n\n# \u555f\u7528\u865b\u64ec\u74b0\u5883\nconda activate zipline-tej\n</code></pre> \u81f3\u6b64\uff0c\u4fbf\u53ef\u958b\u59cb\u4f7f\u7528zipline-tej\u3002</p>"},{"location":"example/documents6/#c-pip-install-zipline-tej","title":"C. \u76f4\u63a5\u900f\u904e pip install \u5b89\u88dd zipline-tej\uff08\u26a0\ufe0f \u53ef\u80fd\u9700\u81ea\u884c\u9664\u932f\uff09","text":"<p>\u26a0\ufe0f \u8b66\u544a\uff1a\u6b64\u65b9\u5f0f\u5b89\u88dd zipline-tej \u53ef\u80fd\u6703\u51fa\u73fe\u672a\u9810\u671f\u932f\u8aa4\uff0c\u5efa\u8b70\u9032\u968e\u4f7f\u7528\u8005\u63a1\u7528\u3002</p>"},{"location":"example/documents6/#anaconda","title":"\ud83d\udca1 \u5efa\u8b70\u4f7f\u7528 Anaconda \u5efa\u7acb\u865b\u64ec\u74b0\u5883","text":"<p>\u70ba\u907f\u514d\u5957\u4ef6\u7248\u672c\u885d\u7a81\uff0c\u5efa\u8b70\u5148\u5efa\u7acb\u865b\u64ec\u74b0\u5883\u5f8c\u518d\u5b89\u88dd zipline-tej\u3002\u4ee5\u4e0b\u63d0\u4f9b\u5169\u7a2e\u5efa\u7acb\u65b9\u5f0f\uff08\u64c7\u4e00\u5373\u53ef\uff09\uff1a</p>"},{"location":"example/documents6/#anaconda_1","title":"\u65b9\u6cd5\u4e00\uff1a\u4f7f\u7528 Anaconda \u6307\u4ee4\uff08\u63a8\u85a6\uff09","text":"<p>\u65bc Anaconda Prompt \u57f7\u884c\u4ee5\u4e0b\u6307\u4ee4\uff1a</p> <pre><code># \u5efa\u7acb\u865b\u64ec\u74b0\u5883\uff08Python 3.11\uff09\n$ conda create -n &lt;env_name&gt; python=3.11\n\n# activate virtual env\n$ conda activate &lt;env_name&gt;\n\n# download packages\n$ pip install zipline-tej\n$ pip install notebook\n$ conda install -c conda-forge nb_conda_kernels\n</code></pre>"},{"location":"example/documents6/#python","title":"\u65b9\u6cd5\u4e8c\uff1a\u900f\u904ePython\u539f\u751f\u6307\u4ee4","text":"<p>\u65bc CMD \u57f7\u884c\u4ee5\u4e0b\u6307\u4ee4\uff1a</p> <pre><code># create virtual env\n$ python -m venv venv\n\n# activate virtual env\n$ venv\\Scripts\\activate.bat\n# download packages\n$ pip install zipline-tej\n$ pip install notebook\n</code></pre>"},{"location":"example/documents6/#google-colab-zipline-tej","title":"\u65bc google colab \u4f7f\u7528 zipline-tej","text":"<p>\u82e5\u60a8\u4f7f\u7528 google colab\uff0c\u53ef\u4ee5\u76f4\u63a5\u57f7\u884c\u4ee5\u4e0b\u7a0b\u5f0f\u78bc\uff0c\u4e0b\u8f09 zipline-tej <pre><code>!pip install zipline-tej\n</code></pre> \u82e5\u6709\u4f7f\u7528Pyfolio\uff0c\u53ef\u4ee5\u4e00\u4f75\u57f7\u884c\u4e0b\u5217\u6307\u4ee4\u907f\u514d\u51fa\u73fe Warning <pre><code>import matplotlib\nimport matplotlib.font_manager as fm\n!wget -O MicrosoftJhengHei.ttf https://github.com/a7532ariel/ms-web/raw/master/Microsoft-JhengHei.ttf\n!wget -O ArialUnicodeMS.ttf https://github.com/texttechnologylab/DHd2019BoA/raw/master/fonts/Arial%20Unicode%20MS.TTF\n\nfm.fontManager.addfont('MicrosoftJhengHei.ttf')\nmatplotlib.rc('font', family='Microsoft Jheng Hei')\n\nmatplotlib.font_manager.fontManager.addfont('ArialUnicodeMS.ttf')\nmatplotlib.rc('font', family='Arial Unicode MS')\n</code></pre></p>"},{"location":"example/documents60/","title":"order_target_percent \u51fd\u6578\u4ecb\u7d39","text":"<p><code>order_target_percent()</code> \u662f Zipline \u63d0\u4f9b\u7684\u4e00\u7a2e\u4e0b\u55ae\u65b9\u5f0f\uff0c\u7528\u4f86**\u8abf\u6574\u67d0\u6a94\u80a1\u7968\u5728\u6574\u9ad4\u6295\u8cc7\u7d44\u5408\u4e2d\u7684\u4f54\u6bd4**\u3002</p> <p>\u4f60\u53ea\u8981\u544a\u8a34\u5b83\u300c\u9019\u652f\u80a1\u7968\u8981\u4f54\u6211\u8cc7\u7522\u7684\u5e7e %\u300d\uff0cZipline \u5c31\u6703\u5e6b\u4f60\u81ea\u52d5\u8cb7\u9032\u6216\u8ce3\u51fa\uff0c\u9054\u5230\u4f60\u8a2d\u5b9a\u7684\u76ee\u6a19\u6bd4\u4f8b\u3002</p>"},{"location":"example/documents60/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li> <p><code>asset</code>\uff1a\u6b32\u8abf\u6574\u6301\u80a1\u6bd4\u4f8b\u7684\u80a1\u7968\u6a19\u7684\uff08\u4f8b\u5982\u4f7f\u7528 <code>symbol(\"2330\")</code> \u8868\u793a\u53f0\u7a4d\u96fb\uff09</p> </li> <li> <p><code>target</code>\uff1a\u8a2d\u5b9a\u8a72\u80a1\u7968\u5728\u6295\u8cc7\u7d44\u5408\u4e2d\u7684**\u76ee\u6a19\u4f54\u6bd4**\uff08\u7528\u5c0f\u6578\u8868\u793a\uff0c\u5982 0.2 \u70ba 20%\uff0c0 \u70ba\u5b8c\u5168\u4e0d\u6301\u6709\uff09</p> </li> </ul> <pre><code>order_target_percent(asset, target)\n</code></pre> <p>\u4ee5\u4e0b\u7a0b\u5f0f\u78bc\u6703\u5c07\u4f60\u6301\u6709\u7684\u53f0\u7a4d\u96fb\uff082330\uff09\u90e8\u4f4d\u8abf\u6574\u70ba\u4f54\u6574\u9ad4\u8cc7\u7522\u7684 30%\u3002 \u4e0d\u7ba1\u4f60\u539f\u672c\u662f 10%\u300150%\uff0cZipline \u90fd\u6703\u81ea\u52d5\u8cb7\u9032\u6216\u8ce3\u51fa\u4f86\u9054\u5230\u9019\u500b\u6bd4\u4f8b\u3002 <pre><code>order_target_percent(symbol(\"2330\"), 0.3)\n</code></pre></p>"},{"location":"example/documents61/","title":"order_value \u51fd\u6578\u4ecb\u7d39","text":"<p><code>order_value()</code> \u662f Zipline \u63d0\u4f9b\u7684\u4e00\u7a2e\u4e0b\u55ae\u65b9\u5f0f\uff0c\u7528\u4f86**\u8cb7\u9032\u6216\u8ce3\u51fa\u67d0\u500b\u300c\u91d1\u984d\u300d\u50f9\u503c\u7684\u80a1\u7968**\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u6307\u5b9a\u80a1\u6578\u3002</p> <p>\u9019\u5728\u4f60\u60f3\u4ee5\u8cc7\u91d1\u914d\u7f6e\u6bd4\u4f8b\u4e0b\u55ae\u6642\u7279\u5225\u597d\u7528\uff0c\u4f8b\u5982\u5e0c\u671b\u7528 5000 \u5143\u8cb7\u53f0\u7a4d\u96fb\uff0c\u800c\u4e0d\u662f\u81ea\u5df1\u53bb\u7b97\u80fd\u8cb7\u5e7e\u80a1\u3002</p>"},{"location":"example/documents61/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li> <p><code>asset</code>\uff1a\u8981\u4ea4\u6613\u7684\u80a1\u7968\u6a19\u7684\uff08\u4f8b\u5982\u53ef\u4f7f\u7528 <code>symbol(\"2330\")</code> \u8868\u793a\u53f0\u7a4d\u96fb\uff09</p> </li> <li> <p><code>value</code>\uff1a\u60f3\u8981\u8cb7\u9032\u6216\u8ce3\u51fa\u7684\u91d1\u984d\uff08\u6b63\u503c\u4ee3\u8868\u8cb7\u9032\uff0c\u8ca0\u503c\u4ee3\u8868\u8ce3\u51fa\uff09</p> </li> </ul> <pre><code>order_value(asset, value)\n</code></pre> <p>\u4ee5\u4e0b\u7a0b\u5f0f\u78bc\u6703\u6839\u64da\u7576\u4e0b\u6536\u76e4\u50f9\uff0c\u81ea\u52d5\u5e6b\u4f60\u8cb7\u9032\u7d04 5000 \u5143\u7684\u53f0\u7a4d\u96fb\uff082330\uff09\u3002 \u5047\u8a2d\u4eca\u5929\u6536\u76e4\u50f9\u70ba 500 \u5143\uff0cZipline \u6703\u5e6b\u4f60\u4e0b\u55ae 10 \u80a1\uff1b\u82e5\u70ba 250 \u5143\uff0c\u5247\u6703\u4e0b\u55ae 20 \u80a1\u3002 <pre><code>order_value(symbol(\"2330\"), 5000)\n</code></pre></p>"},{"location":"example/documents62/","title":"order_target_value \u51fd\u6578\u4ecb\u7d39","text":"<p><code>order_target_value()</code> \u662f Zipline \u63d0\u4f9b\u7684\u4e00\u7a2e\u4e0b\u55ae\u65b9\u5f0f\uff0c\u7528\u4f86**\u8abf\u6574\u67d0\u652f\u80a1\u7968\u7684\u5e02\u503c\uff08\u4ee5\u91d1\u984d\u70ba\u55ae\u4f4d\uff09\u5230\u4f60\u8a2d\u5b9a\u7684\u76ee\u6a19\u503c**\u3002</p> <p>\u5b83\u6703\u6839\u64da\u4f60\u7576\u524d\u6301\u80a1\u91d1\u984d\u8207\u76ee\u6a19\u91d1\u984d\u7684\u5dee\u8ddd\uff0c\u81ea\u52d5\u8cb7\u9032\u6216\u8ce3\u51fa\uff0c\u9054\u6210\u6307\u5b9a\u5e02\u503c\u3002</p>"},{"location":"example/documents62/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li> <p><code>asset</code>\uff1a\u8981\u4ea4\u6613\u7684\u80a1\u7968\uff08\u53ef\u7528 <code>symbol(\"\u80a1\u7968\u4ee3\u78bc\")</code> \u8868\u793a\uff09</p> </li> <li> <p><code>target_value</code>\uff1a\u5e0c\u671b\u6301\u6709\u8a72\u80a1\u7968\u7684\u6700\u7d42\u91d1\u984d\uff08\u6b63\u503c\u8868\u793a\u6301\u6709\u90e8\u4f4d\uff0c0 \u8868\u793a\u6e05\u7a7a\uff09</p> </li> </ul> <pre><code>order_target_value(asset, target_value)\n</code></pre> <p>\u4ee5\u4e0b\u7a0b\u5f0f\u78bc\u6703\u8b93\u4f60\u6301\u6709\u53f0\u7a4d\u96fb\uff082330\uff09\u7684\u90e8\u4f4d\u8abf\u6574\u70ba 10,000 \u5143\uff0c\u7121\u8ad6\u4f60\u76ee\u524d\u6301\u6709\u591a\u5c11\u3002 \u5047\u8a2d\u4f60\u76ee\u524d\u6301\u6709\u50f9\u503c 4000 \u5143\u7684\u53f0\u7a4d\u96fb\uff0c\u5247\u6703\u5e6b\u4f60\u518d\u8cb7\u9032 6000 \u5143\uff1b\u82e5\u76ee\u524d\u6301\u6709 12,000 \u5143\uff0c\u5247\u6703\u5e6b\u4f60\u8ce3\u51fa 2000 \u5143\u3002</p> <pre><code>order_target_value(symbol(\"2330\"), 10000)\n</code></pre>"},{"location":"example/documents63/","title":"get_open_orders \u51fd\u6578\u4ecb\u7d39","text":"<p><code>get_open_orders()</code> \u662f Zipline \u63d0\u4f9b\u7684\u67e5\u8a62\u51fd\u6578\uff0c\u7528\u4f86**\u53d6\u5f97\u76ee\u524d\u6240\u6709\u5c1a\u672a\u6210\u4ea4\u7684\u639b\u55ae\u8cc7\u8a0a**\u3002</p> <p>\u7576\u4f60\u5728\u7b56\u7565\u4e2d\u4e0b\u4e86\u689d\u4ef6\u55ae\uff08\u4f8b\u5982\u9650\u50f9\u55ae\u3001\u505c\u640d\u55ae\uff09\uff0c\u4f46\u5c1a\u672a\u88ab\u5e02\u5834\u6210\u4ea4\uff0c\u5c31\u53ef\u4ee5\u7528\u9019\u500b\u51fd\u6578\u4f86\u67e5\u770b\u9084\u6709\u54ea\u4e9b\u639b\u55ae\u5c1a\u672a\u5b8c\u6210\u3002</p>"},{"location":"example/documents63/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>asset</code>\uff08\u53ef\u9078\uff09\uff1a\u6b32\u67e5\u8a62\u672a\u6210\u4ea4\u639b\u55ae\u7684\u80a1\u7968\u6a19\u7684\uff08\u4f8b\u5982\u4f7f\u7528 <code>symbol(\"2330\")</code> \u8868\u793a\u53f0\u7a4d\u96fb\uff09\u3002\u82e5\u4e0d\u6307\u5b9a\uff0c\u5247\u6703\u56de\u50b3\u6240\u6709\u80a1\u7968\u7684\u672a\u6210\u4ea4\u639b\u55ae\u3002</li> </ul> <pre><code>get_open_orders(asset=None)\n</code></pre> <p>\u67e5\u8a62\u76ee\u524d\u6240\u6709\u80a1\u7968\u7684\u672a\u6210\u4ea4\u639b\u55ae\uff1a <pre><code>open_orders = get_open_orders()\n</code></pre> \u67e5\u8a62\u76ee\u524d\u53f0\u7a4d\u96fb\uff082330\uff09\u7684\u672a\u6210\u4ea4\u639b\u55ae\uff1a <pre><code>open_orders_tsmc = get_open_orders(symbol(\"2330\"))\n</code></pre></p>"},{"location":"example/documents64/","title":"cancel_order \u51fd\u6578\u4ecb\u7d39","text":"<p><code>cancel_order()</code> \u662f Zipline \u63d0\u4f9b\u7684\u51fd\u6578\uff0c\u7528\u4f86**\u53d6\u6d88\u5c1a\u672a\u6210\u4ea4\u7684\u639b\u55ae**\u3002</p> <p>\u7576\u4f60\u4e0b\u4e86\u9650\u50f9\u55ae\u6216\u505c\u640d\u55ae\uff0c\u800c\u767c\u73fe\u8a72\u639b\u55ae\u5c1a\u672a\u6210\u4ea4\u4e14\u4e0d\u60f3\u7e7c\u7e8c\u4fdd\u7559\u6642\uff0c\u53ef\u4ee5\u7528\u9019\u500b\u51fd\u6578\u53d6\u6d88\u8a72\u7b46\u8a02\u55ae\u3002</p>"},{"location":"example/documents64/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>order_param</code>\uff1a\u6b32\u53d6\u6d88\u7684\u8a02\u55ae\uff0c\u53ef\u50b3\u5165\u4e0b\u55ae\u6642\u56de\u50b3\u7684 order_id\uff08\u5b57\u4e32\uff09\uff0c\u6216\u6574\u500b order \u7269\u4ef6</li> </ul> <pre><code>cancel_order(order_param)\n</code></pre> <p>\u4ee5\u4e0b\u7a0b\u5f0f\u78bc\u6703\u4e0b\u55ae\u8cb7\u9032\u53f0\u7a4d\u96fb\uff0c\u4e26\u7acb\u5373\u53d6\u6d88\u9019\u7b46\u5c1a\u672a\u6210\u4ea4\u7684\u639b\u55ae\uff1a <pre><code>order_obj = order(symbol(\"2330\"), 100, style=LimitOrder(500))\ncancel_order(order_obj)\n</code></pre> \u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u50c5\u4f7f\u7528 order id \u9032\u884c\u53d6\u6d88\uff1a <pre><code>oid = order(symbol(\"2330\"), 100)\ncancel_order(oid)\n</code></pre></p>"},{"location":"example/documents66/","title":"set_do_not_order_list \u51fd\u6578\u4ecb\u7d39","text":""},{"location":"example/documents66/#ziplineapiset_do_not_order_listrestricted_list-on_errorfail","title":"zipline.api.set_do_not_order_list(restricted_list, on_error='fail')","text":"<p>\u9810\u5148\u8a2d\u5b9a\u4e00\u500b\u4e0d\u5e0c\u671b\u4ea4\u6613\u5230\u7684\u80a1\u7968\u6e05\u55ae</p> <ul> <li>restricted_list (container[Asset], SecurityList):</li> <li>\u6307\u5b9a\u4e0d\u53ef\u4ea4\u6613\u7684\u80a1\u7968\u6e05\u55ae\u3002</li> <li>\u6b64\u5bb9\u5668\u5167\u7684\u5143\u7d20\u5fc5\u9808\u70ba <code>Asset</code> \u7269\u4ef6\uff08\u4f8b\u5982\uff1a<code>Equity(0 [1101])</code>\uff0c\u53ef\u7528 <code>symbol(\"1101\")</code> \u8f49\u63db\uff09\u3002</li> <li>on_error (str, optional):</li> <li>\u53ef\u9078 <code>'fail'</code> \u8207 <code>'log'</code>\u3002\u524d\u8005\u5728\u9055\u53cd\u9650\u5236\u6642\u76f4\u63a5\u4e2d\u6b62\u7a0b\u5f0f\u4e26\u986f\u793a\u932f\u8aa4\u8a0a\u606f\uff1b\u5f8c\u8005\u5247\u53ea\u8a18\u9304\u932f\u8aa4\u4f46\u7e7c\u7e8c\u57f7\u884c\u3002</li> <li>\u9810\u8a2d\u70ba <code>'fail'</code>\u3002</li> <li>\u82e5\u8a2d\u5b9a\u70ba <code>'log'</code>\uff0c\u8acb\u5148\u8a2d\u5b9a log\uff08\u8a73\u898b\u4e0b\u65b9\u7a0b\u5f0f\u78bc\uff09\uff1a     <pre><code>from logbook import Logger, StderrHandler, INFO\n# \u8a2d\u5b9a log \u986f\u793a\u65b9\u5f0f\nlog_handler = StderrHandler(\n    format_string='[{record.time:%Y-%m-%d %H:%M:%S.%f}]: {record.level_name}: {record.func_name}: {record.message}',\n    level=INFO\n)\nlog_handler.push_application()\nlog = Logger('Algorithm')\n</code></pre></li> </ul>"},{"location":"example/documents66/#_1","title":"\u7bc4\u4f8b","text":"<p>\u5728\u4e0b\u5217\u7bc4\u4f8b\u4e2d\uff0c\u6211\u5011\u5c07 1101 \u52a0\u5165\u9650\u5236\u6e05\u55ae\uff0c\u4e26\u7528 <code>on_error='log'</code>\uff0c\u7136\u5f8c\u65bc 7/26 \u5617\u8a66\u4e0b\u55ae\u8cb7\u5165 1101\uff1a</p> <pre><code>def initialize(context):\n    context.i = 0\n    set_do_not_order_list(restricted_list=[symbol('1101')], on_error='log')\n    set_slippage(slippage.FixedSlippage(spread=0.0))\n    set_commission(commission.PerDollar(cost=commission_cost))\n    set_benchmark(symbol('IR0001'))\n\ndef handle_data(context, data):\n    if context.i == 0:  # 2018-07-24\n        order(symbol('2330'), 100)\n\n    if context.i == 2:  # 2018-07-26\n        order(symbol('1101'), 100)\n\n    if context.i == 4:  # 2018-07-30\n        order(symbol('1216'), 100)\n\n    context.i += 1\n\ncommission_cost = 0.001425\ncapital_base = 1e6\n\nperformance = run_algorithm(\n    start=start_dt,\n    end=end_dt,\n    initialize=initialize,\n    handle_data=handle_data,\n    capital_base=capital_base,\n    trading_calendar=get_calendar(calendar_name),\n    bundle=bundle_name\n)\n\npositions, transactions, orders = get_transaction_detail(performance)\n</code></pre>"},{"location":"example/documents66/#zipline-trading-controls","title":"Zipline Trading Controls \u4ea4\u6613\u9650\u5236\u51fd\u6578","text":""},{"location":"example/documents66/#zipline","title":"\u5728 Zipline \u4e2d\u53ef\u4ee5\u52a0\u5165\u516d\u7a2e\u4e0d\u540c\u7684\u4ea4\u6613\u9650\u5236\uff1a","text":"<p>\u4ea4\u6613\u9650\u5236\u529f\u80fd\u53ef\u4ee5\u78ba\u4fdd\u6f14\u7b97\u6cd5\u5982\u60a8\u6240\u9810\u671f\u7684\u7684\u65b9\u5f0f\u57f7\u884c\uff0c\u4e26\u6709\u52a9\u65bc\u907f\u514d\u9810\u671f\u5916\u4ea4\u6613\u6240\u5e36\u4f86\u7684\u4e0d\u826f\u5f8c\u679c\u3002</p> <ul> <li>set_do_not_order_list\uff1a\u9810\u5148\u8a2d\u5b9a\u4e00\u500b\u4e0d\u5e0c\u671b\u4ea4\u6613\u5230\u7684\u80a1\u7968\u6e05\u55ae\u3002</li> <li>set_long_only\uff1a\u9810\u5148\u8a2d\u5b9a\u6295\u8cc7\u7d44\u5408\u4e0d\u80fd\u6301\u6709\u4efb\u4f55\u77ed\u90e8\u4f4d\uff08short positions\uff09\u3002</li> <li>set_max_leverage\uff1a\u8a2d\u5b9a\u6295\u8cc7\u7d44\u5408\u7684\u69d3\u687f\u9650\u5236\u3002</li> <li>set_max_order_count\uff1a\u9650\u5236\u4e00\u5929\u5167\u80fd\u5920\u4e0b\u5e7e\u5f35 order\u3002</li> <li>set_max_order_size\uff1a\u9650\u5236\u7279\u5b9a\u80a1\u7968\uff08\u6216\u5168\u90e8\uff09\u7684\u55ae\u6b21\u4e0b\u55ae\u80a1\u6578\u53ca\u91d1\u984d\u3002</li> <li>set_max_position_size\uff1a\u9650\u5236\u7279\u5b9a\u80a1\u7968\uff08\u6216\u5168\u90e8\uff09\u5728\u5e33\u4e0a\u7684\u80a1\u6578\u53ca\u5e02\u503c\u3002</li> </ul>"},{"location":"example/documents66/#_2","title":"\u95b1\u8b80\u672c\u7bc7\u4e4b\u524d\u8acb\u5148\u95b1\u8b80\u4ee5\u4e0b\u6587\u7ae0\uff1a","text":"<ul> <li>TSMC buy and hold strategy.ipynb</li> <li>Zipline Order (order &amp; order_target).ipynb</li> <li>Zipline Order\uff08value &amp; target_value\uff09</li> <li>Zipline Order\uff08percent &amp; target_percent\uff09</li> <li>Zipline Slippage</li> </ul>"},{"location":"example/documents66/#_3","title":"\u88dc\u5145\u8aaa\u660e\uff1a","text":"<ul> <li>\u4ea4\u6613\u9650\u5236\u7cfb\u5217\u51fd\u6578\u901a\u5e38\u5728initialize\u968e\u6bb5\u4f7f\u7528\u3002</li> <li>\u53ef\u4ee5\u4e00\u6b21\u52a0\u5165\u591a\u500b\u4ea4\u6613\u9650\u5236\u3002</li> <li>\u56e0\u70ba\u4ea4\u6613\u9650\u5236\u51fd\u6578\u7686\u662f zipline api \u65b9\u6cd5\uff0c\u9700\u5148from zipline.api import &lt;\u6b32\u4f7f\u7528\u7684\u65b9\u6cd5&gt; \u6216 from zipline.api import *\u3002</li> </ul>"},{"location":"example/documents66/#_4","title":"\u8a2d\u5b9a\u74b0\u5883","text":"<p><pre><code>import pandas as pd\nimport numpy as np\nimport datetime\nimport tejapi\nimport time\nimport os\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# tej_key\ntej_key ='your key'\ntejapi.ApiConfig.api_key = tej_key\nos.environ['TEJAPI_BASE'] = \"https://api.tej.com.tw\"\nos.environ['TEJAPI_KEY'] = tej_key\n\n# date\nstart='2018-07-24'\nend='2018-08-24'\nos.environ['mdate'] = '20180724 20180824'\n\ntz = 'UTC'\nstart_dt, end_dt = pd.Timestamp(start, tz = tz), pd.Timestamp(end, tz = tz)\n\n# calendar\ncalendar_name='TEJ'\n\n# bundle_name\nbundle_name = 'tquant'\n\nos.environ['ticker'] = \"2330 1216 1101 IR0001 2317 5844 2454 2357\"\n!zipline ingest -b tquant\n</code></pre> <pre><code>from zipline.api import *\nfrom zipline import run_algorithm\nfrom zipline.finance import commission, slippage\nfrom zipline.utils.calendar_utils import get_calendar\n\nfrom zipline.utils.run_algo import  get_transaction_detail\n\nfrom logbook import Logger, StderrHandler, INFO\n\n# \u8a2d\u5b9alog\u986f\u793a\u65b9\u5f0f\nlog_handler = StderrHandler(format_string='[{record.time:%Y-%m-%d %H:%M:%S.%f}]: ' +\n                            '{record.level_name}: {record.func_name}: {record.message}',\n                            level=INFO)\nlog_handler.push_application()\nlog = Logger('Algorithm')\n</code></pre></p>"},{"location":"example/documents67/","title":"set_long_only \u51fd\u6578\u4ecb\u7d39","text":"<p>\u9810\u5148\u8a2d\u5b9a\u6295\u8cc7\u7d44\u5408\u4e0d\u80fd\u6301\u6709\u4efb\u4f55\u77ed\u90e8\u4f4d(short positions)</p>"},{"location":"example/documents67/#ziplineapiset_long_onlyon_errorfail","title":"zipline.api.set_long_only(on_error='fail')","text":"<ul> <li>on_error (str, optional):</li> <li>\u53ef\u9078 <code>'fail'</code> \u8207 <code>'log'</code>\uff08\u9810\u8a2d\u70ba <code>'fail'</code>\uff09\u3002\u7576\u9055\u53cd long only \u9650\u5236\u6642\uff0c<code>'fail'</code> \u6703\u4e2d\u6b62\u7a0b\u5f0f\uff0c<code>'log'</code> \u5247\u50c5\u8a18\u9304\u932f\u8aa4\uff0c\u4f46\u4ecd\u6703\u6210\u4ea4\u3002</li> <li>\u82e5\u4f7f\u7528 <code>'log'</code>\uff0c\u8acb\u5148\u8a2d\u5b9a log\uff0c\u4f8b\u5982\uff1a     <pre><code>from logbook import Logger, StderrHandler, INFO\nlog_handler = StderrHandler(\n    format_string='[{record.time:%Y-%m-%d %H:%M:%S.%f}]: {record.level_name}: {record.func_name}: {record.message}',\n    level=INFO\n)\nlog_handler.push_application()\nlog = Logger('Algorithm')\n</code></pre></li> </ul>"},{"location":"example/documents67/#_1","title":"\u7bc4\u4f8b","text":"<p>\u5728\u4e0b\u5217\u7a0b\u5f0f\u4e2d\uff0c\u6211\u5011\u8a2d\u5b9a <code>set_long_only(on_error='log')</code>\uff0c\u4e26\u9032\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a - 7/24\uff1a\u8cb7\u5165 1000 \u80a1 2330\u3002 - 7/26\uff1a\u8ce3\u51fa 500 \u80a1 2330\u3002 - 7/30\uff1a\u518d\u6b21\u8ce3\u51fa 800 \u80a1 2330\uff08\u6b64\u6642\u6703\u4f7f\u6301\u5009\u8f49\u70ba short\uff09\u3002</p> <pre><code>def initialize(context):\n    context.i = 0\n    set_long_only(on_error='log')\n    set_slippage(slippage.FixedSlippage(spread=0.0))\n    set_commission(commission.PerDollar(cost=commission_cost))\n    set_benchmark(symbol('IR0001'))\n\ndef handle_data(context, data):\n    if context.i == 0:  # 2018-07-24\n        order(symbol('2330'), 1000)\n\n    if context.i == 2:  # 2018-07-26\n        order(symbol('2330'), -500)\n\n    if context.i == 4:  # 2018-07-30\n        order(symbol('2330'), -800)\n\n    context.i += 1\n\ncommission_cost = 0.001425\ncapital_base = 1e6\n\nperformance = run_algorithm(\n    start=start_dt,\n    end=end_dt,\n    initialize=initialize,\n    handle_data=handle_data,\n    capital_base=capital_base,\n    trading_calendar=get_calendar(calendar_name),\n    bundle=bundle_name\n)\n\npositions, transactions, orders = get_transaction_detail(performance)\n\n# \u67e5\u8a62\u6301\u6709 short position \u80a1\u7968\u7684\u6578\u91cf\nperformance.shorts_count\n</code></pre>"},{"location":"example/documents68/","title":"set_max_leverage","text":"<p>\u8a2d\u5b9a\u6295\u8cc7\u7d44\u5408\u7684\u69d3\u687f\u9650\u5236</p>"},{"location":"example/documents68/#ziplineapiset_max_leveragemax_leverage","title":"zipline.api.set_max_leverage(max_leverage)","text":"<ul> <li>max_leverage (float):</li> <li>\u8868\u793a\u6295\u8cc7\u7d44\u5408\u7684\u6700\u9ad8\u69d3\u687f\uff0c\u5fc5\u9808\u5927\u65bc 0\u3002</li> <li>\u6b64\u8655\u6307\u7684\u69d3\u687f\u70ba gross leverage\uff0c\u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a     <pre><code>(long_exposure - short_exposure) / (long_exposure + short_exposure + ending_cash)\n</code></pre>     \u5176\u4e2d\uff1a<ul> <li>ending_cash\uff1a\u7576\u65e5\u7d50\u675f\u6642\u5e33\u4e0a\u73fe\u91d1\uff08\u8a08\u7b97\uff1astarting_cash - capital_used\uff09</li> <li>long_exposure\uff1a\u6240\u6709\u6b63\u6301\u80a1\u90e8\u5206\u7684\u7e3d\u50f9\u503c\uff08sum(amount * last_sale_price)\uff0c\u50c5\u7576 amount &gt; 0\uff09</li> <li>short_exposure\uff1a\u6240\u6709\u8ca0\u6301\u80a1\u90e8\u5206\u7684\u7e3d\u50f9\u503c\uff08sum(amount * last_sale_price)\uff0c\u50c5\u7576 amount &lt; 0\uff09</li> </ul> </li> <li>\u53c3\u8003\uff1aTSMC buy and hold strategy.ipynb</li> </ul>"},{"location":"example/documents68/#_1","title":"\u88dc\u5145\u8aaa\u660e","text":"<ul> <li>\u7576\u6295\u8cc7\u7d44\u5408\u7684 gross leverage \u8d85\u904e <code>max_leverage</code> \u9650\u5236\u6642\uff0c\u7a0b\u5f0f\u6703\u4e2d\u6b62\u57f7\u884c\uff08fail\uff09\u3002</li> <li>\u6b64\u9650\u5236\u4e0d\u652f\u63f4 <code>'log'</code> \u6a21\u5f0f\uff0c\u5fc5\u9808\u56b4\u683c\u9650\u5236\u3002</li> </ul>"},{"location":"example/documents68/#_2","title":"\u7bc4\u4f8b","text":"<p>\u8a2d\u5b9a <code>set_max_leverage(3.0)</code>\uff0c\u7bc4\u4f8b\u5982\u4e0b\uff1a - 7/24\uff1a\u5148\u4ee5 100 \u842c\u8cb7\u5165 2330\uff08long\uff09\uff0c\u540c\u6642\u4ee5 100 \u842c\u505a\u7a7a 2317\uff08short\uff09\u3002</p> <pre><code>def handle_data(context, data):\n    if context.i == 0:   # 7/24\n        order_value(symbol('2330'), 1e6)\n        order_value(symbol('2317'), -1e6)\n    ...\n</code></pre> <p>7/26\uff1a\u4ee5 50 \u842c\u8cb7\u5165 2454\uff08long\uff09\u3002</p> <pre><code>if context.i == 2:   # 7/26\n    order_value(symbol('2454'), 5e5)\n</code></pre> <p>\u53ef\u900f\u904e\u4ee5\u4e0b\u7a0b\u5f0f\u67e5\u8a62\u67d0\u4e9b\u65e5\u671f\u7684 gross_leverage \u8207\u5176\u4ed6\u53c3\u6578\uff1a</p> <pre><code>performance.loc['2018-07-25':'2018-07-27', ['gross_leverage', 'portfolio_value', 'ending_cash']]\n</code></pre> <p>\u8a08\u7b97\u793a\u4f8b\uff08\u4ee5 7/25 \u70ba\u4f8b\uff09\uff1a</p> <p>\u5047\u8a2d\uff1a</p> <ul> <li> <p>2330 \u7684 amount \u8207 last_sale_price \u5206\u5225\u70ba 4149 \u8207 240.5</p> </li> <li> <p>2317 \u7684 amount \u8207 last_sale_price \u5206\u5225\u70ba -11737 \u8207 82.7</p> </li> <li> <p>ending_cash \u70ba 970010.30973</p> </li> </ul> <p>\u5247\u69d3\u687f\u8a08\u7b97\u70ba\uff1a</p> <p><pre><code>(4149 * 240.5 - (-11737) * 82.7) /\n(970010.30973 + 4149 * 240.5 + (-11737) * 82.7) = 1.974022\n</code></pre> \u5b8c\u6574\u7a0b\u5f0f\u7bc4\u4f8b\uff1a <pre><code>def initialize(context):\n    context.i = 0\n    set_max_leverage(3.0)\n    set_slippage(slippage.FixedSlippage(spread=0.0))\n    set_commission(commission.PerDollar(cost=commission_cost))\n    set_benchmark(symbol('IR0001'))\n\ndef handle_data(context, data):\n    if context.i == 0:   # 7/24\n        order_value(symbol('2330'), 1e6)\n        order_value(symbol('2317'), -1e6)\n\n    if context.i == 2:   # 7/26\n        order_value(symbol('2454'), 5e5)\n\n    context.i += 1\n\ncommission_cost = 0.001425\ncapital_base = 1e6\n\nperformance = run_algorithm(\n    start=start_dt,\n    end=end_dt,\n    initialize=initialize,\n    handle_data=handle_data,\n    capital_base=capital_base,\n    trading_calendar=get_calendar(calendar_name),\n    bundle=bundle_name\n)\n</code></pre></p>"},{"location":"example/documents69/","title":"set_max_order_count \u51fd\u6578\u4ecb\u7d39","text":"<pre><code>zipline.api.set_max_order_count(max_count, on_error='fail')\n</code></pre> <ul> <li>\u529f\u80fd\uff1a\u9650\u5236\u4e00\u5929\u5167\u80fd\u5920\u4e0b\u7684\u8a02\u55ae\u5f35\u6578  </li> <li>\u53c3\u6578 </li> <li><code>max_count</code> (int): \u7576\u5929\u6700\u591a\u53ef\u9001\u51fa\u7684\u8a02\u55ae\u6578\u3002  </li> <li> <p><code>on_error</code> (str, optional): \u9055\u898f\u6642\u8655\u7406\u65b9\u5f0f\uff0c'fail'\uff08\u4e2d\u6b62\uff09\u6216 'log'\uff08\u8a18\u9304\uff09\u3002\u9810\u8a2d 'fail'  </p> </li> <li> <p>\u6ce8\u610f </p> </li> <li>\u50c5\u8a08\u7b97\u9001\u51fa\u7576\u5929\u7684\u8a02\u55ae\u6578\uff1b\u6ed1\u50f9\u6216\u5ef6\u9072\u6210\u4ea4\u4e0d\u5f71\u97ff\u8a08\u7b97\u3002  </li> <li><code>on_error='log'</code> \u6642\u8d85\u9650\u50c5\u8a18\u9304\u8a0a\u606f\uff0c\u8a02\u55ae\u4ecd\u7167\u5e38\u57f7\u884c\uff1b<code>on_error='fail'</code> \u6642\u5c07\u4e2d\u6b62\u6f14\u7b97\u6cd5\u3002  </li> </ul>"},{"location":"example/documents69/#_1","title":"\u7bc4\u4f8b","text":"<ul> <li>\u5728\u4ee5\u4e0b\u7bc4\u4f8b\u4e2d\uff0c\u6211\u5011\u8a2d\u5b9aset_max_order_count(max_count=3, on_error='log')\uff0c\u9650\u5236\u6700\u5927\u4e0b\u55ae\u6578\u70ba 3\u3002</li> <li>\u8a2d\u5b9a\u6ed1\u50f9\u6a21\u578b\uff1aset_slippage(slippage.VolumeShareSlippage(volume_limit=0.025, price_impact=0.1))\uff0c\u6210\u4ea4\u91cf\u9650\u5236\u70ba 2.5%\u3002</li> <li>\u4e0b\u55ae\uff1a</li> <li>7/24 long 2330 \u53ca 2357 \u5169\u6a94\u80a1\u7968\u3002</li> <li>7/25 long 2454\u30012317 \u53ca 1101 \u4e09\u6a94\u80a1\u7968\u3002</li> </ul> <pre><code>def handle_data(context, data):\n    if context.i == 0:  # 7/24\n        order_value(symbol('2330'), 5e8)\n        order_value(symbol('2357'), 3e8)\n\n    if context.i == 1:  # 7/25\n        order_value(symbol('2454'), 5e5)\n        order_value(symbol('2317'), 5e5)\n        order_value(symbol('1101'), 5e5)\n</code></pre> <p>\u88dc\u5145\u8aaa\u660e\uff1a - \u8a02\u55ae\u6578\u7684\u8a08\u7b97\u65b9\u5f0f\uff1a\u82e5\u8981\u8a08\u7b972018/7/25\u7684\u8a02\u55ae\u6578\uff0c\u5247\u5f9eperformance\u7684orders\u53d6\u51facreated = '2018-07-25'\u7684\u8a02\u55ae\u9032\u884c\u8a08\u7b97\u3002\u4e5f\u5c31\u662f\u8aaa\uff0c\u5982\u679c\u56e0\u6ed1\u50f9\u6216\u689d\u4ef6\u55ae\u7684\u95dc\u4fc2\uff0c\u8a02\u55ae\u88ab\u62c6\u6210\u597d\u5e7e\u5929\u6210\u4ea4\uff0c\u5247\u8a72\u5f35\u8a02\u55ae\u53ea\u6709\u5728\u6210\u7acb\u90a3\u5929\u624d\u6703\u7d0d\u5165\u8a08\u7b97\u3002</p> <p><pre><code>def initialize(context):\n    context.i = 0\n    set_slippage(slippage.VolumeShareSlippage(volume_limit=0.025, price_impact=0.1))\n    set_max_order_count(max_count=3, on_error='log')\n    set_commission(commission.PerDollar(cost=commission_cost))\n    set_benchmark(symbol('IR0001'))\n\ndef handle_data(context, data):\n\n    if context.i == 0:  # 7/24\n        order_value(symbol('2330'), 5e8)\n        order_value(symbol('2357'), 3e8)\n\n    if context.i == 1:  # 7/25\n        order_value(symbol('2454'), 5e5)\n        order_value(symbol('2317'), 5e5)\n        order_value(symbol('1101'), 5e5)\n\n    context.i += 1\n\n\ncommission_cost = 0.001425\ncapital_base = 1e9\n\nperformance = run_algorithm(start=start_dt,\n                            end=end_dt,\n                            initialize=initialize,\n                            handle_data=handle_data,\n                            capital_base=capital_base,\n                            trading_calendar=get_calendar(calendar_name),\n                            bundle=bundle_name)\n\npositions, transactions, orders = get_transaction_detail(performance)\n</code></pre> \u7bc4\u4f8b\u8aaa\u660e - \u57287/24\u4e0b\u55ae\u5927\u91cf\u7684 2330 \u548c 2357\uff0c\u56e0\u70baVolumeShareSlippage\u7684\u9650\u5236\uff0c\u6240\u4ee5\u6703\u62c6\u6210\u6578\u5929\u6210\u4ea4\u3002 - \u9019\u500b\u6703\u5c0e\u81f47/25\u4e0d\u53ea\u6709\u7576\u5929\u4e0b\u7684\u4e09\u5f35\u8a02\u55ae\uff0c\u9084\u6709\u524d\u4e00\u5929 2330 \u548c 2357 \u7684\u55ae\uff0c\u5171\u4e94\u5f35\u55ae\u3002 - \u4f46\u662f\u7a0b\u5f0f\u6c92\u6709\u8df3\u51fa\u4efb\u4f55\u932f\u8aa4\u6216\u8b66\u544a\uff0c\u56e0\u70ba\u7b2c\u4e00\u5929\u4e0b\u5169\u5f35\u55ae\uff0c\u7b2c\u4e8c\u5929\u4e0b\u4e09\u5f35\u55ae\uff0c\u7a0b\u5f0f\u5224\u5b9a\u90fd\u6c92\u6709\u8d85\u904e 3\uff0c\u6240\u4ee5\u6c92\u6709\u554f\u984c\u3002 <pre><code>orders.loc['2018-07-25']\n</code></pre></p>"},{"location":"example/documents70/","title":"set_max_order_size \u51fd\u6578\u4ecb\u7d39","text":"<p>zipline.api.set_max_order_size(asset=None, max_shares=None, max_notional=None, on_error='fail')</p> <ul> <li>\u529f\u80fd\uff1a\u9650\u5236\u55ae\u7b46\u8a02\u55ae\u7684\u4e0b\u55ae\u80a1\u6578\u8207\u91d1\u984d  </li> <li>\u53c3\u6578 </li> <li><code>asset</code> (Asset, optional): \u8981\u9650\u5236\u7684\u6a19\u7684\uff0cNone \u5247\u5c0d\u6240\u6709\u6a19\u7684\u751f\u6548\u3002  </li> <li><code>max_shares</code> (int, optional): \u55ae\u7b46\u6700\u591a\u4e0b\u55ae\u80a1\u6578\u3002  </li> <li><code>max_notional</code> (float, optional): \u55ae\u7b46\u6700\u591a\u4e0b\u55ae\u91d1\u984d\uff08\u4e0b\u55ae\u6578 \u00d7 \u7576\u65e5\u6536\u76e4\u50f9\uff09\u3002  </li> <li> <p><code>on_error</code> (str, optional): 'fail'\uff08\u4e2d\u6b62\uff09\u6216 'log'\uff08\u8a18\u9304\uff09\uff0c\u9810\u8a2d 'fail'\u3002  </p> </li> <li> <p>\u6ce8\u610f </p> </li> <li>\u6aa2\u67e5\u7684\u662f\u4e0b\u55ae\u91cf\u8207\u7576\u65e5\u6536\u76e4\u50f9\u76f8\u4e58\u7684\u7d50\u679c\uff0c\u5be6\u969b\u6210\u4ea4\u50f9\u5c0e\u81f4\u91d1\u984d\u8d85\u51fa\u4e0d\u6703\u89f8\u767c\u932f\u8aa4\u3002  </li> <li> <p><code>on_error='log'</code> \u6642\u8d85\u9650\u50c5\u8a18\u9304\u8a0a\u606f\uff0c\u8a02\u55ae\u4ecd\u7167\u5e38\u57f7\u884c\u3002  </p> </li> <li> <p>\u88dc\u5145\u8aaa\u660e\uff1a</p> </li> <li><code>max_shares</code> \u662f\u4ee5\u4e0b\u55ae\u6642\u80a1\u6578\u70ba\u6e96\u3002</li> <li><code>max_notional</code> \u8a08\u7b97\u65b9\u6cd5\u70ba\u4e0b\u55ae\u6642\u7684\u80a1\u6578 * \u4e0b\u55ae\u7576\u5929\u6536\u76e4\u50f9\uff0c\u6240\u4ee5\u6210\u4ea4\u6642\u7684\u80a1\u6578\u548c\u91d1\u984d\u53ef\u80fd\u9084\u662f\u6703\u8d85\u904eset_max_order_size\u7684\u9650\u5236\uff0c\u7d30\u7bc0\u5728\u4e0b\u9762\u7684\u7bc4\u4f8b\u8aaa\u660e\u3002</li> </ul>"},{"location":"example/documents70/#_1","title":"\u7bc4\u4f8b","text":"<p>\u5728\u4ee5\u4e0b\u9019\u500b\u7bc4\u4f8b\uff0c\u6211\u5011\u9650\u5236 1101 \u7684 max_shares = 1000\uff0c\u4e14\u9650\u5236 2330 \u7684 max_shares = 2000 \u3001max_notional = 481000\u3002</p> <pre><code>def initialize(context):\n    ...\n    set_max_order_size(asset= symbol('1101'), max_shares=1000, on_error='log')\n    set_max_order_size(asset= symbol('2330'), max_shares=2000, max_notional=481000, on_error='log')\n    ...\n</code></pre> <p>\u57287/25 long 1000\u80a1\u7684 1101 \u80a1\u7968\u53ca 2000 \u80a1\u7684 2330 \u80a1\u7968\u3002</p> <pre><code>def handle_data(context, data):\n    if context.i == 1:  # 2018-07-25\n        order(symbol('1101'), 1000)\n        order(symbol('2330'), 2000)\n</code></pre> <p>\u57288/16 long 2005 \u80a1\u7684 2330 \u80a1\u7968\u3002</p> <p><pre><code>if context.i == 17:  # 2018-08-16\n    order(symbol('2330'), 2005)\n</code></pre> <pre><code>ef initialize(context):\n    context.i = 0\n    set_max_order_size(asset= symbol('1101'), max_shares=1000, on_error='log')\n    set_max_order_size(asset= symbol('2330'), max_shares=2000, max_notional=481000, on_error='log')\n    set_slippage(slippage.FixedSlippage(spread = 0.0))\n    set_commission(commission.PerDollar(cost=0.01))\n    set_benchmark(symbol('IR0001'))\n\ndef handle_data(context, data):\n\n    if context.i == 1:  # 2018-07-25\n        order(symbol('1101'), 1000)\n        order(symbol('2330'), 2000)\n\n    if context.i == 17:  # 2018-08-16\n        order(symbol('2330'), 2005)\n\n    context.i += 1\n\n\ncommission_cost = 0.001425\ncapital_base = 1e6\n\n\nperformance = run_algorithm(start=start_dt,\n                            end=end_dt,\n                            initialize=initialize,\n                            handle_data=handle_data,\n                            capital_base=capital_base,\n                            trading_calendar=get_calendar(calendar_name),\n                            bundle=bundle_name)\n\nclosing_price = tejapi.fastget('TWN/APIPRCD',\n                               coid=['1101','2330'],\n                               opts={'columns':['mdate','coid','close_d']},\n                               mdate={'gte':start_dt,'lte':end_dt },\n                               paginate=True)\n\npositions, transactions, orders = get_transaction_detail(performance)\n</code></pre></p>"},{"location":"example/documents71/","title":"set_max_position_size \u51fd\u6578\u4ecb\u7d39","text":"<p>\u9650\u5236\u7279\u5b9a\u80a1\u7968\uff08\u6216\u5168\u90e8\uff09\u5728\u5e33\u4e0a\u6301\u6709\u7684**\u80a1\u6578\u53ca\u5e02\u503c**</p>"},{"location":"example/documents71/#ziplineapiset_max_position_sizeassetnone-max_sharesnone-max_notionalnone-on_errorfail","title":"zipline.api.set_max_position_size(asset=None, max_shares=None, max_notional=None, on_error='fail')","text":"<ul> <li>asset (Asset, optional):</li> <li>\u7576\u8a2d\u5b9a\u975e None \u6642\uff0c\u50c5\u5c0d\u8a72\u80a1\u7968\u751f\u6548\uff1b\u82e5\u70ba None\uff0c\u5247\u6240\u6709\u80a1\u7968\u7686\u53d7\u6b64\u9650\u5236\u3002</li> <li>\u5fc5\u9808\u70ba <code>Asset</code> \u7269\u4ef6\uff08\u4f8b\u5982\uff1a<code>Equity(0 [1101])</code>\uff09\u3002</li> <li>max_shares (int, optional):</li> <li>\u9650\u5236\u8a72\u80a1\u7968\u5728\u5e33\u4e0a\u6301\u6709\u7684\u6700\u5927\u80a1\u6578\u3002</li> <li>max_notional (float, optional):</li> <li>\u9650\u5236\u8a72\u80a1\u7968\u5728\u5e33\u4e0a\u6301\u6709\u7684\u6700\u5927\u5e02\u503c\uff08\u5e02\u503c = \u6301\u80a1\u80a1\u6578 \u00d7 \u7576\u5929\u6536\u76e4\u50f9\uff09\u3002</li> <li>on_error (str, optional):</li> <li>\u53ef\u9078 <code>'fail'</code> \u8207 <code>'log'</code>\uff0c\u9810\u8a2d\u70ba <code>'fail'</code>\u3002</li> <li>\u82e5\u4f7f\u7528 <code>'log'</code>\uff0c\u8acb\u5148\u9032\u884c\u4e0b\u5217 log \u8a2d\u5b9a\uff1a     <pre><code>from logbook import Logger, StderrHandler, INFO\nlog_handler = StderrHandler(\n    format_string='[{record.time:%Y-%m-%d %H:%M:%S.%f}]: {record.level_name}: {record.func_name}: {record.message}',\n    level=INFO\n)\nlog_handler.push_application()\nlog = Logger('Algorithm')\n</code></pre></li> </ul>"},{"location":"example/documents71/#_1","title":"\u88dc\u5145\u8aaa\u660e","text":"<ul> <li>\u6b64\u51fd\u6578\u8207 <code>set_max_order_size()</code> \u4f7f\u7528\u65b9\u5f0f\u985e\u4f3c\uff0c\u4f46\u91dd\u5c0d\u7684\u662f**\u5e33\u4e0a\u90e8\u4f4d**\uff08position\uff09\uff0c\u800c\u975e\u55ae\u7b46\u4e0b\u55ae\u3002</li> <li>\u9650\u5236\u6aa2\u67e5\u50c5\u5728\u4e0b\u55ae\u7576\u4e0b\u9032\u884c\uff0c\u7cfb\u7d71\u6703\u6839\u64da\u4e0b\u55ae\u5f8c\u7684\u90e8\u4f4d\u8a08\u7b97\u662f\u5426\u8d85\u904e\u8a2d\u5b9a\u9650\u5236\uff0c\u4e26\u975e\u6301\u7e8c\u8ffd\u8e64\u5e33\u6236\u6574\u9ad4\u90e8\u4f4d\u3002</li> <li>\u82e5\u540c\u4e00\u80a1\u7968\u4e0b\u591a\u7b46\u8a02\u55ae\uff0c\u5247\u6bcf\u7b46\u8a02\u55ae\u6703**\u500b\u5225**\u9032\u884c\u9650\u5236\u6aa2\u67e5\u3002</li> </ul>"},{"location":"example/documents71/#_2","title":"\u7bc4\u4f8b","text":"<p>\u672c\u4f8b\u4e2d\u6211\u5011\u8a2d\u5b9a\uff1a - \u9650\u5236 2330 \u55ae\u7b46\u8a02\u55ae\u7684\u6700\u5927\u4e0b\u55ae\u80a1\u6578\u70ba 2000\uff0c\u6700\u5927\u4e0b\u55ae\u91d1\u984d\u70ba 481000\u3002 - \u9650\u5236 1101 \u5e33\u4e0a\u90e8\u4f4d\u7684\u6700\u5927\u6301\u80a1\u80a1\u6578\u70ba 1050\u3002 - \u9650\u5236 2330 \u5e33\u4e0a\u90e8\u4f4d\u7684\u6700\u5927\u6301\u80a1\u80a1\u6578\u70ba 2000\uff0c\u4e14\u6700\u5927\u5e02\u503c\u70ba 600000\u3002</p> <pre><code>def initialize(context):\n    context.i = 0\n    set_max_order_size(asset=symbol('2330'), max_shares=2000, max_notional=481000, on_error='log')\n    set_max_position_size(asset=symbol('1101'), max_shares=1050, on_error='log')\n    set_max_position_size(asset=symbol('2330'), max_shares=2000, max_notional=600000, on_error='log')\n    set_slippage(slippage.FixedSlippage(spread=0.0))\n    set_commission(commission.PerDollar(cost=0.01))\n    set_benchmark(symbol('IR0001'))\n\ndef handle_data(context, data):\n    if context.i == 0:  # 2018-07-24\n        order(symbol('1101'), 1000)\n\n    if context.i == 1:  # 2018-07-25\n        order(symbol('2330'), 2000)\n        order(symbol('2330'), 1000)\n\n    if context.i == 5:  # 2018-07-31\n        order(symbol('2330'), 500)\n\n    context.i += 1\n\ncommission_cost = 0.001425\ncapital_base = 1e6\n\nperformance = run_algorithm(\n    start=start_dt,\n    end=end_dt,\n    initialize=initialize,\n    handle_data=handle_data,\n    capital_base=capital_base,\n    trading_calendar=get_calendar(calendar_name),\n    bundle=bundle_name\n)\n\nclosing_price = tejapi.fastget(\n    'TWN/APIPRCD',\n    coid=['1101','2330'],\n    opts={'columns': ['mdate', 'coid', 'close_d']},\n    mdate={'gte': start_dt, 'lte': end_dt},\n    paginate=True\n)\n\npositions, transactions, orders = get_transaction_detail(performance)\n</code></pre>"},{"location":"example/documents71/#_3","title":"\u89c0\u5bdf\u8aaa\u660e:","text":"<ul> <li> <p>7/24 \u4e0b\u55ae 1101 \u4ee5 1000 \u80a1\u8cb7\u5165\uff0c\u82e5\u56e0\u9664\u6b0a\u4e8b\u4ef6\u5be6\u969b\u6210\u4ea4 1100 \u80a1\uff0c\u96d6\u7136\u8d85\u904e\u9650\u5236\uff081050 \u80a1\uff09\u7684\u6578\u503c\uff0c\u4f46\u9650\u5236\u6aa2\u67e5\u4f9d\u7136\u6839\u64da\u4e0b\u55ae\u6642\u7684\u6578\u91cf\u9032\u884c\uff0c\u56e0\u6b64\u4e0d\u6703\u51fa\u932f\u3002</p> </li> <li> <p>7/25 \u9023\u7e8c\u4e0b\u5169\u7b46 2330 \u8a02\u55ae\uff082000 \u80a1\u8207 1000 \u80a1\uff09\uff0c\u4e0b\u55ae\u6642\u6bcf\u7b46\u7686\u5206\u5225\u6aa2\u67e5\uff0c\u6545\u672a\u9055\u53cd\u9650\u5236\uff1b\u4f46\u82e5\u52a0\u7e3d\u5f8c\u90e8\u4f4d\u7d2f\u8a08\u8d85\u904e\u8a2d\u5b9a\u4e0a\u9650\uff0c\u5247\u8a72\u9650\u5236\u50c5\u5728\u4e0b\u55ae\u7576\u4e0b\u6aa2\u67e5\uff0c\u4e0d\u6703\u6301\u7e8c\u8ffd\u8e64\u3002</p> </li> <li> <p>7/31 \u82e5\u4e0b\u55ae 500 \u80a1 2330 \u4f7f\u5f97\u5e33\u9762\u90e8\u4f4d\u8d85\u51fa\u9650\u5236\uff08\u4f8b\u5982\u8d85\u904e\u6700\u5927\u6301\u80a1\u6578\u6216\u6700\u5927\u5e02\u503c\uff09\uff0c\u5247\u6703\u8a18\u9304\u932f\u8aa4\u8a0a\u606f\uff08\u82e5 on_error \u8a2d\u70ba 'log'\uff0c\u50c5\u8a18\u9304\u932f\u8aa4\u800c\u4ecd\u6210\u4ea4\uff09\u3002</p> </li> </ul>"},{"location":"example/documents73/","title":"\u624b\u7e8c\u8cbb\u6a21\u578b\u4ecb\u7d39","text":"<ul> <li>\u4ea4\u6613\u6210\u672c\uff08transaction costs\uff09\u88ab\u5ee3\u6cdb\u8a8d\u70ba\u662f\u5f71\u97ff\u6295\u8cc7\u7e3e\u6548\u7684\u91cd\u8981\u56e0\u7d20\u3002\u5b83\u5011\u4e0d\u50c5\u5f71\u97ff\u6295\u8cc7\u7e3e\u6548\uff0c\u9084\u5f71\u97ff\u4e86\u5c07\u8cc7\u7522\u8f49\u63db\u6210\u73fe\u91d1\u7684\u96e3\u6613\u5ea6\u3002</li> </ul>"},{"location":"example/documents73/#ziplineapiset_commissionself-equitiesnone-futuresnone","title":"zipline.api.set_commission(self, equities=None, futures=None)","text":"<p>\u8a2d\u5b9a\u56de\u6e2c\u6642\u6240\u4f7f\u7528\u7684\u624b\u7e8c\u8cbb\u6a21\u578b</p>"},{"location":"example/documents73/#parameters","title":"Parameters\uff1a","text":"<ul> <li> <p>equities (EquityCommissionModel, optional) \uff0d\u7528\u65bc\u4ea4\u6613\u80a1\u7968\u7684\u624b\u7e8c\u8cbb\u6a21\u578b\u3002</p> <ul> <li>EquityCommissionModel\uff1a<code>zipline.finance.commission</code></li> </ul> </li> <li> <p>futures (FutureCommissionModel, optional) \uff0d\u7528\u65bc\u4ea4\u6613\u671f\u8ca8\u7684\u624b\u7e8c\u8cbb\u6a21\u578b\u3002\uff08\u76ee\u524d\u4e0d\u652f\u63f4\uff09</p> <ul> <li>FutureCommissionModel\uff1a<code>zipline.finance.commission</code></li> </ul> </li> </ul>"},{"location":"example/documents73/#raises","title":"Raises\uff1a","text":"<p>SetCommissionPostInit\uff0d<code>set_commission</code> \u53ea\u80fd\u5728 initialize \u968e\u6bb5\u4f7f\u7528\u3002</p>"},{"location":"example/documents73/#notes","title":"Notes\uff1a","text":"<ul> <li><code>set_commission</code> \u53ea\u80fd\u4e00\u6b21\u7528\u4e00\u7a2e\u65b9\u6cd5\u3002</li> <li>\u624b\u7e8c\u8cbb\u8a08\u7b97\u6642\uff0c\u50f9\u683c\u4ee5\u6210\u4ea4\u65e5\u6536\u76e4\u50f9\u70ba\u6e96\uff0c\u6578\u91cf\u4e5f\u4ee5\u6210\u4ea4\u6642\u70ba\u6e96\u3002\u4e5f\u5c31\u662f\u8aaa\uff0c\u5982\u679c\u56e0\u70ba\u80a1\u6578\u8b8a\u52d5\u9020\u6210 amount \u6709\u4efb\u4f55\u8b8a\u5316\uff0c\u8a08\u7b97\u4e0a\u90fd\u662f\u7528\u6210\u4ea4\u6642\u65b0\u7684 amount\u3002</li> </ul>"},{"location":"example/documents73/#_2","title":"\u624b\u7e8c\u8cbb\u6a21\u578b\u5171\u6709\u56db\u7a2e\uff1a","text":"<ul> <li><code>zipline.finance.commission.PerShare</code></li> <li><code>zipline.finance.commission.PerTrade</code></li> <li><code>zipline.finance.commission.PerDollar</code></li> <li><code>zipline.finance.commission.Custom_TW_Commission</code></li> </ul>"},{"location":"example/documents73/#examples","title":"Examples\uff1a","text":"<pre><code>from zipline.api import set_commission\nfrom zipline.finance import commission\n\ndef initialize(context):\n    set_commission(commission.&lt;\u5176\u4e2d\u4e00\u7a2ecommission models&gt;)\n</code></pre>"},{"location":"example/documents73/#perdollar","title":"PerDollar : \u6309\u7167\u4ea4\u6613\u91d1\u984d\u62bd\u6210\u8a08\u7b97","text":""},{"location":"example/documents73/#ziplinefinancecommissionperdollarcost00015","title":"<code>zipline.finance.commission.PerDollar(cost=0.0015)</code>","text":"<ul> <li>\u6309\u7167\u4ea4\u6613\u91d1\u984d\u62bd\u6210\u8a08\u7b97\u3002</li> <li>\u50c5\u9069\u7528\u65bc equities\u3002</li> </ul>"},{"location":"example/documents73/#parameters_1","title":"Parameters\uff1a","text":"<ul> <li>cost (float, optional) : \u6bcf\u4ea4\u6613\u4e00\u5143\u7684\u80a1\u7968\u6240\u9700\u652f\u4ed8\u7684\u56fa\u5b9a\u8cbb\u7528\u3002\u9810\u8a2d\u70ba 0.0015 \u5143\u3002</li> </ul>"},{"location":"example/documents73/#notes_1","title":"Notes\uff1a","text":"<p>\u624b\u7e8c\u8cbb\u8a08\u7b97\u6642\uff0c\u50f9\u683c\u4ee5\u6210\u4ea4\u65e5\u6536\u76e4\u50f9\u70ba\u6e96\uff0c\u6578\u91cf\u4e5f\u4ee5\u6210\u4ea4\u6642\u70ba\u6e96\uff0c\u4e5f\u5c31\u662f\u8aaa\uff0c\u5982\u679c\u56e0\u70ba\u80a1\u6578\u8b8a\u52d5\u9020\u6210 amount \u6709\u4efb\u4f55\u8b8a\u5316\uff0c\u8a08\u7b97\u4e0a\u90fd\u662f\u7528\u6210\u4ea4\u6642\u65b0\u7684 amount\u3002\u624b\u7e8c\u8cbb\u8a08\u7b97\u6642\uff0c\u50f9\u683c\u4ee5\u6210\u4ea4\u65e5\u6536\u76e4\u50f9\u70ba\u6e96\uff0c\u6578\u91cf\u4e5f\u4ee5\u6210\u4ea4\u6642\u70ba\u6e96\uff0c\u4e5f\u5c31\u662f\u8aaa\uff0c\u5982\u679c\u56e0\u70ba\u80a1\u6578\u8b8a\u52d5\u9020\u6210 amount \u6709\u4efb\u4f55\u8b8a\u5316\uff0c\u8a08\u7b97\u4e0a\u90fd\u662f\u7528\u6210\u4ea4\u6642\u65b0\u7684 amount\u3002</p>"},{"location":"example/documents73/#examples_1","title":"Examples:","text":"<p><pre><code>import pandas as pd\nimport datetime\nimport tejapi\nimport os\nimport warnings\nfrom logbook import Logger, StderrHandler, INFO\nwarnings.filterwarnings('ignore')\n\n# set log\nlog_handler = StderrHandler(format_string='[{record.time:%Y-%m-%d %H:%M:%S.%f}]: ' +\n                            '{record.level_name}: {record.func_name}: {record.message}',\n                            level=INFO)\nlog_handler.push_application()\nlog = Logger('CommissionModel')\n\n# tej_key\nos.environ['TEJAPI_KEY'] = \"your key\" \nos.environ['TEJAPI_BASE'] = \"https://api.tej.com.tw\"\n\n# date\n# set date\nstart='2022-12-01'\nend='2022-12-31'\nos.environ['mdate'] = '20221201 20221231'\n\ntz = 'UTC'\nstart_dt, end_dt = pd.Timestamp(start, tz = tz), pd.Timestamp(end, tz = tz)\n\n# calendar\ncalendar_name='TEJ'\n\n# bundle_name\nbundle_name = 'tquant'\n\n# ticker\nos.environ['ticker'] = '1216 IR0001'\n\n# ingest\n!zipline ingest -b tquant\n</code></pre> Merging daily equity files: [2023-11-27 03:31:44.753277] INFO: zipline.data.bundles.core: Ingesting tquant. <pre><code>from zipline.finance import commission, slippage\nfrom zipline.api import *\n\nfrom zipline import run_algorithm\nfrom zipline.utils.calendar_utils import get_calendar\n\nfrom zipline.utils.run_algo import (get_transaction_detail,\n                                    get_record_vars)\n</code></pre></p> <ul> <li>\u6a21\u578b\u53c3\u6578<code>cost</code>\u8a2d\u5b9a\u70ba\uff1a 0.001 \uff0c\u76f8\u7576\u65bc\u6bcf\u4ea4\u6613\u4e00\u5143\u7684\u80a1\u7968\u6240\u9700\u652f\u4ed8 0.001 \u5143\u3002</li> <li>\u6ed1\u50f9\u6a21\u578b\u8a2d\u5b9a\u70ba\uff1a<code>slippage.FixedSlippage(spread=0.00)</code>\u3002\u5176\u4e2d\uff0cspread \u8a2d\u5b9a\u70ba 0\uff0c\u9019\u6a23\u6703\u6bd4\u8f03\u597d\u89c0\u5bdf\u7d50\u679c\uff0c\u56e0\u70ba\u6ed1\u50f9\u6703\u5c0e\u81f4\u6210\u4ea4\u50f9\u683c\u6539\u8b8a\u3002\u82e5\u6709\u6ed1\u50f9\u5247\u6703\u4f7f\u7528\u8003\u616e\u6ed1\u50f9\u5f8c\u7684\u50f9\u683c\u8a08\u7b97\u624b\u7e8c\u8cbb\u3002 <pre><code>def initialize_perdollar(context):\n    context.i = 0\n    context.tickers = ['1216']\n    context.asset = [symbol(ticker) for ticker in context.tickers]      \n    set_slippage(slippage.FixedSlippage(spread=0.00))\n\n    # set_commission\n    set_commission(equities=commission.PerDollar(cost=0.001))\n\n    set_benchmark(symbol('IR0001'))\n\ndef handle_data(context, data):\n\n    if context.i == 0:\n        for asset in context.asset:\n            order_target(asset, 1000)\n    if context.i == 2:\n        for asset in context.asset:\n            order_target(asset, 0)\n\n    record(close=data.current(context.asset, 'close'))\n    context.i += 1\n\ncapital_base = 1e5\n</code></pre> <pre><code>closing_price = tejapi.get('TWN/APIPRCD',\n                           coid=['1216'],\n                           opts={'columns':['mdate','coid','close_d']},\n                           mdate={'gte':start_dt,'lte':end_dt },\n                           paginate=True)\n\nperdollar = run_algorithm(start=start_dt,\n                          end=end_dt,\n                          initialize=initialize_perdollar,\n                          handle_data=handle_data,\n                          capital_base=capital_base,\n                          trading_calendar=get_calendar(calendar_name),\n                          bundle=bundle_name)\n</code></pre></li> <li> <p>\u67e5\u770b12/1\u7684\u6536\u76e4\u50f9 <pre><code># \u6536\u76e4\u50f9\nclosing_price[0:2]\n</code></pre> </p> </li> <li> <p>\u5728 12/1 \u4e0b\u55ae\u4e00\u5f35\u7d71\u4e00\uff081216\uff09\u80a1\u7968\uff0c\u7528 <code>PerDollar</code> \u7b97\u6cd5\uff0c\u8cbb\u7528\u5c31\u662f\u4e0b\u4e00\u500b\u4ea4\u6613\u65e5 12/2 \u7684\u6536\u76e4\u50f9 65 * 1000 \u80a1 * 0.001 = 65\u3002 <pre><code># PerDollar\u7b97\u6cd5\uff1a\u8cbb\u752865\u5143\nperdollar['orders'][1]\n</code></pre> [{'id': '363000dc2c1e4e5eae7ed2ec4b85ee43', 'dt': Timestamp('2022-12-02 13:30:00+0800', tz='Asia/Taipei'),   'reason': None,   'created': Timestamp('2022-12-01 13:30:00+0800', tz='Asia/Taipei'),   'amount': 1000,   'filled': 1000,   'commission': 65.0,   'stop': None,   'limit': None,   'stop_reached': False,   'limit_reached': False,   'sid': Equity(0 [1216]),   'status': }]"},{"location":"example/documents74/","title":"PerTrade : \u4e00\u7b46\u4ea4\u6613\u6536\u53d6\u4e00\u7b46\u56fa\u5b9a\u8cbb\u7528","text":""},{"location":"example/documents74/#ziplinefinancecommissionpertradecost00","title":"<code>zipline.finance.commission.PerTrade(cost=0.0)</code>","text":"<ul> <li>\u4e00\u7b46\u4ea4\u6613\u6536\u53d6\u4e00\u7b46\u56fa\u5b9a\u8cbb\u7528\u3002</li> <li>\u9069\u7528\u65bc equities \u8207 futures\u3002</li> </ul>"},{"location":"example/documents74/#parameters","title":"Parameters\uff1a","text":"<ul> <li>cost (float, optional) : \u6bcf\u9032\u884c\u4e00\u7b46\u4ea4\u6613\u6240\u9700\u652f\u4ed8\u7684\u56fa\u5b9a\u8cbb\u7528\u3002\u9810\u8a2d\u70ba 0 \u5143\u3002</li> </ul>"},{"location":"example/documents74/#notes","title":"Notes\uff1a","text":"<p>\u624b\u7e8c\u8cbb\u8a08\u7b97\u6642\uff0c\u50f9\u683c\u4ee5\u6210\u4ea4\u65e5\u6536\u76e4\u50f9\u70ba\u6e96\uff0c\u6578\u91cf\u4e5f\u4ee5\u6210\u4ea4\u6642\u70ba\u6e96\uff0c\u4e5f\u5c31\u662f\u8aaa\uff0c\u5982\u679c\u56e0\u70ba\u80a1\u6578\u8b8a\u52d5\u9020\u6210 amount \u6709\u4efb\u4f55\u8b8a\u5316\uff0c\u8a08\u7b97\u4e0a\u90fd\u662f\u7528\u6210\u4ea4\u6642\u65b0\u7684 amount\u3002\u624b\u7e8c\u8cbb\u8a08\u7b97\u6642\uff0c\u50f9\u683c\u4ee5\u6210\u4ea4\u65e5\u6536\u76e4\u50f9\u70ba\u6e96\uff0c\u6578\u91cf\u4e5f\u4ee5\u6210\u4ea4\u6642\u70ba\u6e96\uff0c\u4e5f\u5c31\u662f\u8aaa\uff0c\u5982\u679c\u56e0\u70ba\u80a1\u6578\u8b8a\u52d5\u9020\u6210 amount \u6709\u4efb\u4f55\u8b8a\u5316\uff0c\u8a08\u7b97\u4e0a\u90fd\u662f\u7528\u6210\u4ea4\u6642\u65b0\u7684 amount\u3002</p>"},{"location":"example/documents74/#examples","title":"Examples:","text":"<p><pre><code>import pandas as pd\nimport datetime\nimport tejapi\nimport os\nimport warnings\nfrom logbook import Logger, StderrHandler, INFO\nwarnings.filterwarnings('ignore')\n\n# set log\nlog_handler = StderrHandler(format_string='[{record.time:%Y-%m-%d %H:%M:%S.%f}]: ' +\n                            '{record.level_name}: {record.func_name}: {record.message}',\n                            level=INFO)\nlog_handler.push_application()\nlog = Logger('CommissionModel')\n\n# tej_key\nos.environ['TEJAPI_KEY'] = \"your key\" \nos.environ['TEJAPI_BASE'] = \"https://api.tej.com.tw\"\n\n# date\n# set date\nstart='2022-12-01'\nend='2022-12-31'\nos.environ['mdate'] = '20221201 20221231'\n\ntz = 'UTC'\nstart_dt, end_dt = pd.Timestamp(start, tz = tz), pd.Timestamp(end, tz = tz)\n\n# calendar\ncalendar_name='TEJ'\n\n# bundle_name\nbundle_name = 'tquant'\n\n# ticker\nos.environ['ticker'] = '1216 IR0001'\n\n# ingest\n!zipline ingest -b tquant\n</code></pre> Merging daily equity files: [2023-11-27 03:31:44.753277] INFO: zipline.data.bundles.core: Ingesting tquant. <pre><code>from zipline.finance import commission, slippage\nfrom zipline.api import *\n\nfrom zipline import run_algorithm\nfrom zipline.utils.calendar_utils import get_calendar\n\nfrom zipline.utils.run_algo import (get_transaction_detail,\n                                    get_record_vars)\n</code></pre></p> <ul> <li>\u6a21\u578b\u53c3\u6578<code>cost</code>\u8a2d\u5b9a\u70ba\uff1a 0.5 \uff0c\u76f8\u7576\u65bc\u6bcf\u9032\u884c\u4e00\u7b46\u4ea4\u6613\u9700\u652f\u4ed8 0.5 \u5143\u3002</li> <li>\u6ed1\u50f9\u6a21\u578b\u8a2d\u5b9a\u70ba\uff1a<code>slippage.FixedSlippage(spread=0.00)</code>\u3002\u5176\u4e2d\uff0cspread \u8a2d\u5b9a\u70ba 0\uff0c\u9019\u6a23\u6703\u6bd4\u8f03\u597d\u89c0\u5bdf\u7d50\u679c\uff0c\u56e0\u70ba\u6ed1\u50f9\u6703\u5c0e\u81f4\u6210\u4ea4\u50f9\u683c\u6539\u8b8a\u3002\u82e5\u6709\u6ed1\u50f9\u5247\u6703\u4f7f\u7528\u8003\u616e\u6ed1\u50f9\u5f8c\u7684\u50f9\u683c\u8a08\u7b97\u624b\u7e8c\u8cbb\u3002 <pre><code>def initialize_pertrade(context):\n    context.i = 0\n    context.tickers = ['1216']\n    context.asset = [symbol(ticker) for ticker in context.tickers]      \n    set_slippage(slippage.FixedSlippage(spread=0.00))\n\n    # set_commission\n    set_commission(equities=commission.PerTrade(cost=0.5))\n\n    set_benchmark(symbol('IR0001'))\n\ndef handle_data(context, data):\n\n    if context.i == 0:\n        for asset in context.asset:\n            order_target(asset, 1000)\n    if context.i == 2:\n        for asset in context.asset:\n            order_target(asset, 0)\n\n    record(close=data.current(context.asset, 'close'))\n    context.i += 1\n\ncapital_base = 1e5\n</code></pre> <pre><code>closing_price = tejapi.get('TWN/APIPRCD',\n                           coid=['1216'],\n                           opts={'columns':['mdate','coid','close_d']},\n                           mdate={'gte':start_dt,'lte':end_dt },\n                           paginate=True)\n\npertrade = run_algorithm(start=start_dt,\n                         end=end_dt,\n                         initialize=initialize_pertrade,\n                         handle_data=handle_data,\n                         capital_base=capital_base,\n                         trading_calendar=get_calendar(calendar_name),\n                         bundle=bundle_name)\n</code></pre></li> <li> <p>\u67e5\u770b12/1\u7684\u6536\u76e4\u50f9 <pre><code># \u6536\u76e4\u50f9\nclosing_price[0:2]\n</code></pre> </p> </li> <li> <p>\u5728 12/1 \u4e0b\u55ae\u4e00\u5f35\u7d71\u4e00\uff081216\uff09\u80a1\u7968\uff0c\u7528 <code>PerTrade</code> \u7b97\u6cd5\uff0c\u8cbb\u7528\u5c31\u662f\u8a2d\u5b9a\u597d\u7684 0.5 \u5143\u3002 <pre><code># pertrade\u7b97\u6cd5\uff1a\u8cbb\u75280.5\u5143\npertrade['orders'][1]\n</code></pre> [{'id': '61a8b52d81de4e4b98d295823efb2464',   'dt': Timestamp('2022-12-02 13:30:00+0800',   tz='Asia/Taipei'),   'reason': None,   'created': Timestamp('2022-12-01 13:30:00+0800', tz='Asia/Taipei'),   'amount': 1000,   'filled': 1000,   'commission': 0.5,   'stop': None,   'limit': None,   'stop_reached': False,   'limit_reached': False,   'sid': Equity(0 [1216]),   'status': }]"},{"location":"example/documents75/","title":"PerShare : \u6309\u7167\u4e0b\u55ae\u7684\u80a1\u6578\u8a08\u7b97\u8cbb\u7528\uff0c\u540c\u6642\u9084\u53ef\u4ee5\u8a2d\u5b9a\u4e00\u500b\u6700\u4f4e\u8cbb\u7528","text":""},{"location":"example/documents75/#ziplinefinancecommissionpersharecost0001-min_trade_cost00","title":"<code>zipline.finance.commission.PerShare(cost=0.001, min_trade_cost=0.0)</code>","text":"<ul> <li>\u6309\u7167\u4e0b\u55ae\u7684\u80a1\u6578\u8a08\u7b97\u8cbb\u7528\uff0c\u540c\u6642\u9084\u53ef\u4ee5\u8a2d\u5b9a\u4e00\u500b\u6700\u4f4e\u8cbb\u7528\u3002</li> <li>\u50c5\u9069\u7528\u65bc equities\u3002</li> <li>\u70ba\u9810\u8a2d\u6a21\u578b\u3002</li> </ul>"},{"location":"example/documents75/#parameters","title":"Parameters\uff1a","text":"<ul> <li>cost (float, optional)\uff0d\u6bcf\u4ea4\u6613\u4e00\u80a1\u7684\u80a1\u7968\u6240\u9700\u652f\u4ed8\u7684\u56fa\u5b9a\u8cbb\u7528\u3002\u9810\u8a2d\u70ba 0.001 \u5143\u3002</li> <li>min_trade_cost (float, optional)\uff0d\u6700\u4f4e\u8cbb\u7528\uff0c\u9810\u8a2d\u70ba\u7121\u6700\u4f4e\u8cbb\u7528\u3002</li> </ul>"},{"location":"example/documents75/#notes","title":"Notes\uff1a","text":"<p>\u624b\u7e8c\u8cbb\u8a08\u7b97\u6642\uff0c\u50f9\u683c\u4ee5\u6210\u4ea4\u65e5\u6536\u76e4\u50f9\u70ba\u6e96\uff0c\u6578\u91cf\u4e5f\u4ee5\u6210\u4ea4\u6642\u70ba\u6e96\uff0c\u4e5f\u5c31\u662f\u8aaa\uff0c\u5982\u679c\u56e0\u70ba\u80a1\u6578\u8b8a\u52d5\u9020\u6210 amount \u6709\u4efb\u4f55\u8b8a\u5316\uff0c\u8a08\u7b97\u4e0a\u90fd\u662f\u7528\u6210\u4ea4\u6642\u65b0\u7684 amount\u3002\u624b\u7e8c\u8cbb\u8a08\u7b97\u6642\uff0c\u50f9\u683c\u4ee5\u6210\u4ea4\u65e5\u6536\u76e4\u50f9\u70ba\u6e96\uff0c\u6578\u91cf\u4e5f\u4ee5\u6210\u4ea4\u6642\u70ba\u6e96\uff0c\u4e5f\u5c31\u662f\u8aaa\uff0c\u5982\u679c\u56e0\u70ba\u80a1\u6578\u8b8a\u52d5\u9020\u6210 amount \u6709\u4efb\u4f55\u8b8a\u5316\uff0c\u8a08\u7b97\u4e0a\u90fd\u662f\u7528\u6210\u4ea4\u6642\u65b0\u7684 amount\u3002</p>"},{"location":"example/documents75/#examples","title":"Examples:","text":"<p><pre><code>import pandas as pd\nimport datetime\nimport tejapi\nimport os\nimport warnings\nfrom logbook import Logger, StderrHandler, INFO\nwarnings.filterwarnings('ignore')\n\n# set log\nlog_handler = StderrHandler(format_string='[{record.time:%Y-%m-%d %H:%M:%S.%f}]: ' +\n                            '{record.level_name}: {record.func_name}: {record.message}',\n                            level=INFO)\nlog_handler.push_application()\nlog = Logger('CommissionModel')\n\n# tej_key\nos.environ['TEJAPI_KEY'] = \"your key\" \nos.environ['TEJAPI_BASE'] = \"https://api.tej.com.tw\"\n\n# date\n# set date\nstart='2022-12-01'\nend='2022-12-31'\nos.environ['mdate'] = '20221201 20221231'\n\ntz = 'UTC'\nstart_dt, end_dt = pd.Timestamp(start, tz = tz), pd.Timestamp(end, tz = tz)\n\n# calendar\ncalendar_name='TEJ'\n\n# bundle_name\nbundle_name = 'tquant'\n\n# ticker\nos.environ['ticker'] = '1216 IR0001'\n\n# ingest\n!zipline ingest -b tquant\n</code></pre> Merging daily equity files: [2023-11-27 03:31:44.753277] INFO: zipline.data.bundles.core: Ingesting tquant. <pre><code>from zipline.finance import commission, slippage\nfrom zipline.api import *\n\nfrom zipline import run_algorithm\nfrom zipline.utils.calendar_utils import get_calendar\n\nfrom zipline.utils.run_algo import (get_transaction_detail,\n                                    get_record_vars)\n</code></pre></p> <ul> <li>\u7bc4\u4f8b\u7684\u6a21\u578b\u53c3\u6578<code>cost</code>\u8a2d\u5b9a 0.001\uff0c<code>min_trade_cost</code>\u8a2d\u5b9a 5.0\u3002</li> <li>\u6ed1\u50f9\u6a21\u578b\u8a2d\u5b9a\u70ba\uff1a<code>slippage.FixedSlippage(spread=0.00)</code>\u3002\u5176\u4e2d\uff0cspread \u8a2d\u5b9a\u70ba 0\uff0c\u9019\u6a23\u6703\u6bd4\u8f03\u597d\u89c0\u5bdf\u7d50\u679c\uff0c\u56e0\u70ba\u6ed1\u50f9\u6703\u5c0e\u81f4\u6210\u4ea4\u50f9\u683c\u6539\u8b8a\u3002\u82e5\u6709\u6ed1\u50f9\u5247\u6703\u4f7f\u7528\u8003\u616e\u6ed1\u50f9\u5f8c\u7684\u50f9\u683c\u8a08\u7b97\u624b\u7e8c\u8cbb\u3002 <pre><code>def initialize_pershare(context):\n    context.i = 0\n    context.tickers = ['1216']\n    context.asset = [symbol(ticker) for ticker in context.tickers]      \n    set_slippage(slippage.FixedSlippage(spread=0.00))\n\n    # set_commission\n    set_commission(equities=commission.PerShare(cost=0.001, min_trade_cost=5.0))\n\ndef handle_data(context, data):\n\n    if context.i == 0:\n        for asset in context.asset:\n            order_target(asset, 1000)\n    if context.i == 2:\n        for asset in context.asset:\n            order_target(asset, 0)\n\n    record(close=data.current(context.asset, 'close'))\n    context.i += 1\n\ncapital_base = 1e5\n</code></pre> <pre><code>closing_price = tejapi.get('TWN/APIPRCD',\n                           coid=['1216'],\n                           opts={'columns':['mdate','coid','close_d']},\n                           mdate={'gte':start_dt,'lte':end_dt },\n                           paginate=True)\n\npershare = run_algorithm(start=start_dt,\n                         end=end_dt,\n                         initialize=initialize_pershare,\n                         handle_data=handle_data,\n                         capital_base=capital_base,\n                         trading_calendar=get_calendar(calendar_name),\n                         bundle=bundle_name)\n</code></pre></li> <li> <p>\u67e5\u770b12/1\u7684\u6536\u76e4\u50f9 <pre><code># \u6536\u76e4\u50f9\nclosing_price[0:2]\n</code></pre> </p> </li> <li> <p>\u5728 12/1 \u4e0b\u55ae\u4e00\u5f35\u7d71\u4e00\uff081216\uff09\u80a1\u7968\uff0c\u7528 <code>PerShare</code> \u7b97\u6cd5\uff0c\u96d6\u7136\u8a2d\u5b9a\u4e00\u80a1\u62bd 0.001\uff0c\u4f46\u662f\u56e0\u70ba 1000 \u80a1 * 0.001 = 1 \u5c0f\u65bc\u6700\u4f4e\u8cbb\u7528 min_trade_cost = 5\uff0c\u6240\u4ee5\u8cbb\u7528\u662f 5\u3002 <pre><code># pershare\u7b97\u6cd5\uff1a\u8cbb\u75285\u5143\npershare['orders'][1]\n</code></pre> [{'id': '4fba6e4d88a34bc6b6072d2155242915',   'dt': Timestamp('2022-12-02 13:30:00+0800', tz='Asia/Taipei'),   'reason': None,   'created': Timestamp('2022-12-01 13:30:00+0800',  tz='Asia/Taipei'),   'amount': 1000,   'filled': 1000,   'commission': 5.0,   'stop': None,   'limit': None,   'stop_reached': False,   'limit_reached': False,   'sid': Equity(0 [1216]),   'status': }]"},{"location":"example/documents76/","title":"Custom_TW_Commission \u51fd\u6578\u4ecb\u7d39","text":"<p><code>zipline.finance.commission.Custom_TW_Commission(min_trade_cost=20, discount=1.0, tax = 0.003)</code>: \u53f0\u7063\u5c08\u7528\u7684\u624b\u7e8c\u8cbb\u6a21\u578b * \u50c5\u9069\u7528\u65bc equities\u3002 * \u53f0\u7063\u80a1\u7968\u9069\u7528\u7684\u624b\u7e8c\u8cbb\u6a21\u578b\uff0c\u8003\u91cf\u5238\u5546\u624b\u7e8c\u8cbb\uff08\u8cbb\u7387\uff1a0.001425\uff09\u53ca\u8b49\u4ea4\u7a05\uff0c\u540c\u6642\u9084\u53ef\u4ee5\u8a2d\u5b9a\u4e00\u500b\u6700\u4f4e\u8cbb\u7528\u3002 * \u53f0\u7063\u4ea4\u6613\u80a1\u7968\u6642\u7684\u60c5\u6cc1\u7684\u60c5\u6cc1\uff1a\u5728\u53f0\u7063\u4ea4\u6613\u80a1\u7968\u6642\uff0c\u4e3b\u8981\u6709\u5169\u500b\u76f4\u63a5\u6210\u672c\uff1a\u624b\u7e8c\u8cbb\u53ca\u8b49\u4ea4\u7a05\u3002     * \u624b\u7e8c\u8cbb         * \u8cb7\u9032\u6216\u8ce3\u51fa\u6642\u7686\u9808\u7e73\u4ea4\u3002         * \u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a\u6210\u4ea4\u50f9 \u00d7 \u6210\u4ea4\u80a1\u6578 \u00d7 0.1425 % \u00d7 \u6298\u6263\uff08\u6298\u6263\u9810\u8a2d\u662f 1\uff0c\u6c92\u6709\u6298\u6263\uff09\u3002         * \u624b\u7e8c\u8cbb\u6709\u6700\u4f4e\u50f9\u683c\uff08\u9810\u8a2d\u662f 20 \u5143\uff09\u3002     * \u8b49\u4ea4\u7a05         * \u8ce3\u51fa\u6642\u624d\u8981\u7e73\u4ea4\u3002         * \u8a08\u7b97\u65b9\u5f0f\u70ba\uff1a\u6210\u4ea4\u50f9 \u00d7 \u6210\u4ea4\u80a1\u6578 \u00d7 \u8b49\u4ea4\u7a05\u7387\uff08\u8b49\u4ea4\u7a05\u7387\u9810\u8a2d\u662f 0.3%\uff09\u3002</p>"},{"location":"example/documents76/#_1","title":"\u51fd\u6578\u8a9e\u6cd5\uff1a","text":"<ul> <li><code>min_trade_cost</code>\uff0d\u6700\u4f4e\u8cbb\u7528\u3002\u9810\u8a2d\u70ba 20 \u5143\u3002</li> <li><code>discount</code>\uff0d\u5238\u5546\u624b\u7e8c\u8cbb\u6298\u6263\u6bd4\u7387\u3002\u9810\u8a2d\u70ba 1\uff0c\u4ee3\u8868\u6c92\u6709\u6298\u6263\u3002</li> <li><code>tax</code>\uff0d\u8b49\u4ea4\u7a05\u7387\uff0c\u9810\u8a2d\u70ba 0.003\u3002</li> </ul>"},{"location":"example/documents76/#notes","title":"Notes\uff1a","text":"<p>\u624b\u7e8c\u8cbb\u8a08\u7b97\u6642\uff0c\u50f9\u683c\u4ee5\u6210\u4ea4\u65e5\u6536\u76e4\u50f9\u70ba\u6e96\uff0c\u6578\u91cf\u4e5f\u4ee5\u6210\u4ea4\u6642\u70ba\u6e96\uff0c\u4e5f\u5c31\u662f\u8aaa\uff0c\u5982\u679c\u56e0\u70ba\u80a1\u6578\u8b8a\u52d5\u9020\u6210 amount \u6709\u4efb\u4f55\u8b8a\u5316\uff0c\u8a08\u7b97\u4e0a\u90fd\u662f\u7528\u6210\u4ea4\u6642\u65b0\u7684 amount\u3002\u624b\u7e8c\u8cbb\u8a08\u7b97\u6642\uff0c\u50f9\u683c\u4ee5\u6210\u4ea4\u65e5\u6536\u76e4\u50f9\u70ba\u6e96\uff0c\u6578\u91cf\u4e5f\u4ee5\u6210\u4ea4\u6642\u70ba\u6e96\uff0c\u4e5f\u5c31\u662f\u8aaa\uff0c\u5982\u679c\u56e0\u70ba\u80a1\u6578\u8b8a\u52d5\u9020\u6210 amount \u6709\u4efb\u4f55\u8b8a\u5316\uff0c\u8a08\u7b97\u4e0a\u90fd\u662f\u7528\u6210\u4ea4\u6642\u65b0\u7684 amount\u3002</p>"},{"location":"example/documents76/#examples","title":"Examples:","text":"<p><pre><code>import pandas as pd\nimport datetime\nimport tejapi\nimport os\nimport warnings\nfrom logbook import Logger, StderrHandler, INFO\nwarnings.filterwarnings('ignore')\n\n# set log\nlog_handler = StderrHandler(format_string='[{record.time:%Y-%m-%d %H:%M:%S.%f}]: ' +\n                            '{record.level_name}: {record.func_name}: {record.message}',\n                            level=INFO)\nlog_handler.push_application()\nlog = Logger('CommissionModel')\n\n# tej_key\nos.environ['TEJAPI_KEY'] = \"your key\" \nos.environ['TEJAPI_BASE'] = \"https://api.tej.com.tw\"\n\n# date\n# set date\nstart='2022-12-01'\nend='2022-12-31'\nos.environ['mdate'] = '20221201 20221231'\n\ntz = 'UTC'\nstart_dt, end_dt = pd.Timestamp(start, tz = tz), pd.Timestamp(end, tz = tz)\n\n# calendar\ncalendar_name='TEJ'\n\n# bundle_name\nbundle_name = 'tquant'\n\n# ticker\nos.environ['ticker'] = '1216 IR0001'\n\n# ingest\n!zipline ingest -b tquant\n</code></pre> Merging daily equity files: [2023-11-27 03:31:44.753277] INFO: zipline.data.bundles.core: Ingesting tquant. <pre><code>from zipline.finance import commission, slippage\nfrom zipline.api import *\n\nfrom zipline import run_algorithm\nfrom zipline.utils.calendar_utils import get_calendar\n\nfrom zipline.utils.run_algo import (get_transaction_detail,\n                                    get_record_vars)\n</code></pre></p> <ul> <li>\u6ed1\u50f9\u6a21\u578b\u8a2d\u5b9a\u70ba\uff1a<code>slippage.FixedSlippage(spread=0.00)</code>\u3002\u5176\u4e2d\uff0cspread \u8a2d\u5b9a\u70ba 0\uff0c\u9019\u6a23\u6703\u6bd4\u8f03\u597d\u89c0\u5bdf\u7d50\u679c\uff0c\u56e0\u70ba\u6ed1\u50f9\u6703\u5c0e\u81f4\u6210\u4ea4\u50f9\u683c\u6539\u8b8a\u3002\u82e5\u6709\u6ed1\u50f9\u5247\u6703\u4f7f\u7528\u8003\u616e\u6ed1\u50f9\u5f8c\u7684\u50f9\u683c\u8a08\u7b97\u624b\u7e8c\u8cbb\u3002 <pre><code>def initialize_Custom(context):\n    context.i = 0\n    context.tickers = ['1216']\n    context.asset = [symbol(ticker) for ticker in context.tickers]      \n    set_slippage(slippage.FixedSlippage(spread=0.00))\n\n    # set_commission\n    set_commission(equities=commission.Custom_TW_Commission(min_trade_cost=20,\n                                                            discount = 1.0,\n                                                            tax = 0.003))\n\n    set_benchmark(symbol('IR0001'))\n\ndef handle_data(context, data):\n\n    if context.i == 0:\n        for asset in context.asset:\n            order_target(asset, 1000)\n    if context.i == 2:\n        for asset in context.asset:\n            order_target(asset, 0)\n\n    record(close=data.current(context.asset, 'close'))\n    context.i += 1\n\ncapital_base = 1e5\n</code></pre> <pre><code>closing_price = tejapi.get('TWN/APIPRCD',\n                           coid=['1216'],\n                           opts={'columns':['mdate','coid','close_d']},\n                           mdate={'gte':start_dt,'lte':end_dt },\n                           paginate=True)\n\nCustom = run_algorithm(start=start_dt,\n                       end=end_dt,\n                       initialize=initialize_Custom,\n                       handle_data=handle_data,\n                       capital_base=capital_base,\n                       trading_calendar=get_calendar(calendar_name),\n                       bundle=bundle_name)\n</code></pre></li> <li> <p>\u67e5\u770b12/1-12/5\u7684\u6536\u76e4\u50f9 <pre><code># \u6536\u76e4\u50f9\nclosing_price[0:3]\n</code></pre> </p> </li> <li> <p>\u5728 12/1 \u4e0b\u55ae\u4e00\u5f35\u7d71\u4e00\uff081216\uff09\u80a1\u7968\uff0c\u7528 <code>Custom_TW_Commission</code> \u7b97\u6cd5\uff0c\u624b\u7e8c\u8cbb 0.1425 % \u4e14\u4e26\u7121\u6298\u6263\u3002 <pre><code># \u8cb7\u9032\uff1a65 * 1000 \u80a1 * 0.001425 = 93\nCustom['orders'][1]\n</code></pre> [{'id': 'a05f2ae2969c42bc809b112195eb3dbb',   'dt': Timestamp('2022-12-02 13:30:00+0800', tz='Asia/Taipei'),   'reason': None,   'created': Timestamp('2022-12-01 13:30:00+0800', tz='Asia/Taipei'),   'amount': 1000,   'filled': 1000,   'commission': 93,   'stop': None,   'limit': None,   'stop_reached': False,   'limit_reached': False,   'sid': Equity(0 [1216]),   'status': }]   <li>\u752812/5 \u7684\u6536\u76e4\u50f9\u4e0b\u55ae\u8ce3\u51fa\u4e00\u5f35\u7d71\u4e00\uff081216\uff09\u80a1\u7968\u4e26\u65bc12/6 \u6210\u4ea4\uff0c\u624b\u7e8c\u8cbb 0.1425 % \u4e14\u4e26\u7121\u6298\u6263\uff0c\u8b49\u4ea4\u7a050.3%\u3002 <pre><code># \u8ce3\u51fa\uff1a64.6 * 1000 \u80a1 * 0.001425 + 64.6 * 1000 \u80a1 * 0.003 = 93 + 194 = 287\nCustom['orders'][3]\n</code></pre> [{'id': '5b0c6088e7a74a43b40d95ab4b7be5d4',   'dt': Timestamp('2022-12-06 13:30:00+0800', tz='Asia/Taipei'),   'reason': None,   'created': Timestamp('2022-12-05 13:30:00+0800', tz='Asia/Taipei'),   'amount': -1000,   'filled': -1000,   'commission': 287,   'stop': None,   'limit': None,   'stop_reached': False,   'limit_reached': False,   'sid': Equity(0 [1216]),   'status': }]"},{"location":"example/documents77/","title":"NoCommission : \u4e0d\u6536\u4efb\u4f55\u624b\u7e8c\u8cbb","text":""},{"location":"example/documents77/#ziplinefinancecommissionnocommission","title":"<code>zipline.finance.commission.NoCommission()</code>","text":"<ul> <li>\u4e0d\u6536\u4efb\u4f55\u624b\u7e8c\u8cbb\uff0c\u6b64\u6a21\u578b\u4e3b\u8981\u7528\u4f86\u6e2c\u8a66\u3002</li> <li>\u9069\u7528\u65bc equities \u8207 futures\u3002</li> </ul>"},{"location":"example/documents77/#notes","title":"Notes\uff1a","text":"<p>\u624b\u7e8c\u8cbb\u8a08\u7b97\u6642\uff0c\u50f9\u683c\u4ee5\u6210\u4ea4\u65e5\u6536\u76e4\u50f9\u70ba\u6e96\uff0c\u6578\u91cf\u4e5f\u4ee5\u6210\u4ea4\u6642\u70ba\u6e96\uff0c\u4e5f\u5c31\u662f\u8aaa\uff0c\u5982\u679c\u56e0\u70ba\u80a1\u6578\u8b8a\u52d5\u9020\u6210 amount \u6709\u4efb\u4f55\u8b8a\u5316\uff0c\u8a08\u7b97\u4e0a\u90fd\u662f\u7528\u6210\u4ea4\u6642\u65b0\u7684 amount\u3002\u624b\u7e8c\u8cbb\u8a08\u7b97\u6642\uff0c\u50f9\u683c\u4ee5\u6210\u4ea4\u65e5\u6536\u76e4\u50f9\u70ba\u6e96\uff0c\u6578\u91cf\u4e5f\u4ee5\u6210\u4ea4\u6642\u70ba\u6e96\uff0c\u4e5f\u5c31\u662f\u8aaa\uff0c\u5982\u679c\u56e0\u70ba\u80a1\u6578\u8b8a\u52d5\u9020\u6210 amount \u6709\u4efb\u4f55\u8b8a\u5316\uff0c\u8a08\u7b97\u4e0a\u90fd\u662f\u7528\u6210\u4ea4\u6642\u65b0\u7684 amount\u3002</p>"},{"location":"example/documents78/","title":"FixedSlippage : \u8a2d\u5b9a\u56fa\u5b9a spread \u7684\u6ed1\u50f9\uff0c\u4e0d\u80fd\u8a2d\u5b9a\u6210\u4ea4\u91cf\u9650\u5236","text":""},{"location":"example/documents78/#ziplinefinanceslippagefixedslippagespread00","title":"<code>zipline.finance.slippage.FixedSlippage(spread=0.0)</code>","text":"<ul> <li>\u8a2d\u5b9a\u56fa\u5b9a spread \u7684\u6ed1\u50f9\uff0c\u4e0d\u80fd\u8a2d\u5b9a\u6210\u4ea4\u91cf\u9650\u5236\u3002</li> <li>\u5728\u6bcf\u7b46\u4ea4\u6613\u7684\u6210\u4ea4\u50f9\u683c\u984d\u5916\u52a0\u5165 \\(\\pm \\frac{\\text{spread}}{2}\\)\uff0c\u5176\u4e2d <code>spread</code> \u70ba\u8a2d\u5b9a\u7684\u56fa\u5b9a\u6ed1\u50f9\u503c\u3002</li> <li>\u5982\u679c\u662f\u8cb7\u5165\uff0c\u5247\u6210\u4ea4\u50f9\u683c $=price+\\frac{\\text{spread}}{2} $ \uff1b\u82e5\u662f\u8ce3\u51fa\uff0c\u5247\u6210\u4ea4\u50f9\u683c $=price-\\frac{\\text{spread}}{2} $\u3002 \\(price=\\) \u7576\u65e5\u6536\u76e4\u50f9\u3002</li> </ul>"},{"location":"example/documents78/#parameters","title":"Parameters\uff1a","text":"<ul> <li>spread (float, optional) - \u7528\u4f86\u4f30\u8a08\u6210\u4ea4\u50f9\u8207\u7576\u65e5\u6536\u76e4\u50f9\u7684\u50f9\u5dee\u3002</li> </ul>"},{"location":"example/documents78/#note","title":"Note:","text":"<ul> <li>\u6ed1\u50f9\u8a08\u7b97\u6642\uff0c\u50f9\u683c\u4ee5\u6210\u4ea4\u65e5\u6536\u76e4\u50f9\u70ba\u6e96\uff0c\u6578\u91cf\u4e5f\u4ee5\u6210\u4ea4\u6642\u70ba\u6e96\u3002\u4e5f\u5c31\u662f\u8aaa\uff0c\u5982\u679c\u56e0\u70ba\u80a1\u6578\u8b8a\u52d5\u9020\u6210 amount \u6709\u4efb\u4f55\u8b8a\u5316\uff0c\u8a08\u7b97\u4e0a\u90fd\u662f\u7528\u6210\u4ea4\u6642\u65b0\u7684 amount\u3002</li> <li>\u5982\u679c <code>initialize(context):</code> \u88e1\u9762\u6c92\u6709\u8a2d\u5b9a<code>set_slippage()</code>\uff0c\u7cfb\u7d71\u9810\u8a2d\u4f7f\u7528 <code>FixedBasisPointsSlippage(basis_points = 5.0, volume_limit = 0.1)</code>\u3002</li> <li>\u5982\u679c\u5e0c\u671b\u5b8c\u5168\u4e0d\u8003\u616e\u4ea4\u6613\u91cf\u53ca\u6ed1\u50f9\u9650\u5236\uff0c\u5247\u4f7f\u7528 <code>set_slippage(slippage.NoSlippage())</code>\u3002</li> </ul>"},{"location":"example/documents78/#examples","title":"Examples:","text":""},{"location":"example/documents78/#import-settings","title":"Import settings","text":"<pre><code>import pandas as pd \nimport numpy as np\nimport tejapi\nimport os\n\n# tej_key\nos.environ['TEJAPI_BASE'] = 'https://api.tej.com.tw'\nos.environ['TEJAPI_KEY'] = 'your key'\n\n# set date\nos.environ['mdate'] = \"20221201 20221231\"\n\n# ticker\nos.environ['ticker'] = \"IR0001 1216 5844\"\n\n# ingest\n!zipline ingest -b tquant\n</code></pre> <pre><code>from zipline.finance import commission, slippage\nfrom zipline.api import *\n\nfrom zipline import run_algorithm  \nfrom zipline.utils.run_algo import  get_transaction_detail\n</code></pre>"},{"location":"example/documents78/#_1","title":"\u8a2d\u7f6e\u4ea4\u6613\u7b56\u7565","text":"<p><pre><code>start_dt = pd.Timestamp('2022-12-01', tz='UTC')\nend_dt = pd.Timestamp('2022-12-31', tz='UTC')\n\ndef initialize(context):\n    context.i = 0\n    context.tickers = ['1216']\n    context.asset = [symbol(ticker) for ticker in context.tickers] \n\n    # \u8a2d\u5b9a\u6ed1\u50f9\u6a21\u578b\u4f86\u9032\u884c\u6a21\u64ec                \n    # set_slippage()\u53ea\u63a5\u6536\u4e00\u500bspread\u53c3\u6578\n    set_slippage(slippage.FixedSlippage(spread = 0.2))\n\n    # \u9019\u88e1\u5728\u63a5\u6536commission.PerDollar()\u56de\u50b3\u7d50\u679c\u5f8c\u8f38\u5165\u53c3\u6578\n    set_commission(commission.PerDollar(cost = commission_cost))\n\n    # \u8a2d\u5b9abenchmark\n    set_benchmark(symbol('IR0001'))\n\ndef handle_data(context, data):\n\n    if context.i == 0:  # 2022-12-01(\u56de\u6e2c\u7684\u7b2c\u4e00\u500b\u4ea4\u6613\u6642\u9593\u9ede)\u4e0b\u55ae\u8cb7 5 \u5f35\u7d71\u4e00\uff081216\uff09\u80a1\u7968\n        for asset in context.asset:\n            order(asset, 5000)\n\n    if context.i == 7:  # 2022-12-12(\u56de\u6e2c\u7684\u7b2c\u516b\u500b\u4ea4\u6613\u6642\u9593\u9ede)\u8ce3\u51fa 2 \u5f35\u7d71\u4e00\uff081216\uff09\u80a1\u7968\n        for asset in context.asset:\n            order(asset, -2000)\n\n    context.i += 1\n\ncommission_cost = 0.001425 + 0.003 / 2\ncapital_base = 1e6\n</code></pre> <pre><code># \u8a55\u4f30\u7d50\u679c\nclosing_price = tejapi.fastget('TWN/APIPRCD',\n                               coid=['1216'],\n                               opts={'columns':['mdate','coid','close_d','vol']},\n                               mdate={'gte':start_dt,'lte':end_dt },\n                               paginate=True)\n\nclosing_price['vol'] = closing_price['vol'] * 1000\n\nperformance = run_algorithm(start=start_dt,\n                            end=end_dt,\n                            initialize=initialize,\n                            handle_data=handle_data,\n                            capital_base=capital_base,\n                            bundle='tquant')\n\npositions, transactions, orders = get_transaction_detail(performance)\n</code></pre></p>"},{"location":"example/documents78/#1","title":"\u60c5\u6cc1 1: \u8cb7\u5165\u6642\u8a08\u7b97\u6ed1\u50f9","text":"<ul> <li>12/1\u6642\u4e0b\u55ae\u8cb7 5 \u5f35\u7d71\u4e00\uff081216\uff09\u80a1\u7968\uff0c12/2\u6210\u4ea4\u3002</li> <li>\u6536\u76e4\u50f9\u662f 65.0\uff0c\u4f46\u56e0\u70ba\u6211\u5011\u8a2d\u5b9a spread = 0.2\uff0c\u6240\u4ee5\u6210\u4ea4\u50f9\uff08transactions.price\uff09\u662f 65 + 0.2 / 2 = 65.1\uff0c\u624b\u7e8c\u8cbb\uff08'commission'\uff09\u662f 65.1 * 5000 * 0.002925 = 952.0875\uff08\u624b\u7e8c\u8cbb\u662f\u9810\u5148\u8a2d\u5b9a\u597d\u7684\uff0c\u9019\u6b21\u7528 PerDollar\uff09\u3002 <pre><code># \u6536\u76e4\u50f9\nclosing_price.query('(mdate == \"2022-12-02\")')\n</code></pre></li> </ul> <pre><code># \u624b\u7e8c\u8cbb\uff08'commission'\uff09\u662f 952.0875\norders.query('(created.dt.strftime(\"%Y-%m-%d\") == \"2022-12-01\")')\n</code></pre> <pre><code># \u6210\u4ea4\u50f9\uff08transactions.price\uff09\u70ba 65.1\ntransactions.loc['2022-12-02']\n</code></pre>"},{"location":"example/documents78/#2","title":"\u60c5\u6cc1 2: \u8ce3\u51fa\u6642\u8a08\u7b97\u6ed1\u50f9","text":"<ul> <li>\u572812/12\u8ce3\u51fa 2 \u5f35\u7d71\u4e00\uff081216\uff09\u80a1\u7968\uff0c12/13\u6210\u4ea4\u3002</li> <li>12/13\u6536\u76e4\u50f9 65.4\uff0c\u7531\u65bc\u662f\u8ce3\u55ae\uff0c\u6240\u4ee5\u6210\u4ea4\u50f9\u662f 65.4 - 0.2 / 2 = 65.3\uff0c\u624b\u7e8c\u8cbb\u8a08\u7b97\u65b9\u6cd5\u4e00\u6a23\u3002 <pre><code># \u6536\u76e4\u50f9\nclosing_price.query('(mdate == \"2022-12-13\")')\n</code></pre></li> </ul> <pre><code># \u572812/12\u8ce3\u51fa\u5169\u5f35\u7d71\u4e00 (1216) \u80a1\u7968\uff0c12/13\u6210\u4ea4\u3002\norders.query('(created.dt.strftime(\"%Y-%m-%d\") == \"2022-12-12\")')\n</code></pre> <pre><code># \u6210\u4ea4\u50f9\u662f65.4 - 0.2 / 2 = 65.3\ntransactions.loc['2022-12-13']\n</code></pre>"},{"location":"example/documents79/","title":"VolumeShareSlippage : \u8a2d\u5b9a\u56fa\u5b9a spread \u7684\u6ed1\u50f9\uff0c\u4e0d\u80fd\u8a2d\u5b9a\u6210\u4ea4\u91cf\u9650\u5236","text":""},{"location":"example/documents79/#ziplinefinanceslippagevolumeshareslippagevolume_limit0025-price_impact01","title":"<code>zipline.finance.slippage.VolumeShareSlippage(volume_limit=0.025, price_impact=0.1)</code>","text":"<ul> <li>\u5229\u7528\u8a72\u7b46\u4ea4\u6613\u4f54\u7576\u5929\u7e3d\u4ea4\u6613\u91cf\u7684\u767e\u5206\u6bd4\uff08volume share\uff09\u4f86\u8a08\u7b97\u6ed1\u50f9\uff0c\u8003\u616e\u6ed1\u50f9\u5f8c\u7684\u6210\u4ea4\u50f9\u8a08\u7b97\u65b9\u6cd5\u5982\u4e0b\uff08\u8cb7\u5165\u7684\u8a71\uff0c\u7b26\u865f\u70ba+\uff1b\u8ce3\u51fa\u7684\u8a71\uff0c\u7b26\u865f\u70ba-\uff09:  </li> </ul>   $price \\times [1 \\pm (\\text{price\\_impact}) \\times (\\text{volume\\_share})^2]$   <p>\\(price=\\) \u7576\u65e5\u6536\u76e4\u50f9\u3002 \\(\\text{volume\\_share}=\\)\u6b64\u55ae\u4ea4\u6613\u91cf\u4f54\u7e3d\u4ea4\u6613\u91cf\u767e\u5206\u6bd4\u6578\uff0c\u6700\u9ad8\u70ba\\(\\text{volume\\_limit}\\)</p> <ul> <li>\u8a2d\u5b9a\u7576\u65e5\u4ea4\u6613\u91cf\u9650\u5236\uff1a</li> </ul>   $\\text{historical\\_volume} \\times \\text{volume\\_limit}$   <p>\\(\\text{historical\\_volume}=\\) \u7576\u65e5\u6210\u4ea4\u50f9\u3002</p>"},{"location":"example/documents79/#parameters","title":"Parameters\uff1a","text":"<ul> <li>volume_limit (float, optional) -<ul> <li>\u9650\u5236\u8cb7\u8ce3\u91cf\u4f54\u7e3d\u4ea4\u6613\u91cf\u7684\u6700\u5927\u767e\u5206\u6bd4\uff0c\u9810\u8a2d = 2.5 %\u3002</li> <li>\u6b64\u9650\u5236\u8003\u616e\u5982\u679c\u8cb7\u8ce3\u5927\u91cf\u80a1\u7968\uff0c\u6703\u5c0d\u80a1\u50f9\u9020\u6210\u904e\u5927\u5f71\u97ff\uff0c\u5c0e\u81f4\u504f\u96e2\u6b77\u53f2\u7684\u50f9\u683c\uff0c\u82e5\u5229\u7528\u7576\u5929\u6536\u76e4\u50f9\u9032\u884c\u6a21\u64ec\u4ea4\u6613\u5c31\u6703\u9ad8\u4f30\u7372\u5229\u3002</li> </ul> </li> <li>price_impact (float, optional) - \u6ed1\u50f9\u5f71\u97ff\u7a0b\u5ea6\uff0c\u5176\u503c\u8d8a\u5927\u6642\uff0c\u6ed1\u50f9\u5f71\u97ff\u7a0b\u5ea6\u8d8a\u5927\uff0c\u9810\u8a2d = 0.1\u3002</li> </ul>"},{"location":"example/documents79/#note","title":"Note:","text":"<ul> <li>\u6ed1\u50f9\u8a08\u7b97\u6642\uff0c\u50f9\u683c\u4ee5\u6210\u4ea4\u65e5\u6536\u76e4\u50f9\u70ba\u6e96\uff0c\u6578\u91cf\u4e5f\u4ee5\u6210\u4ea4\u6642\u70ba\u6e96\u3002\u4e5f\u5c31\u662f\u8aaa\uff0c\u5982\u679c\u56e0\u70ba\u80a1\u6578\u8b8a\u52d5\u9020\u6210 amount \u6709\u4efb\u4f55\u8b8a\u5316\uff0c\u8a08\u7b97\u4e0a\u90fd\u662f\u7528\u6210\u4ea4\u6642\u65b0\u7684 amount\u3002</li> <li>\u5982\u679c <code>initialize(context):</code> \u88e1\u9762\u6c92\u6709\u8a2d\u5b9a<code>set_slippage()</code>\uff0c\u7cfb\u7d71\u9810\u8a2d\u4f7f\u7528 <code>FixedBasisPointsSlippage(basis_points = 5.0, volume_limit = 0.1)</code>\u3002</li> <li>\u5982\u679c\u5e0c\u671b\u5b8c\u5168\u4e0d\u8003\u616e\u4ea4\u6613\u91cf\u53ca\u6ed1\u50f9\u9650\u5236\uff0c\u5247\u4f7f\u7528 <code>set_slippage(slippage.NoSlippage())</code>\u3002</li> </ul>"},{"location":"example/documents79/#examples","title":"Examples:","text":""},{"location":"example/documents79/#import-settings","title":"Import settings","text":"<pre><code>import pandas as pd \nimport numpy as np\nimport tejapi\nimport os\n\n# tej_key\nos.environ['TEJAPI_BASE'] = 'https://api.tej.com.tw'\nos.environ['TEJAPI_KEY'] = 'your key'\n\n# set date\nos.environ['mdate'] = \"20221201 20221231\"\n\n# ticker\nos.environ['ticker'] = \"IR0001 1216 5844\"\n\n# ingest\n!zipline ingest -b tquant\n</code></pre> <pre><code>from zipline.finance import commission, slippage\nfrom zipline.api import *\n\nfrom zipline import run_algorithm  \nfrom zipline.utils.run_algo import  get_transaction_detail\n</code></pre>"},{"location":"example/documents79/#_1","title":"\u8a2d\u7f6e\u4ea4\u6613\u7b56\u7565","text":"<p><pre><code>start_dt = pd.Timestamp('2022-12-01', tz='UTC')\nend_dt = pd.Timestamp('2022-12-31', tz='UTC')\n\ndef initialize(context):\n    context.i = 0\n    context.tickers = ['1216']\n    context.asset = [symbol(ticker) for ticker in context.tickers]  \n\n#     set_slippage\n    set_slippage(slippage.VolumeShareSlippage(volume_limit=0.025, price_impact=0.1))\n\n    set_commission(commission.PerDollar(cost = commission_cost))\n    set_benchmark(symbol('IR0001'))\n\ndef handle_data(context, data):\n\n    if context.i == 0: # 2022-12-01\n        for asset in context.asset:\n            order(asset, 1500000)       \n\n    if context.i == 10: # 2022-12-15\n        for asset in context.asset:\n            order(asset, -200000)    \n\n    context.i += 1\n\ncapital_base = 1e8\ncommission_cost = 0.001425 + 0.003 / 2\n</code></pre> <pre><code>closing_price = tejapi.fastget('TWN/APIPRCD',\n                               coid=['1216'],\n                               opts={'columns':['mdate','coid','close_d','vol']},\n                               mdate={'gte':start_dt,'lte':end_dt },\n                               paginate=True)\n\nclosing_price['vol'] = closing_price['vol'] * 1000  #\u5c07\u5343\u80a1\u8f49\u63db\u6210\u80a1\n\n# \u8a55\u4f30\u7d50\u679c\nperformance = run_algorithm(start=start_dt,\n                            end=end_dt,\n                            initialize=initialize,\n                            handle_data=handle_data,\n                            capital_base=capital_base,\n                            bundle='tquant')\n\npositions, transactions, orders = get_transaction_detail(performance)\n</code></pre></p>"},{"location":"example/documents79/#1","title":"\u60c5\u6cc1 1: \u8cb7\u5165\u6642\u8a08\u7b97\u6ed1\u50f9","text":"<ul> <li>\u572812/1\u4e0b\u55ae 1500 \u5f35\u7d71\u4e00\uff0c\u4f46\u89c0\u5bdf\u6210\u4ea4\u91cf\u8cc7\u6599\u767c\u73fe\uff0c\u9019\u6bb5\u671f\u9593\u6bcf\u65e5\u6210\u4ea4\u91cf\u5927\u7d04\u53ea\u6709\u6578\u5343\u5230\u4e00\u842c\u591a\u5f35\uff08\u5f9e TEJ API\uff08TWN/APIPRCD\uff09\u53d6\u5f97\u7684\u6210\u4ea4\u91cf\uff08vol\uff09\u55ae\u4f4d\u662f\u5343\u80a1\uff0c\u4f46\u70ba\u4e86\u4e00\u81f4\u6027\uff0c\u6240\u4ee5\u6211\u5011\u9019\u908a\u5c07\u5343\u80a1\u8f49\u63db\u6210\u80a1\uff0c\u5229\u7528 order \u4e0b\u55ae\u6642\u7684\u55ae\u4f4d\u4e5f\u662f\u80a1\uff09\u3002</li> <li>\u56e0\u70ba\u6211\u5011\u8a2d\u5b9a volume_limit = 0.025\uff0c\u4f7f\u5f97 zipline \u6703\u628a\u9019\u7b46\u8a02\u55ae\u62c6\u6210\u6578\u5929\u6162\u6162\u6d88\u5316\uff0c\u6bcf\u5929\u6210\u4ea4\u91cf\u4e0d\u8d85\u904e\u8a72\u80a1\u7968\u7e3d\u6210\u4ea4\u91cf\u7684 2.5%\u3002 <pre><code># 1216\u6bcf\u65e5\u6210\u4ea4\u91cf\u5927\u7d04\u53ea\u6709\u6578\u5343\u5230\u4e00\u842c\u591a\u5f35\uff08vol\u55ae\u4f4d\u662f\u5343\u80a1\uff09\nclosing_price.query('(mdate &gt;= \"2022-12-01\")')\n</code></pre></li> </ul> <pre><code># \u572812/1\u4e0b\u55ae\u4e00\u5343\u4e94\u767e\u5f35\u7d71\u4e00\norders.loc['2022-12-01']\n</code></pre> <ul> <li>12/2\u7684\u7e3d\u6210\u4ea4\u91cf\u662f 15184000 \u80a1\uff0c\u7531\u65bc\u6211\u5011\u8a2d\u5b9a volume_limit = 0.025\uff0c\u56e0\u6b64 VolumeShareSlippage \u6703\u628a12/2\u7684\u6210\u4ea4\u91cf\u9650\u5236\u57282.5%\uff0c\u4e5f\u5c31\u662f379600\u80a1\u3002</li> <li>\u6210\u4ea4\u50f9\uff08transactions.price\uff09\u8a08\u7b97\u65b9\u6cd5\u662f\uff1a\u539f\u59cb\u6536\u76e4\u50f9 * ( 1 + price_impact * volume_share ^ 2 ) = 65 * ( 1 + 0.1 * 0.025 ^ 2 )  \u2248 65.004063</li> <li>price_impact \u662f\u9810\u5148\u8a2d\u5b9a\u597d\u76840.1\uff0c\u4e14\u56e0\u70ba\u6b64\u8655\u70ba\u8cb7\u55ae\uff0c\u6240\u4ee5\u7b26\u865f\u70ba\u6b63\u3002 <pre><code># \u67e5\u770b\u6210\u4ea4\u91cf\norders.loc['2022-12-02']\n</code></pre></li> </ul> <pre><code># \u67e5\u770b\u6210\u4ea4\u50f9\ntransactions.loc['2022-12-02']\n</code></pre>"},{"location":"example/documents79/#orders-filled","title":"orders \u8cc7\u6599\u4e2d\u7684 filled \u70ba\u7d2f\u7a4d\u6210\u4ea4\u91cf","text":"<ul> <li>12/7\u7684 filled = 1293325 \u80a1\uff0c\u4ee3\u8868 12/2 \u5230 12/7 \u6210\u4ea4\u7684\u7d2f\u8a08\u80a1\u6578 = 379600 + 242600 + 329275 + 341850 = 1293325\u3002</li> <li>\u622a\u81f312/8\u5df2\u7d93\u8cb7\u6eff\u4e86 1500 \u5f35\uff0c\u6240\u4ee5\u6700\u5f8c status \u5c31\u6703\u5f9e0 \u8b8a\u6210 1\uff0c\u4ee3\u8868\u7576\u521d\u4e0b\u7684 1500 \u5f35\u5df2\u7d93\u5168\u6578\u6210\u4ea4\u3002 <pre><code>orders.query('(created.dt.strftime(\"%Y-%m-%d\") == \"2022-12-01\")')\n</code></pre></li> </ul>"},{"location":"example/documents79/#2","title":"\u60c5\u6cc1 2: \u8ce3\u51fa\u6642\u8a08\u7b97\u6ed1\u50f9","text":"<ul> <li>\u5728 12/15 \u4e0b\u55ae\u8ce3\u51fa 200 \u5f35\u7d71\u4e00\uff0c\u56e0\u70ba\u572812/16\u7e3d\u4ea4\u6613\u91cf\u662f 10721 \u5f35\uff0cvolume_share = 200 / 10721 \u2248 0.018655\u5c0f\u65bc 0.025\uff0c\u6240\u4ee512/16\u4e00\u5929\u5c31\u80fd\u8ce3\u6389\u3002</li> <li>\u6210\u4ea4\u50f9\uff08transactions.price\uff09\u662f 65.3 * ( 1 - 0.1 * 0.018655 ^ 2 ) = 65.297728\uff08\u8ce3\u51fa\u7684\u8a71\u662f\u6e1b\uff09\u3002</li> </ul> <pre><code># \u67e5\u770b\u4ea4\u6613\u91cf\nclosing_price.query('(mdate &gt;= \"2022-12-16\")')\n</code></pre> <pre><code>orders.query('(created.dt.strftime(\"%Y-%m-%d\") == \"2022-12-15\")')\n</code></pre> <pre><code># \u67e5\u770b\u6210\u4ea4\u50f9\ntransactions.loc['2022-12-16']\n</code></pre>"},{"location":"example/documents80/","title":"FixedBasisPointsSlippage : \u8a2d\u5b9a\u56fa\u5b9a\u57fa\u9ede\u7684\u6ed1\u50f9\uff0c\u4e26\u53ef\u8a2d\u5b9a\u6210\u4ea4\u91cf\u9650\u5236","text":""},{"location":"example/documents80/#ziplinefinanceslippagefixedbasispointsslippagebasis_points50-volume_limit01","title":"<code>zipline.finance.slippage.FixedBasisPointsSlippage(basis_points=5.0, volume_limit=0.1)</code>","text":"<ul> <li>\u70ba zipline \u9810\u8a2d\u6a21\u578b\uff0c\u8a2d\u5b9a\u56fa\u5b9a\u57fa\u9ede\u7684\u6ed1\u50f9\uff0c\u5176\u8a08\u7b97\u65b9\u6cd5\u70ba\uff08\u8cb7\u5165\u7684\u8a71\uff0c\u7b26\u865f\u70ba+\uff1b\u8ce3\u51fa\u7684\u8a71\uff0c\u7b26\u865f\u70ba-\uff09:  </li> </ul>   $price \\times [1 \\pm \\text{basis\\_point} \\times 0.0001]$   <ul> <li>\u8a2d\u5b9a\u7576\u65e5\u4ea4\u6613\u91cf\u9650\u5236\uff1a</li> </ul>   $\\text{historical\\_volume} \\times \\text{volume\\_limit}$   <p>\\(\\text{historical\\_volume}=\\) \u7576\u65e5\u6210\u4ea4\u50f9\u3002</p>"},{"location":"example/documents80/#parameters","title":"Parameters\uff1a","text":"<ul> <li>volume_limit (float, optional) -<ul> <li>\u8cb7\u8ce3\u91cf\u4f54\u7e3d\u4ea4\u6613\u91cf\u7684\u6700\u9ad8\u767e\u5206\u6bd4\uff0c\u9810\u8a2d = 0.1\u3002</li> <li>\u6b64\u9650\u5236\u8003\u616e\u5982\u679c\u8cb7\u8ce3\u5927\u91cf\u80a1\u7968\uff0c\u6703\u5c0d\u80a1\u50f9\u9020\u6210\u904e\u5927\u5f71\u97ff\uff0c\u5c0e\u81f4\u504f\u96e2\u6b77\u53f2\u7684\u50f9\u683c\uff0c\u82e5\u5229\u7528\u7576\u5929\u6536\u76e4\u50f9\u9032\u884c\u6a21\u64ec\u4ea4\u6613\u5c31\u6703\u9ad8\u4f30\u7372\u5229\u3002</li> </ul> </li> <li>basis_point (float, optional) - \u8a2d\u7f6e\u6ed1\u50f9\u57fa\u9ede\uff0c\u57fa\u9ede\u8d8a\u5927\uff0c\u6ed1\u50f9\u7a0b\u5ea6\u8d8a\u5927\uff0c\u9810\u8a2d = 5.0\u3002</li> </ul>"},{"location":"example/documents80/#note","title":"Note:","text":"<ul> <li>\u6ed1\u50f9\u8a08\u7b97\u6642\uff0c\u50f9\u683c\u4ee5\u6210\u4ea4\u65e5\u6536\u76e4\u50f9\u70ba\u6e96\uff0c\u6578\u91cf\u4e5f\u4ee5\u6210\u4ea4\u6642\u70ba\u6e96\u3002\u4e5f\u5c31\u662f\u8aaa\uff0c\u5982\u679c\u56e0\u70ba\u80a1\u6578\u8b8a\u52d5\u9020\u6210 amount \u6709\u4efb\u4f55\u8b8a\u5316\uff0c\u8a08\u7b97\u4e0a\u90fd\u662f\u7528\u6210\u4ea4\u6642\u65b0\u7684 amount\u3002</li> <li>\u5982\u679c <code>initialize(context):</code> \u88e1\u9762\u6c92\u6709\u8a2d\u5b9a<code>set_slippage()</code>\uff0c\u7cfb\u7d71\u9810\u8a2d\u4f7f\u7528 <code>FixedBasisPointsSlippage(basis_points = 5.0, volume_limit = 0.1)</code>\u3002</li> <li>\u5982\u679c\u5e0c\u671b\u5b8c\u5168\u4e0d\u8003\u616e\u4ea4\u6613\u91cf\u53ca\u6ed1\u50f9\u9650\u5236\uff0c\u5247\u4f7f\u7528 <code>set_slippage(slippage.NoSlippage())</code>\u3002</li> </ul>"},{"location":"example/documents80/#examples","title":"Examples:","text":""},{"location":"example/documents80/#import-settings","title":"Import settings","text":"<pre><code>import pandas as pd \nimport numpy as np\nimport tejapi\nimport os\n\n# tej_key\nos.environ['TEJAPI_BASE'] = 'https://api.tej.com.tw'\nos.environ['TEJAPI_KEY'] = 'your key'\n\n# set date\nos.environ['mdate'] = \"20221201 20221231\"\n\n# ticker\nos.environ['ticker'] = \"IR0001 1216 5844\"\n\n# ingest\n!zipline ingest -b tquant\n</code></pre> <pre><code>from zipline.finance import commission, slippage\nfrom zipline.api import *\n\nfrom zipline import run_algorithm  \nfrom zipline.utils.run_algo import  get_transaction_detail\n</code></pre>"},{"location":"example/documents80/#_1","title":"\u8a2d\u7f6e\u4ea4\u6613\u7b56\u7565","text":"<p><pre><code>start_dt = pd.Timestamp('2022-12-01', tz='UTC')\nend_dt = pd.Timestamp('2022-12-31', tz='UTC')\n\ndef initialize(context):\n    context.i = 0\n    context.tickers = ['1216']\n    context.asset = [symbol(ticker) for ticker in context.tickers]  \n\n#     set_slippage\n    set_slippage(slippage.FixedBasisPointsSlippage(basis_points=5.0, volume_limit=0.025))\n\n    set_commission(commission.PerDollar(cost = commission_cost))\n    set_benchmark(symbol('IR0001'))\n\ndef handle_data(context, data):\n\n    if context.i == 0: # 2022-12-01\n        for asset in context.asset:\n            order(asset, 1500000)       \n\n    if context.i == 10: # 2022-12-15\n        for asset in context.asset:\n            order(asset, -200000)    \n\n    context.i += 1\n\ncapital_base = 1e8\ncommission_cost = 0.001425 + 0.003 / 2\n</code></pre> <pre><code>closing_price = tejapi.fastget('TWN/APIPRCD',\n                               coid=['1216'],\n                               opts={'columns':['mdate','coid','close_d','vol']},\n                               mdate={'gte':start_dt,'lte':end_dt },\n                               paginate=True)\n\nclosing_price['vol'] = closing_price['vol'] * 1000  #\u5c07\u5343\u80a1\u8f49\u63db\u6210\u80a1\n\n# \u8a55\u4f30\u7d50\u679c\nperformance = run_algorithm(start=start_dt,\n                            end=end_dt,\n                            initialize=initialize,\n                            handle_data=handle_data,\n                            capital_base=capital_base,\n                            bundle='tquant')\n\npositions, transactions, orders = get_transaction_detail(performance)\n</code></pre></p>"},{"location":"example/documents80/#1","title":"\u60c5\u6cc1 1: \u8cb7\u5165\u6642\u8a08\u7b97\u6ed1\u50f9","text":"<ul> <li>\u572812/1\u4e0b\u55ae 1500 \u5f35\u7d71\u4e00\uff0c\u6210\u4ea4\u91cf\u9650\u5236\u548cVolumeShareSlippage\u7bc4\u4f8b\u76f8\u540c\uff0c\u4e0d\u591a\u505a\u6558\u8ff0\u3002\u6240\u4ee512/1\u4e0b\u7684\u55ae\u5230\u4e8612/8\u624d\u5b8c\u5168\u6210\u4ea4\u3002</li> <li>\u4ee512/2\u70ba\u4f8b\uff0c\u6210\u4ea4\u50f9\uff08transactions.price\uff09\u8a08\u7b97\u65b9\u6cd5\u662f\uff1a\u539f\u59cb\u6536\u76e4\u50f9 * ( 1 + basis_point * 0.0001 ) = 65 * ( 1 + 5 * 0.0001 ) \u2248 65.0325</li> <li>basis_point \u662f\u9810\u5148\u8a2d\u5b9a\u597d\u7684 5\uff0c\u4e14\u56e0\u70ba\u6b64\u8655\u70ba\u8cb7\u55ae\uff0c\u6240\u4ee5\u7b26\u865f\u70ba\u6b63\u3002 <pre><code>#\u67e5\u770b12/2\u7684\u4ea4\u6613\u91cf\uff08vol\u55ae\u4f4d\u662f\u5343\u80a1\uff09\nclosing_price.query('(mdate == \"2022-12-02\")')\n</code></pre></li> </ul> <pre><code>orders.query('(created.dt.strftime(\"%Y-%m-%d\") == \"2022-12-01\")')\n</code></pre> <pre><code># \u67e5\u770b\u6210\u4ea4\u50f9\ntransactions.loc['2022-12-02']\n</code></pre>"},{"location":"example/documents80/#2","title":"\u60c5\u6cc1 2: \u8ce3\u51fa\u6642\u8a08\u7b97\u6ed1\u50f9","text":"<ul> <li>\u572812/15\u4e0b\u55ae\u8ce3\u51fa 200 \u5f35\u7d71\u4e00\u3002</li> <li>\u6210\u4ea4\u50f9\u8a08\u7b97\u65b9\u6cd5\u662f\uff1a\u539f\u59cb\u6536\u76e4\u50f9 * ( 1 - basis_point * 0.0001 ) = 65.3 * ( 1 - 5 * 0.0001 ) \u2248 65.26735</li> <li>basis_point \u662f\u9810\u5148\u8a2d\u5b9a\u597d\u7684 5\uff0c\u4e14\u56e0\u70ba\u6b64\u8655\u70ba\u8ce3\u55ae\uff0c\u6240\u4ee5\u7b26\u865f\u70ba\u8ca0\u3002</li> </ul> <pre><code># \u67e5\u770b\u4ea4\u6613\u91cf\nclosing_price.query('(mdate == \"2022-12-16\")')\n</code></pre> <pre><code>orders.query('(created.dt.strftime(\"%Y-%m-%d\") == \"2022-12-15\")')\n</code></pre> <pre><code># \u67e5\u770b\u6210\u4ea4\u50f9\ntransactions.loc['2022-12-16']\n</code></pre>"},{"location":"example/documents81/","title":"NoSlippage : \u4e0d\u8a2d\u7f6e\u6ed1\u50f9","text":""},{"location":"example/documents81/#ziplinefinanceslippagenoslippage","title":"<code>zipline.finance.slippage.NoSlippage</code>","text":"<ul> <li>\u4e0d\u8a2d\u7f6e\u6ed1\u50f9\u3002</li> </ul>"},{"location":"example/documents81/#note","title":"Note:","text":"<ul> <li>\u6ed1\u50f9\u8a08\u7b97\u6642\uff0c\u50f9\u683c\u4ee5\u6210\u4ea4\u65e5\u6536\u76e4\u50f9\u70ba\u6e96\uff0c\u6578\u91cf\u4e5f\u4ee5\u6210\u4ea4\u6642\u70ba\u6e96\u3002\u4e5f\u5c31\u662f\u8aaa\uff0c\u5982\u679c\u56e0\u70ba\u80a1\u6578\u8b8a\u52d5\u9020\u6210 amount \u6709\u4efb\u4f55\u8b8a\u5316\uff0c\u8a08\u7b97\u4e0a\u90fd\u662f\u7528\u6210\u4ea4\u6642\u65b0\u7684 amount\u3002</li> <li>\u5982\u679c <code>initialize(context):</code> \u88e1\u9762\u6c92\u6709\u8a2d\u5b9a<code>set_slippage()</code>\uff0c\u7cfb\u7d71\u9810\u8a2d\u4f7f\u7528 <code>FixedBasisPointsSlippage(basis_points = 5.0, volume_limit = 0.1)</code>\u3002</li> <li>\u5982\u679c\u5e0c\u671b\u5b8c\u5168\u4e0d\u8003\u616e\u4ea4\u6613\u91cf\u53ca\u6ed1\u50f9\u9650\u5236\uff0c\u5247\u4f7f\u7528 <code>set_slippage(slippage.NoSlippage())</code>\u3002</li> </ul>"},{"location":"example/documents83/","title":"\u6ed1\u50f9\u6a21\u578b\u4ecb\u7d39","text":"<ul> <li> <p>\u4ea4\u6613\u6210\u672c\uff08transaction costs\uff09\u88ab\u5ee3\u6cdb\u8a8d\u70ba\u662f\u5f71\u97ff\u6295\u8cc7\u7e3e\u6548\u7684\u91cd\u8981\u56e0\u7d20\u3002\u5b83\u5011\u4e0d\u50c5\u5f71\u97ff\u6295\u8cc7\u7e3e\u6548\uff0c\u9084\u5f71\u97ff\u4e86\u5c07\u8cc7\u7522\u8f49\u63db\u6210\u73fe\u91d1\u7684\u96e3\u6613\u5ea6\u3002</p> </li> <li> <p>\u5728\u771f\u5be6\u4e16\u754c\u7684\u4ea4\u6613\u4e2d\u5b58\u5728\u8a31\u591a\u7a2e\u985e\u7684\u4ea4\u6613\u6210\u672c\uff0c\u5176\u4e2d\u4e00\u7a2e\u662f\u9593\u63a5\u6210\u672c\uff08indirect cost\uff09\uff0c\u9593\u63a5\u6210\u672c\u5305\u542b\u4e86\u6ed1\u50f9\uff08slippage\uff09\u3001\u6d41\u52d5\u6027\uff08liquidity\uff09\u7b49\u3002\u56e0\u70ba\u80a1\u50f9\u96a8\u6642\u90fd\u5728\u8b8a\u52d5\uff0c\u4e0b\u55ae\u6642\u7684\u4e9b\u5fae\u6642\u9593\u5dee\u4e5f\u53ef\u80fd\u9020\u6210\u9810\u671f\u7684\u50f9\u683c\u8207\u6210\u4ea4\u50f9\u6709\u843d\u5dee\uff0c\u800c\u9019\u500b\u50f9\u5dee\u5c31\u662f\u6ed1\u50f9\u3002\u6d41\u52d5\u6027\u5247\u6703\u5f71\u97ff\u4ea4\u6613\u7684\u96e3\u6613\u5ea6\uff0c\u6211\u5011\u901a\u5e38\u53ef\u4ee5\u7528\u4ea4\u6613\u91cf\u4f86\u9593\u63a5\u8a55\u4f30\u6d41\u52d5\u6027\u3002\u82e5\u80a1\u7968\u5e73\u5747\u4f86\u8aaa\u4ea4\u6613\u91cf\u9ad8\uff0c\u5247\u901a\u5e38\u4ee3\u8868\u8a72\u80a1\u7968\u6d41\u52d5\u6027\u9ad8\u3001\u53ef\u4ee5\u8fc5\u901f\u9032\u884c\u4ea4\u6613\uff0c\u540c\u6642\u6ed1\u50f9\u7684\u5f71\u97ff\u4e5f\u6703\u964d\u4f4e\u3002</p> </li> <li> <p>\u82e5\u6c92\u6709\u8003\u616e\u6ed1\u50f9\u53ca\u6d41\u52d5\u6027\u53ef\u80fd\u6703\u9ad8\u4f30\u6295\u8cc7\u7b56\u7565\u7684\u7372\u5229\uff0c\u7279\u5225\u662f\u5728\u6295\u8cc7\u7d44\u5408\u4e2d\u6709\u6210\u4ea4\u91cf\u8f03\u4f4e\uff08\u6d41\u52d5\u6027\u5dee\uff09\u7684\u80a1\u7968\u3001\u8cc7\u91d1\u91cf\uff08capital base\uff09\u5927\u6216\u904e\u5ea6\u96c6\u4e2d\u4ea4\u6613\u55ae\u4e00\u500b\u80a1\u6642\uff0c\u5f71\u97ff\u6703\u66f4\u70ba\u660e\u986f\u3002\u9019\u4e5f\u662f\u56de\u6e2c\uff08backtesting\uff09\u7684\u4e00\u5927\u76ee\u7684\uff0c\u8003\u91cf\u6295\u8cc7\u7b56\u7565\u5728\u771f\u5be6\u4e16\u754c\u904b\u884c\u7684\u53ef\u80fd\u6027\u3002</p> </li> </ul>"},{"location":"example/documents83/#ziplineapiset_slippageself-equitiesnone-futuresnone","title":"zipline.api.set_slippage(self, equities=None, futures=None)","text":"<p>\u8a2d\u5b9a\u56de\u6e2c\u6642\u6240\u4f7f\u7528\u7684\u6ed1\u50f9\u6a21\u578b\u3002</p>"},{"location":"example/documents83/#parameters","title":"Parameters\uff1a","text":"<ul> <li> <p>equities (EquitySlippageModel, optional) \uff0d\u7528\u65bc\u4ea4\u6613\u80a1\u7968\u7684\u624b\u7e8c\u8cbb\u6a21\u578b\u3002</p> <ul> <li>EquitySlippageModel\uff1a<code>zipline.finance.slippage</code></li> </ul> </li> <li> <p>futures (FutureSlippageModel, optional) \uff0d\u7528\u65bc\u4ea4\u6613\u671f\u8ca8\u7684\u624b\u7e8c\u8cbb\u6a21\u578b\u3002\uff08\u76ee\u524d\u4e0d\u652f\u63f4\uff09</p> <ul> <li>FutureSlippageModel\uff1a<code>zipline.finance.slippage</code></li> </ul> </li> </ul>"},{"location":"example/documents83/#raises","title":"Raises\uff1a","text":"<p>SetSlippagePostInit\uff0d<code>slippage</code> \u53ea\u80fd\u5728 initialize \u968e\u6bb5\u4f7f\u7528\u3002</p>"},{"location":"example/documents83/#notes","title":"Notes\uff1a","text":"<ul> <li><code>set_slippage</code> \u53ea\u80fd\u4e00\u6b21\u7528\u4e00\u7a2e\u65b9\u6cd5\u3002</li> </ul>"},{"location":"example/documents83/#_2","title":"\u624b\u7e8c\u8cbb\u6a21\u578b\u5171\u6709\u4e09\u7a2e\uff1a","text":"<ul> <li><code>zipline.finance.commission.FixedSlippage</code></li> <li><code>zipline.finance.commission.VolumeShareSlippage</code></li> <li><code>zipline.finance.commission.FixedBasisPointsSlippage</code></li> </ul>"},{"location":"example/documents83/#examples","title":"Examples\uff1a","text":"<pre><code>from zipline.api import set_slippage\nfrom zipline.finance import slippage\n\ndef initialize(context):\n    set_slippage(slippage.&lt;\u5176\u4e2d\u4e00\u7a2e slippage models&gt;)\n</code></pre>"},{"location":"example/documents84/","title":"Pipeline \u7b56\u7565\u67b6\u69cb\u91cd\u9ede\u8aaa\u660e","text":"<p>\u4ee5\u4e0b\u70ba Zipline \u4e2d Pipeline \u7cfb\u7d71\u7684\u5404\u500b\u5143\u4ef6\u8aaa\u660e\uff0c\u5e6b\u52a9\u4f7f\u7528\u8005\u5efa\u7acb\u81ea\u52d5\u5316\u9078\u80a1\u908f\u8f2f\u3002</p>"},{"location":"example/documents84/#pipeline_1","title":"\u6295\u8cc7\u8a0a\u865f\u751f\u6210\u5de5\u5177\uff08Pipeline\uff09","text":"<p>Zipline \u7684\u6838\u5fc3\u67b6\u69cb\u4e4b\u4e00\uff0c\u53ef\u8a2d\u8a08\u8907\u96dc\u9078\u80a1\u908f\u8f2f\u4e26\u56de\u50b3\u6bcf\u65e5\u5019\u9078\u6e05\u55ae\u3002</p>"},{"location":"example/documents84/#pipeline-factor","title":"Pipeline \u56e0\u5b50\uff08Factor\uff09","text":"<ul> <li>\u53ef\u91cf\u5316\u7684\u9023\u7e8c\u8b8a\u6578\uff0c\u4f8b\u5982\uff1a\u52d5\u80fd\u3001\u4f30\u503c\u3001\u6280\u8853\u6307\u6a19\u7b49\u3002</li> <li>\u7bc4\u4f8b\uff1a<code>SimpleMovingAverage(inputs=[USEquityPricing.close], window_length=20)</code></li> </ul>"},{"location":"example/documents84/#pipeline-filter","title":"Pipeline \u6ffe\u7db2\uff08Filter\uff09","text":"<ul> <li>\u56de\u50b3\u5e03\u6797\u503c\uff08True/False\uff09\uff0c\u7528\u4f86\u7be9\u9078\u7b26\u5408\u689d\u4ef6\u7684\u6a19\u7684\u3002</li> <li>\u7bc4\u4f8b\uff1a<code>AverageDollarVolume(...) &gt; 1e7</code></li> </ul>"},{"location":"example/documents84/#pipeline-classifier","title":"Pipeline \u5206\u985e\u5668\uff08Classifier\uff09","text":"<ul> <li>\u96e2\u6563\u578b\u5206\u985e\u7528\u5de5\u5177\uff0c\u5982\u884c\u696d\u5206\u985e\u3001\u570b\u5bb6\u5225\u7b49\u3002</li> <li>\u7bc4\u4f8b\uff1a<code>Sector()</code></li> </ul>"},{"location":"example/documents84/#pipeline-customfactor","title":"Pipeline \u81ea\u8a02\u56e0\u5b50\uff08CustomFactor\uff09","text":"<ul> <li>\u81ea\u5b9a\u7fa9\u8a08\u7b97\u908f\u8f2f\u7684\u56e0\u5b50\uff0c\u53ef\u904b\u7528\u904e\u53bb N \u65e5\u8cc7\u6599\u9032\u884c\u904b\u7b97\u3002</li> <li>\u5be6\u4f5c\u9700\u7e7c\u627f <code>CustomFactor</code> \u985e\u5225\u4e26\u5b9a\u7fa9 <code>compute()</code> \u65b9\u6cd5\u3002</li> </ul>"},{"location":"example/documents84/#pipeline-masking","title":"Pipeline \u906e\u7db2\uff08Masking\uff09","text":"<ul> <li>\u7d50\u5408 Filter \u9032\u884c\u689d\u4ef6\u906e\u7f69\uff0c\u63a7\u5236\u67d0\u4e9b\u8cc7\u6599\u662f\u5426\u8a08\u7b97/\u986f\u793a\u3002</li> <li>\u7bc4\u4f8b\uff1a<code>MyFactor(mask=volume_filter)</code></li> </ul>"},{"location":"example/documents84/#pipeline-dataset","title":"Pipeline \u8cc7\u6599\u96c6\uff08DataSet\uff09","text":""},{"location":"example/documents84/#1-equitypricing","title":"1. \u50f9\u91cf\u8cc7\u6599\u96c6\uff08EquityPricing\uff09","text":"<ul> <li>Zipline \u5167\u5efa\u80a1\u50f9\u8cc7\u6599\u4f86\u6e90\uff0c\u542b\u6536\u76e4\u50f9\u3001\u6210\u4ea4\u91cf\u7b49\u3002</li> <li>\u5e38\u898b\u6b04\u4f4d\uff1a<code>close</code>, <code>open</code>, <code>volume</code>, <code>high</code>, <code>low</code>\u3002</li> </ul>"},{"location":"example/documents84/#2-tej-tqdataset","title":"2. TEJ \u8ca1\u52d9\u8cc7\u6599\u96c6\uff08TQDataSet\uff09","text":"<ul> <li>\u53f0\u7063\u7d93\u6fdf\u65b0\u5831\uff08TEJ\uff09\u6578\u64da\u4f86\u6e90\uff0c\u9700\u984d\u5916\u6574\u5408\u6a21\u7d44\u3002</li> </ul>"},{"location":"example/documents84/#3-tej-tqaltdataset","title":"3. TEJ \u975e\u8ca1\u52d9\u8cc7\u6599\u96c6\uff08TQAltDataSet\uff09","text":"<ul> <li>\u5305\u542b ESG\u3001\u65b0\u805e\u3001\u4e8b\u4ef6\u7b49\u66ff\u4ee3\u6027\u8cc7\u6599\u4f86\u6e90\u3002</li> </ul>"},{"location":"example/documents84/#4-custom-dataset","title":"4. \u81ea\u8a02\u8cc7\u6599\u96c6\uff08Custom Dataset\uff09","text":"<ul> <li>\u4f7f\u7528\u8005\u81ea\u5b9a\u7fa9\u7684\u8cc7\u6599\u4f86\u6e90\u8207\u6b04\u4f4d\uff0c\u53ef\u7528\u65bc\u5c08\u5c6c\u56e0\u5b50\u5efa\u7acb\u3002</li> </ul>"},{"location":"example/documents84/#factors","title":"Factors","text":"<p>Factor \uff08\u56e0\u5b50\uff09\u662f\u4e00\u500b\u5c07\u8cc7\u7522\u5728\u67d0\u500b\u6642\u9593\u9ede\u7684\u7279\u5fb5\u8f49\u63db\u70ba\u6578\u5b57\u7684\u51fd\u6578 <pre><code>F(asset, timestamp) -&gt; float\n</code></pre> \u5728 Pipeline \u4e2d\uff0cFactors \u662f\u6700\u5e38\u88ab\u4f7f\u7528\u7684\u9805\u76ee\u3002Factors \u7684\u8f38\u51fa\u503c\u6703\u662f\u6578\u503c\uff0c\u8f38\u5165\u503c\u6703\u662f\u4e00\u500b\u4ee5\u4e0a\u7684\u8cc7\u6599\u6b04\u4f4d\u8207\u6642\u9593\u7a97\u53e3\u9577\u5ea6\u3002</p> <p>\u5728 Pipeline \u4e2d\u6700\u7c21\u55ae\u7684 Factors \u70ba built-in factors\u3002Built-in factors \u662f\u70ba\u4e86\u57f7\u884c\u5e38\u7528\u8a08\u7b97\u9810\u5148\u5efa\u7acb\u7684\u3002\u4f5c\u70ba\u7b2c\u4e00\u500b\u4f8b\u5b50\uff0c\u8b93\u6211\u5011\u5275\u5efa\u4e00\u500b factor \u4f86\u8a08\u7b97\u904e\u53bb\u5341\u5929\u7684\u5e73\u5747\u6536\u76e4\u50f9\u3002</p> <p>\u6211\u5011\u53ef\u4ee5\u4f7f\u7528 Built-in factor \u4e2d\u7684<code>SimpleMovingAverage</code>\uff08\u6307\u5b9a\u7a97\u53e3\u9577\u5ea6\u70ba10\u5929\uff09\u4f86\u8a08\u7b97\u5e73\u5747\u50f9\u683c\u3002\u70ba\u4e86\u5be6\u73fe\u9019\u500b\u529f\u80fd\uff0c\u6211\u5011\u9700\u8981\u532f\u5165 Built-in factor <code>SimpleMovingAverage</code> \u4ee5\u53ca <code>TWEquityPricing</code> \u8cc7\u6599\u96c6\u3002</p> <pre><code>import os\nimport pandas as pd\n\nos.environ['TEJAPI_BASE'] = 'https://api.tej.com.tw'\nos.environ['TEJAPI_KEY'] = 'YOUR KEY'\n\nos.environ['ticker'] = '2330 2337'\nos.environ['mdate'] = '20070101 20230701'\n\n!zipline ingest -b tquant\n\nfrom zipline.pipeline import Pipeline\nfrom zipline.TQresearch.tej_pipeline import run_pipeline\nfrom zipline.pipeline.data import TWEquityPricing\nfrom zipline.pipeline.factors import SimpleMovingAverage\n</code></pre>"},{"location":"example/documents84/#creating-a-factor","title":"Creating a Factor","text":"<p>\u8b93\u6211\u5011\u56de\u5230\u4e0a\u4e00\u5802\u8ab2\uff08lecture/Creating a Pipeline\uff09\u7684 <code>make_pipeline</code> function\u3002  </p> <p>\u9996\u5148\u6211\u5011\u5be6\u4f8b\u5316\u4e00\u500b <code>SimpleMovingAverage</code> factor\u3002\u70ba\u4e86\u5275\u5efa\u4e00\u500b <code>SimpleMovingAverage</code> factor\uff0c\u6211\u5011\u53ef\u4ee5\u5c0d <code>SimpleMovingAverage</code> \u5efa\u69cb\u5b50\u8f38\u5165\u5169\u500b\u53c3\u6578\uff1ainputs\uff08\u5fc5\u9808\u662f\u5167\u542b\u4e00\u500b <code>BoundColumn</code> \u7269\u4ef6\u7684 <code>list</code> \uff09\uff0c\u4ee5\u53ca window_length\uff08\u70ba\u6574\u6578\uff0c\u4ee3\u8868\u8981\u7528\u904e\u53bb\u591a\u5c11\u5929\u7684\u8cc7\u6599\u8a08\u7b97\u5e73\u5747\u50f9\u683c\uff09\u3002  </p> <p>\u6211\u5011\u6703\u5728\u4e4b\u5f8c\u66f4\u6df1\u5ea6\u5730\u8a0e\u8ad6 <code>BoundColumn</code>\uff0c\u76ee\u524d\u6211\u5011\u53ea\u9700\u8981\u77e5\u9053 <code>BoundColumn</code> \u4ee3\u8868\u8981\u5c07\u4f55\u7a2e\u8cc7\u6599\u50b3\u5165 <code>Factor</code> \u7269\u4ef6\u5c31\u597d\u3002  </p> <p>\u4e0b\u65b9\u7a0b\u5f0f\u78bc\u5c07\u5275\u5efa\u4e00\u500b\u8a08\u7b97\u904e\u53bb10\u5929\u5e73\u5747\u6536\u76e4\u50f9\u7684 <code>Factor</code>\u3002</p> <pre><code>mean_close_10 = SimpleMovingAverage(inputs=[TWEquityPricing.close], window_length=10)\n</code></pre> <p>\u8acb\u6ce8\u610f\uff0c\u5f88\u91cd\u8981\u7684\u4e00\u9ede\u662f\uff0c\u5efa\u7acb factor \u4e26\u4e0d\u5b8c\u5168\u5730\u7b49\u65bc\u57f7\u884c\u8a08\u7b97\u3002\u5275\u5efa\u4e00\u500b factor \u5c31\u50cf\u662f\u5b9a\u7fa9\u4e00\u500b function\u3002\u8981\u57f7\u884c\u4e00\u500b\u8a08\u7b97\uff0c\u6211\u5011\u9700\u8981\u5c07 factor \u52a0\u5165 pipeline \u4e26\u57f7\u884c\u5b83\u3002</p>"},{"location":"example/documents84/#adding-a-factor-to-a-pipeline","title":"Adding a Factor to a Pipeline","text":"<p>\u8b93\u6211\u5011\u66f4\u65b0\u539f\u672c\u7a7a\u7684 pipeline \uff0c\u4e26\u8b93\u5b83\u8a08\u7b97\u6211\u5011\u65b0\u7684\u79fb\u52d5\u5e73\u5747\u56e0\u5b50\u3002</p> <p>\u9996\u5148\uff0c\u5148\u5728 <code>make_pipeline</code> \u4e2d\u5be6\u9ad4\u5316\u525b\u525b\u5efa\u7acb\u56e0\u5b50\uff0c\u8b93 pipeline \u77e5\u9053\u8981\u5982\u4f55\u8a08\u7b97\u5b83\u3002\u63a5\u8457\uff0c\u6211\u5011\u53ef\u4ee5\u85c9\u7531\u8a2d\u5b9a <code>Pipeline</code> \u7684 <code>columns</code> \u53c3\u6578\uff08<code>columns</code>\u70ba\u4e00\u500b\u5c07\u6b04\u4f4d\u540d\u7a31\u6620\u5c04\u5230 factors\u3001 filters \u6216 classifiers \u7684\u5b57\u5178\uff09\uff0c\u8b93 pipeline \u77e5\u9053\u8981\u8f38\u51fa\u54ea\u4e9b\u8cc7\u6599\u3002\u3002  </p> <p>\u66f4\u65b0\u5f8c\u7684 <code>make_pipeline</code> \u51fd\u6578\u770b\u8d77\u4f86\u61c9\u8a72\u50cf\u9019\u6a23\uff1a</p> <pre><code>def make_pipeline():\n\n    mean_close_10 = SimpleMovingAverage(inputs=[TWEquityPricing.close], window_length=10)\n\n    return Pipeline(\n        columns={\n            '10_day_mean_close': mean_close_10\n        }\n    )\n</code></pre> <p>\u518d\u4f86\uff0c\u5efa\u7acbpipeline\u3001\u57f7\u884c\uff0c\u63a5\u8457\u5c55\u793a\u7d50\u679c\u3002</p> <p>\u73fe\u5728\uff0c\u5728\u6211\u5011\u7684 pipeline \u4e2d\u6709\u4e00\u500b\u5e73\u5747\u6536\u76e4\u50f9\u7684\u6b04\u4f4d\uff08<code>10_day_mean_close</code>\uff09\uff0c\u4e26\u4e14\u7e3d\u5171\u6709\u5169\u6a94\u8b49\u5238\u3002\u8acb\u6ce8\u610f\u6bcf\u4e00\u5217\u5c0d\u61c9\u8457\u7279\u5b9a\u8b49\u5238\u5728\u7279\u5b9a\u65e5\u671f\u7684\u8a08\u7b97\u7d50\u679c\u3002</p> <p>pipeline \u7684\u7522\u51fa\u7d50\u679c\u70ba\u5e36\u6709 MultiIndex \u7684 DataFrame\uff0c\u5b83\u7684\u7b2c\u4e00\u5c64 index \u70ba\u57f7\u884c\u8a08\u7b97\u6642\u7684\u65e5\u671f\uff0c\u800c\u7b2c\u4e8c\u5c64 index \u70ba\u5c0d\u61c9\u8b49\u5238\u7684 <code>Equity</code> \u7269\u4ef6\u3002\u8209\u4f8b\u4f86\u8aaa\uff0c\u7b2c\u4e00\u5217\uff08<code>2023-05-05 00:00:00+00:00</code>, <code>Equity(0 [2330])</code>\uff09\u6703\u662f\u5728 2023/5/5 \u6642\uff0c\u8b49\u5238\u4ee3\u78bc\u70ba 2330 \u7684\u5e73\u5747\u6536\u76e4\u50f9\u8a08\u7b97\u7d50\u679c\u3002</p> <pre><code>result = run_pipeline(make_pipeline(), '2023-05-05', '2023-05-05')\nresult\n</code></pre> <p>\u5982\u679c pipeline \u8a08\u7b97\u5929\u6578\u591a\u65bc\u4e00\u5929\uff082018-01-03~2022-12-30\uff09\uff0c\u8f38\u51fa\u6703\u770b\u8d77\u4f86\u50cf\u9019\u6a23\uff1a</p> <pre><code>result = run_pipeline(make_pipeline(), '2018-01-03', '2022-12-30')\nresult\n</code></pre> <p>\u6ce8\u610f\uff1a\u900f\u904e <code>Pipeline.add</code> \u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u628a\u56e0\u5b50\u52a0\u5165\u81f3\u5df2\u7d93\u5b58\u5728\u7684 <code>Pipeline</code> \u5be6\u9ad4\u4e2d\u3002\u4f7f\u7528 <code>add</code> \u770b\u8d77\u4f86\u6703\u50cf\u9019\u6a23\uff1a</p> <pre><code>my_pipe = Pipeline()\nf1 = SomeFactor(...)\nmy_pipe.add(f1, 'f1')\n</code></pre>"},{"location":"example/documents84/#latest","title":"Latest","text":"<p><code>Latest</code> \u662f\u6700\u5e38\u4f7f\u7528\u7684 <code>Factors</code>\u3002<code>Latest</code> \u53ef\u4ee5\u53d6\u5f97\u6307\u5b9a\u6b04\u4f4d\u4e2d\u6700\u8fd1\u4e00\u671f\u7684\u8cc7\u6599\u3002\u9019\u500b\u56e0\u5b50\u56e0\u70ba\u592a\u5e38\u88ab\u4f7f\u7528\u4ee5\u81f3\u65bc\u5b83\u5be6\u4f8b\u5316\u7684\u65b9\u5f0f\u8207\u6bd4\u8f03\u7279\u5225\u3002</p> <p>\u82e5\u8981\u53d6\u5f97\u7279\u5b9a\u6b04\u4f4d\u6700\u8fd1\u4e00\u671f\u7684\u8cc7\u6599\uff0c\u6700\u597d\u65b9\u6cd5\u662f\u547c\u53eb\u5b83\u7684 <code>.latest</code> \u5c6c\u6027\u3002\u4f5c\u70ba\u793a\u7bc4\uff0c\u6211\u5011\u66f4\u65b0 <code>Pipeline</code> \u4ee5\u5275\u5efa\u4e00\u500b\u4ee3\u8868\u6700\u8fd1\u4e00\u671f \u6536\u76e4\u50f9 \u7684\u56e0\u5b50 \uff0c\u7136\u5f8c\u628a\u5b83\u52a0\u5165 pipeline\uff1a</p> <pre><code>def make_pipeline():\n\n    mean_close_10 = SimpleMovingAverage(inputs=[TWEquityPricing.close], window_length=10)\n    latest_close = TWEquityPricing.close.latest\n\n    return Pipeline(\n        columns={\n            '10_day_mean_close': mean_close_10,\n            'latest_close_price': latest_close\n        }\n    )\n</code></pre> <p>\u73fe\u5728\uff0c\u7576\u6211\u5011\u518d\u6b21\u57f7\u884c pipeline \u6642\uff0c\u7522\u51fa\u7684 DataFrame \u6703\u5305\u542b\u5169\u500b\u6b04\u4f4d\u3002\u4e00\u500b\u6b04\u4f4d\uff08<code>10_day_mean_close</code>\uff09\u8a18\u9304\u6bcf\u96bb\u8b49\u5238\u768410\u65e5\u5e73\u5747\u6536\u76e4\u50f9\uff0c\u53e6\u4e00\u500b\uff08<code>latest_close_price</code>\uff09\u8a18\u9304\u6700\u8fd1\u6536\u76e4\u50f9\u3002</p> <pre><code>result = run_pipeline(make_pipeline(), '2023-05-05', '2023-05-05')\nresult.head(5)\n</code></pre> <p><code>.latest</code> \u6709\u6642\u53ef\u4ee5\u56de\u50b3 <code>Factors</code> \u4ee5\u5916\u7684\u6771\u897f\u3002\u6211\u5011\u6703\u5728\u4e4b\u5f8c\u7684\u8ab2\u7a0b\u793a\u7bc4\u5176\u4ed6\u53ef\u80fd\u56de\u50b3\u7684\u8cc7\u6599\u985e\u578b\u3002</p>"},{"location":"example/documents84/#default-inputs","title":"Default Inputs","text":"<p>\u6709\u4e9b Factors \u6709\u8457\u4e0d\u53ef\u88ab\u66f4\u6539\u7684\u9810\u8a2d\u8f38\u5165\u503c\u3002\u4f8b\u5982 <code>VWAP</code> built-in factor \u6c38\u9060\u90fd\u662f\u5f9e<code>TWEquityPricing.close</code> \u548c <code>TWEquityPricing.volume</code> \u8a08\u7b97\u800c\u4f86\u7684\u3002\u7576\u4e00\u500b Factors \u6c38\u9060\u7531\u540c\u6a23\u4e00\u500b <code>BoundColumns</code> \u8a08\u7b97\u800c\u4f86\u6642\uff0c\u6211\u5011\u6703\u8aaa\u9019\u500b\u5efa\u69cb\u5b50\u6c92\u6709\u6307\u5b9a\u7684 <code>inputs</code>\u3002</p> <pre><code>from zipline.pipeline.factors import VWAP\nvwap = VWAP(window_length=10)\n</code></pre> <p>\u5176\u9918 built-in factor \u8acb\u53c3\u8003\uff1aPipeline built-in factors.ipynb</p>"},{"location":"example/documents85/","title":"Pipeline\u6ffe\u7db2(Filter)","text":"<pre><code>import os \n\nStockList1 = ['1227', '1234', '1304', '1314', '1434', '1440', '1476', '1504', '1507', '1590', '1605', '1704', '1710', '1717', '1723', '1789',\n '1802', '1907', '2006', '2015', '2049', '2101', '2103', '2106', '2204', '2227', '2327', '2337', '2344', '2356', '2360', '2362',\n '2379', '2384', '2385', '2392', '2395', '2448', '2449', '2450', '2451', '2489', '2501', '2504', '2511', '2542', '2545', '2548',\n '2603', '2606', '2607', '2608', '2609', '2610', '2615', '2618', '2707', '2723', '2727', '2809', '2812', '2823', '2834', '2845',\n '2847', '2855', '2884', '2887', '2888', '2889', '2903', '2915', '3034', '3037', '3044', '3149', '3189', '3406', '3702', '4938',\n '4958', '5522', '5871', '6005', '6176', '6239', '6269', '6286', '8008', '8046', '8078', '8422', '9904', '9907', '9914', '9917', '9921',\n '9933', '9940', '9945', '2458', '5264', '2206', '1201', '2347', '3231', '5534', '6116', '9910', '1477', '2353', '6271', '1319',\n '1722', '2059', '3060', '3474', '3673', '2393', '2376', '2439', '3682', '1262', '2201', '2377', '3576', '2352', '2838', '8150',\n '2324', '2231', '8454', '2833', '6285', '6409', '1536', '1702', '2313', '2498', '2867', '6415', '6456', '9938', '2383', '4137', '6452',\n '1707', '1589', '2849', '6414', '8464', '2355', '2345', '3706', '2023', '2371', '1909', '2633', '3532', '9941', '2492', '3019',\n '3443', '4915', '4943', '1229', '2441', '2027', '3026', '1210', '2104', '2456', '5269', '8341', '2354', '3005', '3481', '6669',\n '2409', '3023', '6213', '2404', '3533', '6278', '6592', '3653', '3661', '3665', '2301', '3714', '2883', '2890', '6531', '1904',\n '2014', '2105', '2108', '2474', '2637', '6781', '1102', '4919', '1402', '3035', '3036', '4961', '6719', '6770', '2368', '1795',\n '6550', '6789', '3017', '1101', '1216', '1301', '1303', '1326', '2002', '2207', '2303', '2308', '2311', '2317', '2325', '2330',\n '2357', '2382', '2412', '2454', '2801', '2880', '2881', '2882', '2885', '2886', '2891', '2892', '2912', '3008', '3045', '3697',\n '4904', '5880', '6505', '2408', '3711', '5876']\n\ntickers = \" \".join(StockList1)\n\nos.environ['TEJAPI_BASE'] = 'https://api.tej.com.tw'\nos.environ['TEJAPI_KEY'] = 'your_key'\n\nos.environ['mdate'] = '20170101 20230726'\nos.environ['ticker'] = tickers\n\n!zipline ingest -b tquant\n\nfrom zipline.pipeline import Pipeline\nfrom zipline.TQresearch.tej_pipeline import run_pipeline\nfrom zipline.pipeline.data import TWEquityPricing\nfrom zipline.pipeline.factors import SimpleMovingAverage\n</code></pre>"},{"location":"example/documents85/#filters","title":"Filters","text":"<p>Filters \u662f\u4e00\u500b\u5c07\u8cc7\u7522\u5728\u67d0\u500b\u6642\u9593\u9ede\u7684\u7279\u5fb5\u8f49\u63db\u70ba**\u5e03\u6797\u503c**\u7684\u51fd\u6578 \uff1a</p> <p><pre><code>F(asset, timestamp) -&gt; boolean\n</code></pre> \u5728 Pipeline \u4e2d\uff0cFilters \u7528\u65bc\u7e2e\u5c0f\u80a1\u7968\u6c60\u7684\u5927\u5c0f\uff0c\u9019\u88e1\u6709\u5169\u7a2e <code>Filter</code> \u5e38\u898b\u7684\u5275\u5efa\u65b9\u5f0f\uff1a\u4f7f\u7528 <code>Factor</code>\uff0f <code>Classifier</code> \u65b9\u6cd5\u6216\u4f7f\u7528\u6bd4\u8f03\u904b\u7b97\u5b50\uff08comparison operators\uff0c<code>&lt;</code>, <code>&lt;=</code>, <code>!=</code>, <code>eq</code>, <code>&gt;</code>, <code>&gt;=</code>\uff09\u3002</p>"},{"location":"example/documents85/#comparison-operators","title":"Comparison Operators","text":"<p>\u5c0d <code>Factors</code> \u548c <code>Classifier</code> \u4f7f\u7528\u6bd4\u8f03\u904b\u7b97\u5b50\u5c31\u53ef\u4ee5\u5275\u5efa Filters\u3002</p> <p>\u6709\u9452\u65bc\u6211\u5011\u5c1a\u672a\u4ecb\u7d39\u5230 <code>Classifier</code>\uff0c\u6211\u5011\u50c5\u4f7f\u7528 <code>Factors</code> \u8209\u4f8b\uff0c\u4e0b\u65b9\u7684\u7bc4\u4f8b\u5efa\u7acb\u4e86\u4e00\u500b\u7576\u6700\u8fd1\u4e00\u671f\u6536\u76e4\u50f9\u5927\u65bc $20 \u6642\u6703\u8fd4\u56de <code>True</code> \u7684 filter \u3002</p> <pre><code>last_close_price = TWEquityPricing.close.latest\nclose_price_filter = last_close_price &gt; 20\n</code></pre> <p>\u800c\u4ee5\u4e0b\u9019\u500b\u7bc4\u4f8b\u5efa\u7acb\u4e00\u500b\u65b0\u7684 filter\uff0c\u53ea\u8981\u8fd1 10 \u5929\u6536\u76e4\u50f9\u5e73\u5747\u503c\u4f4e\u65bc\u8fd1 30 \u5929\u6536\u76e4\u50f9\u5e73\u5747\u503c\uff0c\u8a72\u904e\u6ffe\u5668\u5c31\u6703\u8fd4\u56de True\u3002</p> <pre><code>mean_close_10 = SimpleMovingAverage(inputs=[TWEquityPricing.close], window_length=10)\nmean_close_30 = SimpleMovingAverage(inputs=[TWEquityPricing.close], window_length=30)\nmean_crossover_filter = mean_close_10 &lt; mean_close_30\n</code></pre> <p>\u8a18\u4f4f\uff0c\u5728\u6bcf\u5929\u4e2d\u6bcf\u6a94\u8b49\u5238\u90fd\u6703\u64c1\u6709\u81ea\u5df1\u7684 <code>True</code> \u6216 <code>False</code> \u503c\u3002</p>"},{"location":"example/documents85/#factorclassifier-methods","title":"Factor\uff0fClassifier Methods","text":"<p>\u5f88\u591a\u7a2e <code>Factor</code> \u548c <code>Classifier</code> \u90fd\u6703\u56de\u50b3 <code>Filters</code>\u3002</p> <p>\u4f46\u540c\u6a23\u5730\uff0c\u7531\u65bc\u6211\u5011\u5c1a\u672a\u8a0e\u8ad6\u5230 <code>Classifier</code>\uff0c\u76ee\u524d\u6211\u5011\u50c5\u4f7f\u7528 <code>Factor</code>\uff08\u7a0d\u5f8c\u6211\u5011\u6703\u8a0e\u8ad6 <code>Classifier</code>\uff09\u3002</p> <p><code>Factor.top(n)</code>\u6703\u5efa\u7acb\u4e00\u500b <code>Filter</code> \uff0c\u7576\u6392\u540d\u5728\u6307\u5b9a <code>Factor</code> \u524d <code>n</code> \u540d\u7684\u8b49\u5238\uff0c\u6703\u6a19\u8a18\u70ba <code>True</code> \uff0c\u5176\u9918\u6a19\u8a18\u70ba <code>False</code>\u3002</p> <p>\u4e0b\u9762\u7684\u7bc4\u4f8b\u5efa\u7acb\u4e86\u4e00\u500b\u6703\u6bcf\u5929\u5c07\u6700\u8fd1\u4e00\u671f\u6536\u76e4\u50f9\u6392\u540d\u524d30\u540d\u7684\u8b49\u5238\u6a19\u793a\u70ba<code>True</code> \u7684filter\u3002</p> <pre><code>last_close_price = TWEquityPricing.close.latest\ntop_close_price_filter = last_close_price.top(30)\n</code></pre>"},{"location":"example/documents85/#dollar-volume-filter","title":"Dollar Volume Filter","text":"<p>\u4f5c\u70ba\u7b2c\u4e00\u500b\u7bc4\u4f8b\uff0c\u6211\u5011\u5275\u5efa\u4e00\u500b Filter \u3002\u5982\u679c\u8a72\u8b49\u5238\u904e\u53bb 30 \u65e5\u5e73\u5747\u4ea4\u6613\u91cf\u5927\u65bc $1, 000,000, 000 \u5247\u56de\u50b3 <code>True</code> \u503c\u3002</p> <p>\u70ba\u4e86\u5be6\u73fe\u9019\u500b\u6548\u679c\uff0c\u6211\u5011\u9996\u5148\u9700\u8981\u5275\u5efa\u4e00\u500b <code>AverageDollarVolume</code> factor \u4ee5\u8a08\u7b97\u904e\u53bb 30 \u65e5\u5e73\u5747\u4ea4\u6613\u91cf\u3002\u8b93\u6211\u5011\u532f\u5165 built-in factor <code>AverageDollarVolume</code>\u3002</p> <pre><code>from zipline.pipeline.factors import AverageDollarVolume\n</code></pre> <p>\u63a5\u8457\uff0c\u8b93\u6211\u5011\u5be6\u4f8b\u5316 <code>AverageDollarVolume</code> factor\u3002</p> <pre><code>dollar_volume = AverageDollarVolume(window_length=30)\n</code></pre> <p>\u5728\u9810\u8a2d\u60c5\u6cc1\u4e0b\uff0c <code>AverageDollarVolume</code> \u6703\u4f7f\u7528 <code>TWEquityPricing.close</code> \u8207 <code>TWEquityPricing.volume</code> \u4f5c\u70ba <code>inputs</code>\uff0c\u6240\u4ee5\u6211\u5011\u4e0d\u9808\u53bb\u5b9a\u7fa9\u4ed6\u5011\u3002</p> <p>\u73fe\u5728\u6211\u5011\u6709\u4e86\u5e73\u5747\u4ea4\u6613\u91cf factor \uff0c\u6211\u5011\u53ef\u4ee5\u4ee5\u5e03\u6797\u503c\u8868\u9054\u5f0f\u5275\u5efa filter\u3002\u4e0b\u65b9\u7a0b\u5f0f\u5275\u5efa\u4e86\u4e00\u500b\u7576\u8b49\u5238\u7684\u5e73\u5747\u6210\u4ea4\u91cf <code>dollar_volume</code> \u5927\u65bc $1, 000,000, 000 \u6642\u6703\u56de\u50b3 <code>True</code> \u7684 filter\u3002</p> <pre><code>high_dollar_volume = (dollar_volume &gt; 1000000000)\n</code></pre> <p>\u70ba\u4e86\u77e5\u9053 fitler \u7684\u5be6\u969b\u7d50\u679c\uff0c\u6211\u5011\u5c07\u5b83\u4f5c\u70ba\u4e00\u500b\u6b04\u4f4d\u52a0\u5165\u5148\u524d\u8ab2\u7a0b\u4e2d\u5275\u7acb\u7684 pipeline \u4e2d\u3002\u6b64\u5916\uff0c\u5982\u540c\u5728 lecture/Factors \u4e2d\u6240\u4ecb\u7d39\u7684\uff0c\u6211\u5011\u984d\u5916\u52a0\u5165\u4e86<code>percent_difference</code>\u3002</p> <pre><code>def make_pipeline():\n\n    mean_close_10 = SimpleMovingAverage(inputs=[TWEquityPricing.close], window_length=10)\n    mean_close_30 = SimpleMovingAverage(inputs=[TWEquityPricing.close], window_length=30)\n\n    percent_difference = (mean_close_10 - mean_close_30) / mean_close_30\n\n    dollar_volume = AverageDollarVolume(window_length=30)\n    high_dollar_volume = (dollar_volume &gt; 1000000000)\n\n    return Pipeline(\n        columns={\n            'percent_difference': percent_difference,            \n            'high_dollar_volume': high_dollar_volume\n        }\n    )\n</code></pre> <p>\u5982\u679c\u6211\u5011\u57f7\u884c pipeline \uff0c\u5c31\u6703\u7522\u51fa <code>high_dollar_volume</code> \u6b04\u4f4d\uff0c\u7576 filter \u689d\u4ef6\u6210\u7acb\u6642\u6703\u56de\u50b3\u5e03\u6797\u503c <code>True</code>\u3002</p> <pre><code>result = run_pipeline(make_pipeline(), '2023-03-02', '2023-06-01')\nresult.loc['2023-03-03']\n</code></pre>"},{"location":"example/documents85/#applying-a-screen","title":"Applying a Screen","text":"<p>\u5728\u9810\u8a2d\u60c5\u6cc1\u4e0b\uff0cpipeline \u6bcf\u65e5\u6703\u91dd\u5c0d\u6bcf\u500b\u5728 bundle \u4e2d\u7684\u8cc7\u7522\u751f\u6210\u4e00\u7b46\u8cc7\u6599\u3002</p> <p>\u4f46\u5f88\u591a\u6642\u5019\uff0c\u6211\u5011\u53ea\u95dc\u6ce8\u90a3\u4e9b**\u7b26\u5408\u7279\u5b9a\u689d\u4ef6\u7684\u8b49\u5238**\uff08\u4f8b\u5982\uff0c\u70ba\u4e86\u80fd\u5feb\u901f\u6210\u4ea4\uff0c\u6211\u5011\u53ef\u80fd\u53ea\u6703\u95dc\u6ce8\u90a3\u4e9b\u6bcf\u65e5\u4ea4\u6613\u91cf\u8db3\u5920\u5927\u7684\u8b49\u5238\uff09\u3002\u6211\u5011\u53ef\u4ee5\u900f\u904e <code>screen</code> \u544a\u8a34 pipeline \u53bb\u5ffd\u7565\u90a3\u4e9b filter \u56de\u50b3\u7684\u5e03\u6797\u503c\u70ba <code>False</code> \u7684\u8b49\u5238\u3002  </p> <p>\u70ba\u4e86\u8b93 pipeline \u904e\u6ffe\u51fa\u90a3\u4e9b**30\u65e5\u5e73\u5747\u4ea4\u6613\u91cf**\u5927\u65bc $1, 000,000, 000 \u7684\u8b49\u5238\uff0c\u6211\u5011\u53ef\u4ee5\u7c21\u55ae\u7684\u5c07 <code>high_dollar_volume</code> filter \u4f5c\u70ba <code>screen</code> \u7684\u53c3\u6578\u3002</p> <p>\u73fe\u5728\u6211\u5011\u7684 pipeline \u61c9\u8a72\u6703\u9577\u9019\u6a23\uff1a</p> <pre><code>def make_pipeline():\n\n    mean_close_10 = SimpleMovingAverage(inputs=[TWEquityPricing.close], window_length=10)\n    mean_close_30 = SimpleMovingAverage(inputs=[TWEquityPricing.close], window_length=30)\n\n    percent_difference = (mean_close_10 - mean_close_30) / mean_close_30\n\n    dollar_volume = AverageDollarVolume(window_length=30)\n    high_dollar_volume = (dollar_volume &gt; 1000000000)\n\n    return Pipeline(\n        columns={\n            'percent_difference': percent_difference\n        },\n        screen=high_dollar_volume\n    )\n</code></pre> <p>\u7576\u6211\u5011\u57f7\u884c\u7a0b\u5f0f\u6642\uff0cpipeline \u7684\u8f38\u51fa\u50c5\u50c5\u53ea\u6703\u5305\u542b\u90a3\u4e9b\u5728\u7279\u5b9a\u65e5\u5b50\u6eff\u8db3 <code>high_dollar_volume</code> filter \u7684\u8b49\u5238\u3002</p> <pre><code>result = run_pipeline(make_pipeline(), '2023-03-02', '2023-03-03')\nprint('\u901a\u904e filter \u7684\u8b49\u5238\u6578: %d' % len(result))\nresult.loc['2023-03-03']\n</code></pre>"},{"location":"example/documents85/#inverting-a-filter","title":"Inverting a Filter","text":"<p><code>~</code> \u904b\u7b97\u7b26\u662f\u7528\u65bc\u53cd\u8f49 filter \u7684\uff0c\u5c07\u6240\u6709 <code>True</code> \u8f49\u8b8a\u70ba <code>False</code>\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u4f8b\u5982\uff0c\u6211\u5011\u53ef\u4ee5\u64b0\u5beb\u4e0b\u5217\u7684 filter \u53bb\u904e\u6ffe\u51fa\u4f4e\u4ea4\u6613\u91cf\u7684\u8b49\u5238\u3002</p> <pre><code>low_dollar_volume = ~high_dollar_volume\n</code></pre> <p>\u9019\u6703\u5c0d\u904e\u53bb 30 \u5929\u5167\u6240\u6709\u5e73\u5747\u4ea4\u6613\u91cf\u4f4e\u65bc\u6216\u7b49\u65bc $1,000,000,000 \u7684\u8b49\u5238\u56de\u50b3 <code>True</code>\u3002</p> <p>\u5176\u9918 built-in filters \u8acb\u53c3\u8003\uff1aPipeline built-in filters.ipynb</p>"},{"location":"example/documents87/","title":"\u5ba2\u88fd\u5316\u56e0\u5b50","text":"<p>\u4e0a\u4e00\u500b\u7ae0\u7bc0\uff08lecture/Factors.ipynb\uff09\u6211\u5011\u4ecb\u7d39\u4e86\u4f55\u8b02\u56e0\u5b50\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u56e0\u5b50\uff0cTQuant Lab \u5df2\u7d93\u5167\u5efa\u8a31\u591a\u4e0d\u540c\u56e0\u5b50\u3002\u7136\u800c\u5728\u56e0\u5b50\u7814\u7a76\u4e0d\u65b7\u52c3\u767c\u4e4b\u4e0b\uff0c\u8a31\u591a\u65b0\u578b\u614b\u50f9\u91cf\u56e0\u5b50\u6301\u7e8c\u554f\u4e16\uff0c\u6216\u8a31\u60a8\u4e5f\u6709\u81ea\u5df1\u7684\u5c08\u5c6c\u7b56\u7565\u56e0\u5b50\uff0c\u56e0\u6b64\u672c\u7ae0\u5c07\u793a\u7bc4\u5982\u4f55\u5ba2\u88fd\u5316\u56e0\u5b50\u4e26\u904b\u7528\u65bc TQuant Lab \u4e2d\u3002</p> <p>\u6982\u5ff5\u4e0a\u800c\u8a00\uff0c\u5ba2\u88fd\u5316\u56e0\u5b50\u8207\u5167\u5efa\u56e0\u5b50\u5341\u5206\u76f8\u540c\u3002\u5169\u8005\u7686\u4ee5 inputs, window_length, mask \u70ba\u8f38\u5165\u53c3\u6578\uff0c\u4e26\u4e14\u8f38\u51fa factor \u7269\u4ef6\u7684\u985e\u5225\u3002</p> <p>\u5047\u4f7f\u6b32\u8a08\u7b97\u6bcf\u6a94\u80a1\u7968\u6bcf\u5929\u7684\u6efe\u52d5\u6a19\u6e96\u5dee (standard deviation)\uff0c\u6211\u5011\u53ef\u4ee5\u4f7f\u7528 <code>zipline.pipeline.CustomFactor</code> \u5b50\u985e\u8207 <code>compute</code> \u65b9\u6cd5\u51fd\u5f0f\u5efa\u69cb\u3002</p>"},{"location":"example/documents87/#class-ziplinepipelinecustomfactor","title":"class zipline.pipeline.CustomFactor","text":""},{"location":"example/documents87/#parameters","title":"Parameters:","text":"<ul> <li> <p>inputs: iterable, optional        </p> <pre><code>\u8f38\u5165\u8cc7\u6599\u3002\n</code></pre> </li> <li> <p>outputs: iterable[str], optional</p> <pre><code>\u8f38\u51fa\u7684\u56e0\u5b50\u3002\n</code></pre> </li> <li> <p>window_length: int, optional</p> <pre><code>\u8f38\u5165\u8cc7\u6599\u7684\u6642\u9593\u7a97\u683c\u3002\n</code></pre> </li> <li> <p>mask: zipline.pipeline.Filter, optional</p> <pre><code>\u6c7a\u5b9a\u54ea\u4e9b\u8cc7\u7522\u9700\u8981\u8a08\u7b97\u56e0\u5b50\u3002\n</code></pre> </li> </ul>"},{"location":"example/documents87/#def-computeself-today-assets-out-inputs","title":"def compute(self, today, assets, out, *inputs)","text":"<ul> <li>today: \u70bapandas.Timestamp\u578b\u614b\uff0c\u8a18\u9304 Pipeline \u555f\u52d5\u7576\u5929\u7684\u65e5\u671f\u3002</li> <li>assets: \u662f\u9577\u5ea6\u70ba N \u7684numpy array\uff0c\u7d00\u9304 sids\uff08\u8cc7\u7522\uff09\u3002</li> <li>*inputs: \u70ba MxN \u7684 numpy.arrays\uff0cM \u70ba window_length \u4e14 N \u70ba\u8cc7\u7522\u6578\u91cf\uff0c\u53ef\u4ee5\u8a2d\u7acb\u591a\u500binputs\u3002</li> <li>out: \u662f\u9577\u5ea6\u70ba N \u7684numpy arrays\u3002out \u5c07\u6703\u7522\u51fa\u7576\u5929\u7684 CustomFactor \u8a08\u7b97\u7d50\u679c\u3002</li> </ul>"},{"location":"example/documents87/#_2","title":"\u5c0e\u5165\u50f9\u91cf\u8cc7\u6599\u8207\u5fc5\u8981\u6a21\u7d44","text":"<pre><code>import os\nimport pandas as pd\nimport numpy as np \nimport tejapi\nimport warnings\nwarnings.filterwarnings('ignore')\n\nos.environ['TEJAPI_BASE'] = 'https://api.tej.com.tw'\nos.environ['TEJAPI_KEY'] = 'YOUR KEY'\n\nos.environ['mdate'] = '20080401 20230702'\nos.environ['ticker'] = '2330 2409'\n\nfrom zipline.pipeline import Pipeline, CustomFactor\nfrom zipline.TQresearch.tej_pipeline import run_pipeline\nfrom zipline.pipeline.data import TWEquityPricing\nfrom zipline.pipeline.filters import StaticAssets,StaticSids\nfrom zipline.api import sid, symbol\n\n# ingest stock data\n!zipline ingest -b tquant\n</code></pre>"},{"location":"example/documents87/#_3","title":"\u5efa\u7acb\u8a08\u7b97\u6a19\u6e96\u5dee\u7684\u56e0\u5b50","text":"<p>\u65bc\u6b64\u4f8b\u6211\u5011\u4f7f\u7528 <code>np.nanstd</code> \u8a08\u7b97\u8f38\u5165\u503c\u7684\u6a19\u6e96\u5dee\uff0c\u8f38\u5165\u503c\u8207\u6642\u9593\u5340\u9593\u6703\u4f9d\u7167 <code>make_pipeline()</code> \u4e2d\u7684 <code>StdDev</code> \u6240\u7d66\u7684 inputs \u8207 window_length \u6240\u6c7a\u5b9a\u3002\u4ee5\u6b64\u4f8b\u4e2d\uff0c\u82e5\u6211\u5011\u60f3\u8981\u8a08\u7b97\u53f0\u7a4d\u96fb (2330) \u8207\u53cb\u9054 (2409) \u7684 7 \u65e5\u6536\u76e4\u50f9\u6a19\u6e96\u5dee\uff0c\u53ef\u4ee5\u8a2d\u5b9a\u70ba:</p> <ol> <li>inputs = [TWEquityPricing.close]\uff0c TWEquityPricing \u5167\u5efa bundle \u5167\u6240\u6709\u80a1\u7968\u7684\u50f9\u91cf\u8cc7\u6599\u3002</li> <li>window_length = 7</li> </ol> <p>\u63a5\u8457\u4f7f\u7528 <code>run_pipeline</code> \u547c\u53eb <code>Pipeline</code> \uff0c\u65bc\u56de\u6e2c\u671f\u9593\u5167\uff0c\u9010\u65e5\u8a08\u7b97\u56e0\u5b50\uff0c\u6700\u7d42\u7522\u51fa dataframe\u3002\u53ef\u4ee5\u767c\u73fe\u8a72dataframe\u6709MultiIndex\uff0c\u5206\u5225\u662f\u6642\u9593\u8207\u6a19\u7684\uff0c\u4e26\u4e14\u6bcf\u500b\u6307\u6a19\u65bc\u6bcf\u5929\u90fd\u6703\u751f\u6210 7 \u65e5\u6536\u76e4\u50f9\u6a19\u6e96\u5dee\u3002</p>"},{"location":"example/documents87/#ziplinetqresearchtej_pipelinerun_pipeline","title":"zipline.TQresearch.tej_pipeline.run_pipeline","text":"<p>\u57f7\u884c Pipeline \u4e26\u751f\u6210\u8cc7\u6599\u8868\u3002</p>"},{"location":"example/documents87/#parameters_1","title":"Parameters:","text":"<ul> <li>pipeline: zipline.pipeline.Pipeline         \u6b32\u904b\u884c\u7684 pipeline \u51fd\u5f0f\u3002</li> <li>start_date: pd.Timestamp         pipeline \u8d77\u59cb\u57f7\u884c\u7684\u65e5\u671f\u3002\u9700\u6ce8\u610f\u8a72\u65e5\u671f\u5fc5\u9808\u65bc bundle \u6642\u9593\u5340\u9593\u5167\u3002</li> <li>end_date: pd.Timestamp         pipeline \u57f7\u884c\u7d50\u675f\u7684\u65e5\u671f\u3002\u9700\u6ce8\u610f\u8a72\u65e5\u671f\u5fc5\u9808\u65bc bundle \u6642\u9593\u5340\u9593\u5167\u3002</li> </ul>"},{"location":"example/documents87/#returns","title":"Returns","text":"<p>pd.DataFrame, \u8f38\u51fa Pipeline \u57f7\u884c\u7d50\u679c\u3002</p> <pre><code>class StdDev(CustomFactor):\n    def compute(self, today, assets, out, values):\n        out[:] = np.nanstd(values, axis=0)\n\ndef make_pipeline():\n    std_dev = StdDev(inputs=[TWEquityPricing.close], window_length=7)\n    return Pipeline(\n        columns={\n            'std_dev':std_dev\n        }\n    )\nresult = run_pipeline(make_pipeline(), pd.Timestamp('2013-01-03', tz='UTC'), pd.Timestamp('2023-01-03', tz='UTC'))\nresult\n</code></pre>"},{"location":"example/documents87/#_4","title":"\u9810\u8a2d\u8f38\u5165\u53c3\u6578","text":"<p>\u7576\u5efa\u7acb\u5ba2\u88fd\u5316\u56e0\u5b50\u6642\uff0c\u4e5f\u53ef\u4ee5\u9810\u5148\u8a2d\u5b9a\u8f38\u5165\u4e4b\u53c3\u6578\uff0c\u65bc\u6b64\u4f8b\u4e2d\u6211\u5011\u6b32\u5efa\u7acb\u4e00\u500b\u8a08\u7b97\u958b\u6536\u76e4\u50f9\u5dee 10 \u65e5\u5e73\u5747\u7684\u56e0\u5b50\uff0c\u5728 <code>TenDayMeanDifference</code> \u4e2d\u6211\u5011\u9810\u5148\u5ba3\u544a <code>inputs</code> \u8207 <code>window_length</code> \u70ba <code>[TWEquityPricing.close, TWEquityPricing.open]</code> \u8207 <code>window_length = 10</code>\u3002</p> <pre><code>class TenDayMeanDifference(CustomFactor):\n    inputs = [TWEquityPricing.close, TWEquityPricing.open]\n    window_length = 10\n    def compute(self, today, assets, out, c_price, o_price):\n        out[:] = np.nanmean(c_price - o_price, axis=0)\n\ndef make_pipeline():\n    close_open_diff = TenDayMeanDifference()\n    return Pipeline(\n        columns={\n            'close_open_diff':close_open_diff\n        }\n    )\n\nresult = run_pipeline(make_pipeline(), pd.Timestamp('2013-01-03', tz='UTC'), pd.Timestamp('2023-01-03', tz='UTC'))\nresult\n</code></pre> <p>\u82e5\u5728 <code>make_pipeline</code> \u4e2d\u8ce6\u4e88 <code>TenDayMeanDifference</code> \u65b0\u7684\u53c3\u6578\u5247\u6703\u8986\u84cb\u6389\u9810\u8a2d\u7684\u53c3\u6578\uff08<code>TWEquityPricing.high</code>\u3001<code>TWEquityPricing.low</code>\uff09\uff0c\u53ef\u4ee5\u767c\u73fe\u4e0b\u65b9\u8868\u683c\u7684\u7d50\u679c\u8207\u4e0a\u65b9\u8868\u683c\u4e0d\u540c\u3002</p> <pre><code>def make_pipeline():\n    close_open_diff = TenDayMeanDifference(inputs=[TWEquityPricing.high, TWEquityPricing.low])\n    return Pipeline(\n        columns={\n            'close_open_diff':close_open_diff\n        }\n    )\n\nresult = run_pipeline(make_pipeline(), pd.Timestamp('2013-01-03', tz='UTC'), pd.Timestamp('2023-01-03', tz='UTC'))\nresult\n</code></pre>"},{"location":"example/documents87/#window-length","title":"window length \u6642\u9593\u5340\u9593","text":"<p><code>Pipeline</code> \u6703\u5728\u6bcf\u500b\u4ea4\u6613\u65e5\u8a08\u7b97\u51fa\u56e0\u5b50\u7684\u771f\u5be6\u6578\u503c\u3002</p> <p>\u8acb\u6ce8\u610f\u56e0\u5b50\u7684\u6642\u9593\u5340\u9593\u5fc5\u5b9a\u662f\u5f9e\u524d\u4e00\u500b\u4ea4\u6613\u65e5\u958b\u59cb\u8a08\u7b97\uff0c\u4ee5\u8a08\u7b97\u524d 10 \u65e5\u6700\u4f4e\u6536\u76e4\u50f9\u683c\u70ba\u56e0\u5b50\uff0c\u6211\u5011\u53ef\u4ee5\u5efa\u7acb <code>TenDaysLowest</code>\u3002\u6240\u5f97\u51fa\u8cc7\u6599\u8868\u5305\u542b\u6bcf\u65e5\u5404\u80a1\u7968\u5f80\u524d\u5341\u500b\u65e5\u7684\u6700\u4f4e\u6536\u76e4\u50f9\uff0c\u4ee5 2023-03-19 \u70ba\u4f8b\uff0c\u5728\u8a08\u7b97\u56e0\u5b50\u6642\u5c31\u6703\u5f9e 2023-03-18 \u958b\u59cb\u5411\u524d\u63a8\u5341\u65e5\u3002</p> <pre><code>class TenDaysLowest(CustomFactor):\n    inputs=[TWEquityPricing.close]\n    window_length=10\n    def compute(self, today, assets, out, close):\n        out[:] = np.nanmin(close, axis=0)\n\ndef make_pipeline():\n    tendl = TenDaysLowest()\n    return Pipeline(\n        columns={\n            'TenDaysLowest':tendl\n        }\n    )\nresults = run_pipeline(make_pipeline(), pd.Timestamp('2013-03-18', tz='UTC'), pd.Timestamp('2023-01-03', tz='UTC'))        \nresults\n</code></pre> <p>\u7531\u4e0a\u8868\u53ef\u4ee5\u767c\u73fe 2013-03-19 \u53f0\u7a4d\u96fb\u7684 <code>TenDaysLowest</code> \u70ba 100.5\uff0c\u800c\u4e0b\u8868\u53ef\u4ee5\u767c\u73fe\u78ba\u5be6\u5f9e 2013-03-05 \u5230 2013-03-18 \u4e4b\u9593\u7684\u6700\u4f4e\u6536\u76e4\u50f9\u70ba 100.5 \u800c\u975e 2013-03-19 \u7684 100\uff0c\u4ee3\u8868 pipeline \u5728\u8a08\u7b97\u56e0\u5b50\u6642\u662f\u5f9e\u524d\u4e00\u65e5\u958b\u59cb\uff0c\u907f\u514d\u524d\u8996\u504f\u8aa4\u3002</p> <pre><code>from zipline.data.data_portal import DataPortal, get_bundle\ndf_bundle = get_bundle(bundle_name='tquant',\n                       calendar_name='TEJ',\n                       start_dt=pd.Timestamp('2013-01-05', tz='UTC'),\n                       end_dt=pd.Timestamp('2023-01-03', tz='UTC'))\n\ndf_bundle.loc[(df_bundle['symbol']=='2330') &amp; (df_bundle['date'].between('2013-03-04','2013-03-19'))][[\"date\", 'close']]\n</code></pre>"},{"location":"example/documents89/","title":"Pipeline\u906e\u7db2(Masking)","text":"<pre><code>import os \nStockList1 = ['1227', '1234', '1304', '1314', '1434', '1440', '1476', '1504', '1507', '1590', '1605', '1704', '1710', '1717', '1723', '1789',\n '1802', '1907', '2006', '2015', '2049', '2101', '2103', '2106', '2204', '2227', '2327', '2337', '2344', '2356', '2360', '2362',\n '2379', '2384', '2385', '2392', '2395', '2448', '2449', '2450', '2451', '2489', '2501', '2504', '2511', '2542', '2545', '2548',\n '2603', '2606', '2607', '2608', '2609', '2610', '2615', '2618', '2707', '2723', '2727', '2809', '2812', '2823', '2834', '2845',\n '2847', '2855', '2884', '2887', '2888', '2889', '2903', '2915', '3034', '3037', '3044', '3149', '3189', '3406', '3702', '4938',\n '4958', '5522', '5871', '6005', '6176', '6239', '6269', '6286', '8008', '8046', '8078', '8422', '9904', '9907', '9914', '9917', '9921',\n '9933', '9940', '9945', '2458', '5264', '2206', '1201', '2347', '3231', '5534', '6116', '9910', '1477', '2353', '6271', '1319',\n '1722', '2059', '3060', '3474', '3673', '2393', '2376', '2439', '3682', '1262', '2201', '2377', '3576', '2352', '2838', '8150',\n '2324', '2231', '8454', '2833', '6285', '6409', '1536', '1702', '2313', '2498', '2867', '6415', '6456', '9938', '2383', '4137', '6452',\n '1707', '1589', '2849', '6414', '8464', '2355', '2345', '3706', '2023', '2371', '1909', '2633', '3532', '9941', '2492', '3019',\n '3443', '4915', '4943', '1229', '2441', '2027', '3026', '1210', '2104', '2456', '5269', '8341', '2354', '3005', '3481', '6669',\n '2409', '3023', '6213', '2404', '3533', '6278', '6592', '3653', '3661', '3665', '2301', '3714', '2883', '2890', '6531', '1904',\n '2014', '2105', '2108', '2474', '2637', '6781', '1102', '4919', '1402', '3035', '3036', '4961', '6719', '6770', '2368', '1795',\n '6550', '6789', '3017', '1101', '1216', '1301', '1303', '1326', '2002', '2207', '2303', '2308', '2311', '2317', '2325', '2330',\n '2357', '2382', '2412', '2454', '2801', '2880', '2881', '2882', '2885', '2886', '2891', '2892', '2912', '3008', '3045', '3697',\n '4904', '5880', '6505', '2408', '3711', '5876']\ntickers = \" \".join(StockList1)\n\nos.environ['TEJAPI_BASE'] = 'https://api.tej.com.tw'\nos.environ['TEJAPI_KEY'] = 'Your key'\n\nos.environ['mdate'] = '20220101 20230702'\nos.environ['ticker'] = tickers\n\n!zipline ingest -b tquant\n\nfrom zipline.pipeline import Pipeline\nfrom zipline.TQresearch.tej_pipeline import run_pipeline\nfrom zipline.pipeline.data import TWEquityPricing\nfrom zipline.pipeline.factors import SimpleMovingAverage, AverageDollarVolume\n</code></pre>"},{"location":"example/documents89/#masking","title":"Masking","text":"<p>\u6709\u6642\u6211\u5011\u60f3\u5728\u8a08\u7b97 pipeline \u6642\u5ffd\u7565\u7279\u5b9a\u8cc7\u7522\u3002\u5728\u5169\u7a2e\u5e38\u898b\u60c5\u6cc1\u4e0b\uff0c\u5ffd\u7565\u8cc7\u7522\u662f\u5f88\u6709\u7528\u7684\uff1a</p> <ol> <li> <p>\u6211\u5011\u60f3\u8981\u8a08\u7b97\u4e00\u500b\u8a08\u7b97\u6210\u672c\u5f88\u9ad8\u7684\u56e0\u5b50\uff0c\u4e26\u4e14\u6211\u5011\u53ea\u95dc\u5fc3\u7279\u5b9a\u8cc7\u7522\u7684\u8a08\u7b97\u7d50\u679c\u3002\u4e00\u500b\u5e38\u898b\u7684\u7bc4\u4f8b\u662f\u8a08\u7b97\u56de\u6b78\u4fc2\u6578\uff08\u900f\u904e built-in factors <code>RollingLinearRegressionOfReturns</code>\uff09\u3002</p> </li> <li> <p>\u6211\u5011\u60f3\u8981\u8a08\u7b97\u4e00\u500b\u5728\u4e0d\u540c\u8cc7\u7522\u4e4b\u9593\u6bd4\u8f03\u7684\u56e0\u5b50\uff0c\u4f46\u4e0d\u5e0c\u671b\u91dd\u5c0d\u6240\u6709\u8cc7\u7522\u9032\u884c\u6bd4\u8f03\u3002\u4f8b\u5982\uff0c\u6211\u5011\u53ef\u80fd\u5e0c\u671b\u4f7f\u7528 <code>Factor</code> \u4e2d\u7684 <code>top</code> \u65b9\u6cd5\u4f86\u8a08\u7b97\u5831\u916c\u7387\u6392\u540d\u524d 200 \u7684\u8cc7\u7522\uff0c\u4e26\u5ffd\u7565\u6d41\u52d5\u6027\u592a\u4f4e\u7684\u8cc7\u7522\u3002</p> </li> </ol> <p>\u70ba\u4e86\u5be6\u73fe\u9019\u5169\u500b\u60c5\u5f62\uff0c\u6240\u6709 <code>Factors</code> \u548c\u8a31\u591a <code>Factor</code> \u65b9\u6cd5\u90fd\u53ef\u4ee5\u50b3\u5165 mask \u53c3\u6578\uff0c\u8a72\u53c3\u6578\u5fc5\u9808\u662f\u4e00\u500b <code>Filter</code> \uff0c\u8868\u793a\u8a08\u7b97\u6642\u8981\u8003\u616e\u54ea\u4e9b\u8cc7\u7522\u3002</p>"},{"location":"example/documents89/#masking-factors","title":"Masking Factors","text":"<p>\u5047\u8a2d\u6211\u5011\u5e0c\u671b pipeline \u8f38\u51fa\u5177\u6709\u9ad8\u6216\u4f4e\u50f9\u683c\u8b8a\u52d5\uff08<code>percent_difference</code>\uff09\u7684\u8b49\u5238\uff0c\u4f46\u540c\u6642\u53ea\u8003\u616e\u8fd130\u65e5\u6210\u4ea4\u91d1\u984d\u8d85\u904e $ 1,000,000,000 \u5143\u7684\u8b49\u5238\u3002</p> <p>\u70ba\u6b64\uff0c\u6211\u5011\u91cd\u65b0\u5efa\u7acb <code>make_pipeline</code> \u51fd\u6578\uff0c\u4e26\u5efa\u7acb <code>high_dollar_volume</code> \u904e\u6ffe\u5668\u3002</p> <p>\u7136\u5f8c\uff0c\u6211\u5011\u53ef\u4ee5\u900f\u904e\u5c07<code>high_dollar_volume</code>\u4f5c\u70ba<code>mask</code>\u53c3\u6578\u50b3\u905e\u7d66<code>SimpleMovingAverage</code>\uff0c\u5c07\u6b64\u904e\u6ffe\u5668\u7528\u4f5c\u79fb\u52d5\u5e73\u5747\u56e0\u5b50\u7684<code>mask</code>\u3002</p> <pre><code># Dollar volume factor\ndollar_volume = AverageDollarVolume(inputs = [TWEquityPricing.close, TWEquityPricing.volume],window_length=30)\n\n# High dollar volume filter\nhigh_dollar_volume = (dollar_volume &gt; 1000000000)\n\n# Average close price factors\nmean_close_10 = SimpleMovingAverage(inputs=[TWEquityPricing.close], window_length=10, mask=high_dollar_volume)\nmean_close_30 = SimpleMovingAverage(inputs=[TWEquityPricing.close], window_length=30, mask=high_dollar_volume)\n\n# Relative difference factor\npercent_difference = (mean_close_10 - mean_close_30) / mean_close_30\n</code></pre> <p>\u6211\u5011\u5c07 Mask \u61c9\u7528\u65bc <code>SimpleMovingAverage</code>\uff0c\u9650\u5236\u5e73\u5747\u6536\u76e4\u50f9\u56e0\u5b50\u7684\u8a08\u7b97\u7bc4\u570d\u70ba\uff1a\u6eff\u8db3 <code>high_dollar_volume</code> filter \u7684 35 \u6a94\u8b49\u5238\u3002\u800c\u5982\u679c\u6c92\u6709 Mask \u5247\u6703\u6709 230 \u6a94\u8b49\u5238\u3002</p> <p>\u7576\u6211\u5011\u7d50\u5408 <code>mean_close_10</code> \u548c <code>mean_close_30</code> \u4f86\u8a08\u7b97 <code>percent_difference</code> \u6642\uff0c\u8a72\u8a08\u7b97\u662f\u5728\u76f8\u540c\u7684 35 \u500b\u8b49\u5238\u4e0a\u9032\u884c\u7684\u3002</p>"},{"location":"example/documents89/#masking-filters","title":"Masking Filters","text":"<p>Masks \u9084\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c filters \u4f86\u56de\u50b3\u7d50\u679c\uff0c\u4f8b\u5982\uff1a<code>top</code>\u3001<code>bottom</code>\u8207<code>percentile_between</code>\u3002</p> <p>Masks \u5728\u6211\u5011\u60f3\u8981\u5728\u5efa\u7acb\u6295\u8cc7\u7d44\u5408\u6642\u7279\u5225\u6709\u7528\u3002\u4f8b\u5982\uff1a\u5047\u8a2d\u6211\u5011\u60f3\u8981\u53d6\u5f97\u540c\u6642\u662f\u6536\u76e4\u50f9\u524d\u767e\u5206\u4e4b\u5341\u3001\u958b\u76e4\u50f9\u524d 8 \u540d\u3001\u6210\u4ea4\u503c\u524d\u767e\u5206\u4e4b\u5341\u7684\u8b49\u5238\u3002</p> <p>\u6211\u5011\u53ef\u4ee5\u900f\u904e\u4ee5\u4e0b\u65b9\u6cd5\u9054\u6210\u3002</p> <pre><code># Dollar volume factor\ndollar_volume = AverageDollarVolume(inputs = [TWEquityPricing.close, TWEquityPricing.volume],window_length=30)\n\n# High dollar volume filter\nhigh_dollar_volume = dollar_volume.percentile_between(90,100)\n\n# Top open price filter (high dollar volume securities)\ntop_open_price = TWEquityPricing.open.latest.top(8, mask=high_dollar_volume)\n\n# Top percentile close price filter (high dollar volume, top 8 open price)\nhigh_close_price = TWEquityPricing.close.latest.percentile_between(90, 100, mask=top_open_price)\n</code></pre> <p>\u8b93\u6211\u5011\u5c07\u9019\u4e9b\u8b8a\u6578\u653e\u5165<code>make_pipeline</code>\uff0c\u63a5\u8457\u8f38\u51fa\u4e00\u500b\u6709\u8457<code>high_close_price</code> filter \u7684\u7a7a pipeline </p> <pre><code>def make_pipeline():\n\n    dollar_volume = AverageDollarVolume(inputs = [TWEquityPricing.close, TWEquityPricing.volume],window_length=30)\n\n    high_dollar_volume = dollar_volume.percentile_between(90,100)\n\n    top_open_price = TWEquityPricing.open.latest.top(8, mask=high_dollar_volume)\n\n    high_close_price = TWEquityPricing.close.latest.percentile_between(90, 100, mask=top_open_price)\n\n    return Pipeline(\n        screen=high_close_price\n    )\n</code></pre> <p>\u57f7\u884c\u9019\u500b pipeline </p> <pre><code>result = run_pipeline(make_pipeline(), '2022-12-30', '2022-12-30')\nprint('\u901a\u904e\u904e\u6ffe\u5668\u7684\u8b49\u5238\u6578: %d' % len(result))\nresult\n</code></pre> <p>\u50cf\u4e0a\u8ff0\u9019\u6a23\u61c9\u7528 masks \u7684\u65b9\u5f0f\u53ef\u4ee5\u8996\u70ba\u4e00\u500b \"asset funnel\"\u3002</p>"},{"location":"example/documents89/#screenmask","title":"\u6bd4\u8f03Screen\u8207Mask","text":"<ul> <li>screen\uff1a</li> <li>\u82e5\u4f7f\u7528<code>screen</code>\uff0c\u6703\u5728\u6240\u6709 pipeline factors \u6216 filters **\u8a08\u7b97\u5b8c\u5f8c**\u5c07\u4e0d\u7b26\u5408\u689d\u4ef6\u7684\u8cc7\u6599\u522a\u9664\uff0c\u4ee5<code>high_close_price</code>\u9019\u500b filter \u70ba\u4f8b\uff0chigh_close_price=False \u7684\u516c\u53f8\u5c07\u88ab\u522a\u9664\u3002</li> <li> <p>\u82e5\u662f\u9047\u5230\u8a08\u7b97\u91cf\u5f88\u5927\u7684 factors \u6642\u9019\u7a2e\u505a\u6cd5\u6703\u6bd4\u8f03\u6c92\u6709\u6548\u7387\u3002  </p> </li> <li> <p>mask\uff1a</p> </li> <li>\u82e5\u4f7f\u7528<code>mask</code>\uff0c\u6703\u5728\u8a72 factors \u6216 filters \u8a08\u7b97\u6642\u76f4\u63a5\u5ffd\u7565 mask=False \u7684\u516c\u53f8\u4e0d\u7d0d\u5165\u8a08\u7b97\u3002</li> <li>\u9019\u7a2e\u505a\u6cd5\u4e0d\u9700\u8981\u7b49\u5230\u8f38\u51fa\u7d50\u679c\u6642\u624d\u9032\u884c\u7be9\u9078\uff0c\u5728 factors \u6216 filters \u8a08\u7b97\u968e\u6bb5\u5c31\u5df2\u7d93\u9032\u884c\u7be9\u9078\u3002</li> </ul>"},{"location":"example/documents9/","title":"Ingest \u975e\u50f9\u91cf\u8cc7\u6599(Ingest Fundamental Data)","text":""},{"location":"example/documents9/#_1","title":"\u975e\u50f9\u91cf\u8cc7\u6599","text":"<ul> <li>\u6b04\u4f4d\u5c0d\u7167\u6e05\u55ae\u53ef\u53c3\u8003TQuant\u5b98\u65b9\u7db2\u7ad9\u6700\u4e0b\u65b9\u7684 TEJ TOOL API \u6b04\u4f4d\u5c0d\u7167\u6e05\u55ae\u3002 \u8a2d\u5b9a\u5b8c <code>os.environ['fields']</code> \u5f8c\uff0c\u4fbf\u53ef\u4f7f\u7528 <code>!zipline ingest -b fundamentals</code> \u8f09\u5165\u6240\u9700\u8981\u7684\u975e\u50f9\u91cf\u8cc7\u6599\u3002 <pre><code>columns = ['Sales_Growth_Rate','Operating_Income_Growth_Rate', \n           'Pre_Tax_Income_Growth_Rate','Net_Income_Growth_Rate',\n           'Industry_Eng','Industry', 'roi', 'YoY_Monthly_Sales','mktcap']\n</code></pre> <pre><code>os.environ['fields'] = \" \".join(columns)\n!zipline ingest -b fundamentals\n</code></pre></li> </ul>"},{"location":"example/documents9/#ingest","title":"\u7c21\u6613 ingest \u975e\u50f9\u91cf\u8cc7\u6599","text":"<p><code>imple_ingest()</code>\u51fd\u6578\u63d0\u4f9b\u53e6\u4e00\u7a2e\u53d6\u5f97\u6307\u5b9a\u80a1\u7968\u975e\u50f9\u91cf\u8cc7\u6599\u7684\u65b9\u6cd5\uff0c\u8cc7\u6599\u540c\u6a23\u6703\u5b58\u5165 bundle \u4e2d\uff1a</p> <p><code>simple_ingest()</code>\u51fd\u6578\u8f09\u5165\u975e\u50f9\u91cf\u8cc7\u6599\u6240\u9700\u53c3\u6578\u8cc7\u8a0a\u5982\u4e0b\uff1a</p> <ul> <li> <p>name ( str ) = 'fundamentals' \u5b9a\u7fa9 bundle \u540d\u7a31</p> </li> <li> <p>tickers ( list or str ) = ['xxxx', 'xxxx', 'xxxx'] or 'xxxx xxxx xxxx' \u8a2d\u7f6e\u6211\u5011\u9700\u8981\u7684\u80a1\u7968\u4ee3\u78bc</p> </li> <li> <p>fields ( list or str ) = ['field1', 'field2', 'field3'] or 'field1, field2, field3' \u8a2d\u7f6e\u6488\u53d6\u975e\u50f9\u91cf\u8cc7\u6599\u7684\u6b04\u4f4d\uff0c\u5176\u4e2d field1\u3001field2\u3001field3 \u4ee3\u8868\u8cc7\u6599\u6b04\u4f4d\u540d\u7a31</p> </li> <li> <p>start_date ( str ) = 'yyyy-mm-dd' \u8a2d\u7f6e\u8d77\u59cb\u65e5\u671f</p> </li> <li> <p>end_date ( str ) = 'yyyy-mm-dd' \u8a2d\u7f6e\u7d50\u675f\u65e5\u671f</p> </li> <li> <p>self_acc ( str ) = 'N'(\u9810\u8a2d) \u8a2d\u7f6e\u662f\u5426\u6db5\u84cb\u516c\u53f8\u81ea\u7d50\u8ca1\u52d9\uff0c\u5176\u4e2d\u8a2d\u5b9a'Y'\u4ee3\u8868\u8ca1\u52d9\u8cc7\u6599\u5305\u542b\u81ea\u7d50\u8ca1\u52d9\uff0c'N'\u5247\u8868\u793a\u4e0d\u5305\u542b</p> </li> </ul> <pre><code>simple_ingest(name = 'fundamentals',\n              tickers = tickers,\n              fields = columns,\n              start_date = start,\n              end_date = end,\n              # self_acc = 'Y'\n              )\n</code></pre>"},{"location":"example/documents9/#_2","title":"\u66f4\u65b0\u975e\u50f9\u91cf\u8cc7\u6599","text":"<p>\u900f\u904e\u8f38\u5165 <code>!zipline update -b tquant</code> \u6307\u4ee4\uff0c\u53ef\u4ee5\u66f4\u65b0\u7576\u524d\u4f7f\u7528\u7684 fundamentals bundle\uff0c\u4ee5\u7372\u5f97\u6700\u65b0\u7684\u8cc7\u8a0a\u3002</p> <p><pre><code>## update \u524d\nfrom zipline.data.data_portal import get_fundamentals\ndf = get_fundamentals()\nprint('\u80a1\u7968\u6c60\u70ba:',df['symbol'].unique())\nprint('\u8d77\u59cb\u65e5:',df['date'].min())\nprint('\u7d50\u675f\u65e5:',df['date'].max())\nprint('\u6b04\u4f4d:',df.columns)\n</code></pre> <pre><code>!zipline update -b fundamentals\n</code></pre> <pre><code># update \u5f8c\ndf = get_fundamentals()\nprint('\u80a1\u7968\u6c60\u70ba:',df['symbol'].unique())\nprint('\u8d77\u59cb\u65e5:',df['date'].min())\nprint('\u7d50\u675f\u65e5:',df['date'].max())\nprint('\u6b04\u4f4d:',df.columns)\n</code></pre></p>"},{"location":"example/documents9/#_3","title":"\u65b0\u589e\u975e\u50f9\u91cf\u8cc7\u6599","text":"<ul> <li> <p>\u57f7\u884c\u6307\u4ee4 <code>zipline add -b fundamentals -t &lt;tickers_want_to_add&gt;</code> \u53ef\u4ee5\u6839\u64da\u7576\u524d fundamentls bundle \u7684\u6b04\u4f4d\uff0c\u65b0\u589e\u6240\u9078\u64c7\u7684\u516c\u53f8\u5230 bundle \u4e2d\u3002</p> </li> <li> <p>\uff08fundamentls bundle \u9650\u5b9a\uff09\u900f\u904e\u6307\u4ee4 <code>!zipline add -b fundamentals -f &lt;columns_want_to_add&gt;</code>\uff08\u5176\u4e2d -f \u4ee3\u8868 field\uff09\u4f86\u65b0\u589e\u7576\u524d\u5df2\u6709\u516c\u53f8\u7684\u6307\u5b9a\u8cc7\u6599\u6b04\u4f4d\u3002</p> </li> <li> <p>\u8acb\u6ce8\u610f\uff0c\u76ee\u524d\u7cfb\u7d71\u4e0d\u652f\u63f4\u540c\u6642\u65b0\u589e\u516c\u53f8\u548c\u8cc7\u6599\u6b04\u4f4d\uff0c\u56e0\u6b64\u9700\u8981\u5206\u5225\u9032\u884c\u9019\u4e9b\u64cd\u4f5c\u3002</p> </li> </ul> <p><pre><code># add \u516c\u53f8\n!zipline add -b fundamentals -t \"6523 6208\"\n</code></pre> <pre><code># add \u516c\u53f8\u5f8c\ndf = get_fundamentals()\nprint('\u80a1\u7968\u6c60\u70ba:',df['symbol'].unique())\nprint('\u8d77\u59cb\u65e5:',df['date'].min())\nprint('\u7d50\u675f\u65e5:',df['date'].max())\nprint('\u6b04\u4f4d:',df.columns)\n</code></pre> <pre><code># add \u6b04\u4f4d\n!zipline add -b fundamentals -f Gross_Margin_Growth_Rate\n</code></pre> <pre><code># add \u6b04\u4f4d\u5f8c\ndf = get_fundamentals()\nprint('\u80a1\u7968\u6c60\u70ba:',df['symbol'].unique())\nprint('\u8d77\u59cb\u65e5:',df['date'].min())\nprint('\u7d50\u675f\u65e5:',df['date'].max())\nprint('\u6b04\u4f4d:',df.columns)\n</code></pre></p>"},{"location":"example/documents9/#_4","title":"\u975e\u50f9\u91cf\u8cc7\u6599","text":"<ul> <li>\u6b04\u4f4d\u5c0d\u7167\u6e05\u55ae\u53ef\u53c3\u8003TQuant\u5b98\u65b9\u7db2\u7ad9\u6700\u4e0b\u65b9\u7684 TEJ TOOL API \u6b04\u4f4d\u5c0d\u7167\u6e05\u55ae\u3002 \u8a2d\u5b9a\u5b8c <code>os.environ['fields']</code> \u5f8c\uff0c\u4fbf\u53ef\u4f7f\u7528 <code>!zipline ingest -b fundamentals</code> \u8f09\u5165\u6240\u9700\u8981\u7684\u975e\u50f9\u91cf\u8cc7\u6599\u3002 <pre><code>columns = ['Sales_Growth_Rate','Operating_Income_Growth_Rate', \n           'Pre_Tax_Income_Growth_Rate','Net_Income_Growth_Rate',\n           'Industry_Eng','Industry', 'roi', 'YoY_Monthly_Sales','mktcap']\n</code></pre> <pre><code>os.environ['fields'] = \" \".join(columns)\n!zipline ingest -b fundamentals\n</code></pre></li> </ul>"},{"location":"example/documents9/#ingest_1","title":"\u7c21\u6613 ingest \u975e\u50f9\u91cf\u8cc7\u6599","text":"<p><code>imple_ingest()</code>\u51fd\u6578\u63d0\u4f9b\u53e6\u4e00\u7a2e\u53d6\u5f97\u6307\u5b9a\u80a1\u7968\u975e\u50f9\u91cf\u8cc7\u6599\u7684\u65b9\u6cd5\uff0c\u8cc7\u6599\u540c\u6a23\u6703\u5b58\u5165 bundle \u4e2d\uff1a</p> <p><code>simple_ingest()</code>\u51fd\u6578\u8f09\u5165\u975e\u50f9\u91cf\u8cc7\u6599\u6240\u9700\u53c3\u6578\u8cc7\u8a0a\u5982\u4e0b\uff1a</p> <ul> <li> <p>name ( str ) = 'fundamentals' \u5b9a\u7fa9 bundle \u540d\u7a31</p> </li> <li> <p>tickers ( list or str ) = ['xxxx', 'xxxx', 'xxxx'] or 'xxxx xxxx xxxx' \u8a2d\u7f6e\u6211\u5011\u9700\u8981\u7684\u80a1\u7968\u4ee3\u78bc</p> </li> <li> <p>fields ( list or str ) = ['field1', 'field2', 'field3'] or 'field1, field2, field3' \u8a2d\u7f6e\u6488\u53d6\u975e\u50f9\u91cf\u8cc7\u6599\u7684\u6b04\u4f4d\uff0c\u5176\u4e2d field1\u3001field2\u3001field3 \u4ee3\u8868\u8cc7\u6599\u6b04\u4f4d\u540d\u7a31</p> </li> <li> <p>start_date ( str ) = 'yyyy-mm-dd' \u8a2d\u7f6e\u8d77\u59cb\u65e5\u671f</p> </li> <li> <p>end_date ( str ) = 'yyyy-mm-dd' \u8a2d\u7f6e\u7d50\u675f\u65e5\u671f</p> </li> <li> <p>self_acc ( str ) = 'N'(\u9810\u8a2d) \u8a2d\u7f6e\u662f\u5426\u6db5\u84cb\u516c\u53f8\u81ea\u7d50\u8ca1\u52d9\uff0c\u5176\u4e2d\u8a2d\u5b9a'Y'\u4ee3\u8868\u8ca1\u52d9\u8cc7\u6599\u5305\u542b\u81ea\u7d50\u8ca1\u52d9\uff0c'N'\u5247\u8868\u793a\u4e0d\u5305\u542b</p> </li> </ul> <pre><code>simple_ingest(name = 'fundamentals',\n              tickers = tickers,\n              fields = columns,\n              start_date = start,\n              end_date = end,\n              # self_acc = 'Y'\n              )\n</code></pre>"},{"location":"example/documents9/#_5","title":"\u66f4\u65b0\u975e\u50f9\u91cf\u8cc7\u6599","text":"<p>\u900f\u904e\u8f38\u5165 <code>!zipline update -b tquant</code> \u6307\u4ee4\uff0c\u53ef\u4ee5\u66f4\u65b0\u7576\u524d\u4f7f\u7528\u7684 fundamentals bundle\uff0c\u4ee5\u7372\u5f97\u6700\u65b0\u7684\u8cc7\u8a0a\u3002</p> <p><pre><code>## update \u524d\nfrom zipline.data.data_portal import get_fundamentals\ndf = get_fundamentals()\nprint('\u80a1\u7968\u6c60\u70ba:',df['symbol'].unique())\nprint('\u8d77\u59cb\u65e5:',df['date'].min())\nprint('\u7d50\u675f\u65e5:',df['date'].max())\nprint('\u6b04\u4f4d:',df.columns)\n</code></pre> <pre><code>!zipline update -b fundamentals\n</code></pre> <pre><code># update \u5f8c\ndf = get_fundamentals()\nprint('\u80a1\u7968\u6c60\u70ba:',df['symbol'].unique())\nprint('\u8d77\u59cb\u65e5:',df['date'].min())\nprint('\u7d50\u675f\u65e5:',df['date'].max())\nprint('\u6b04\u4f4d:',df.columns)\n</code></pre></p>"},{"location":"example/documents9/#_6","title":"\u65b0\u589e\u975e\u50f9\u91cf\u8cc7\u6599","text":"<ul> <li> <p>\u57f7\u884c\u6307\u4ee4 <code>zipline add -b fundamentals -t &lt;tickers_want_to_add&gt;</code> \u53ef\u4ee5\u6839\u64da\u7576\u524d fundamentls bundle \u7684\u6b04\u4f4d\uff0c\u65b0\u589e\u6240\u9078\u64c7\u7684\u516c\u53f8\u5230 bundle \u4e2d\u3002</p> </li> <li> <p>\uff08fundamentls bundle \u9650\u5b9a\uff09\u900f\u904e\u6307\u4ee4 <code>!zipline add -b fundamentals -f &lt;columns_want_to_add&gt;</code>\uff08\u5176\u4e2d -f \u4ee3\u8868 field\uff09\u4f86\u65b0\u589e\u7576\u524d\u5df2\u6709\u516c\u53f8\u7684\u6307\u5b9a\u8cc7\u6599\u6b04\u4f4d\u3002</p> </li> <li> <p>\u8acb\u6ce8\u610f\uff0c\u76ee\u524d\u7cfb\u7d71\u4e0d\u652f\u63f4\u540c\u6642\u65b0\u589e\u516c\u53f8\u548c\u8cc7\u6599\u6b04\u4f4d\uff0c\u56e0\u6b64\u9700\u8981\u5206\u5225\u9032\u884c\u9019\u4e9b\u64cd\u4f5c\u3002</p> </li> </ul> <p><pre><code># add \u516c\u53f8\n!zipline add -b fundamentals -t \"6523 6208\"\n</code></pre> <pre><code># add \u516c\u53f8\u5f8c\ndf = get_fundamentals()\nprint('\u80a1\u7968\u6c60\u70ba:',df['symbol'].unique())\nprint('\u8d77\u59cb\u65e5:',df['date'].min())\nprint('\u7d50\u675f\u65e5:',df['date'].max())\nprint('\u6b04\u4f4d:',df.columns)\n</code></pre> <pre><code># add \u6b04\u4f4d\n!zipline add -b fundamentals -f Gross_Margin_Growth_Rate\n</code></pre> <pre><code># add \u6b04\u4f4d\u5f8c\ndf = get_fundamentals()\nprint('\u80a1\u7968\u6c60\u70ba:',df['symbol'].unique())\nprint('\u8d77\u59cb\u65e5:',df['date'].min())\nprint('\u7d50\u675f\u65e5:',df['date'].max())\nprint('\u6b04\u4f4d:',df.columns)\n</code></pre></p>"},{"location":"example/documents95/","title":"AverageDollarVolume \u51fd\u6578\u4ecb\u7d39","text":"<p><code>AverageDollarVolume()</code> \u662f Zipline \u63d0\u4f9b\u7684\u4e00\u7a2e\u56e0\u5b50\uff08Factor\uff09\uff0c\u7528\u4f86\u8a08\u7b97\u67d0\u8cc7\u7522\u5728\u904e\u53bb\u4e00\u6bb5\u671f\u9593\u7684 \u5e73\u5747\u6210\u4ea4\u91d1\u984d\uff0c\u5176\u5b9a\u7fa9\u70ba\uff1a</p> <p>\u6bcf\u65e5\u5e73\u5747\u91d1\u984d = \u50f9\u683c \u00d7 \u6210\u4ea4\u91cf  </p> <p>\u9019\u500b\u6307\u6a19\u5e38\u7528\u4f86\u7be9\u9078\u6d41\u52d5\u6027\u9ad8\u7684\u80a1\u7968\u3002</p>"},{"location":"example/documents95/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>inputs</code>\uff1a\u6b32\u4f7f\u7528\u7684\u50f9\u683c\u8207\u6210\u4ea4\u91cf\u6b04\u4f4d\uff0c\u9810\u8a2d\u70ba <code>EquityPricing.close</code>\u3002  </li> <li><code>window_length</code>\uff1a\u89c0\u5bdf\u7684\u5929\u6578\uff08\u4f8b\u5982\u904e\u53bb 10 \u5929\uff09\u3002</li> </ul> <p>```python AverageDollarVolume(     inputs=[TWEquityPricing.close, TWEquityPricing.volume],     window_length=10 )</p>"},{"location":"example/documents95/#pipelinebuilt-in-factors","title":"Pipeline\u5167\u5efa\u56e0\u5b50\uff08Built-in Factors\uff09","text":"<p>\u672c\u6587\u4ef6\u5f59\u6574\u4e86 Zipline \u4e2d\u5e38\u7528\u7684 <code>pipeline.factors</code> \u56e0\u5b50\u6a21\u7d44\uff0c\u6db5\u84cb\u7d71\u8a08\u3001\u6280\u8853\u6307\u6a19\u3001\u6ce2\u52d5\u5ea6\u3001\u8da8\u52e2\u8ffd\u8e64\u7b49\u591a\u7a2e\u529f\u80fd\uff0c\u4e26\u91dd\u5c0d\u6bcf\u500b\u56e0\u5b50\u63d0\u4f9b\u7c21\u8981\u4ecb\u7d39\u3001\u8a9e\u6cd5\u8aaa\u660e\u8207\u7bc4\u4f8b\u7a0b\u5f0f\u78bc\u3002</p>"},{"location":"example/documents95/#_2","title":"\u6280\u8853\u5206\u6790\u985e","text":"<ul> <li>AverageDollarVolume\uff1a\u6210\u4ea4\u91d1\u984d\u5e73\u5747\u56e0\u5b50</li> <li>SimpleMovingAverage\uff1a\u7c21\u55ae\u79fb\u52d5\u5e73\u5747 (SMA)</li> <li>LinearWeightedMovingAverage\uff1a\u7dda\u6027\u52a0\u6b0a\u79fb\u52d5\u5e73\u5747</li> <li>ExponentialWeightedMovingAverage\uff1a\u6307\u6578\u52a0\u6b0a\u79fb\u52d5\u5e73\u5747</li> <li>ExponentialWeightedMovingStdDev\uff1a\u6307\u6578\u52a0\u6b0a\u6a19\u6e96\u5dee</li> <li>BollingerBands\uff1a\u5e03\u6797\u901a\u9053</li> <li>RSI\uff1a\u76f8\u5c0d\u5f37\u5f31\u6307\u6a19</li> <li>VWAP\uff1a\u52a0\u6b0a\u5e73\u5747\u50f9\u683c</li> <li>WeightedAverageValue\uff1a\u6210\u4ea4\u91cf\u52a0\u6b0a\u4efb\u610f\u6578\u503c</li> <li>FastStochasticOscillator\uff1a\u5feb\u901f\u96a8\u6a5f\u6307\u6a19 (K\u503c)</li> <li>IchimokuKinkoHyo\uff1a\u4e00\u76ee\u5747\u8861\u8868</li> <li>Aroon\uff1a\u963f\u9686\u6307\u6a19</li> </ul>"},{"location":"example/documents95/#_3","title":"\u5831\u916c\u8207\u8b8a\u52d5\u7387\u985e","text":"<ul> <li>DailyReturns\uff1a\u65e5\u5831\u916c\u7387</li> <li>Returns\uff1a\u591a\u671f\u5831\u916c\u7387</li> <li>PercentChange\uff1a\u8b8a\u6578\u767e\u5206\u6bd4\u8b8a\u52d5</li> <li>RateOfChangePercentage\uff1a\u767e\u5206\u6bd4\u8b8a\u5316\u7387 (%ROC)</li> </ul>"},{"location":"example/documents95/#_4","title":"\u6ce2\u52d5\u5ea6\u8207\u98a8\u96aa\u8a55\u4f30","text":"<ul> <li>MaxDrawdown\uff1a\u6700\u5927\u56de\u64a4</li> <li>TrueRange\uff1a\u771f\u5be6\u6ce2\u52d5\u5e45\u5ea6</li> </ul>"},{"location":"example/documents95/#_5","title":"\u76f8\u95dc\u6027\u8207\u56de\u6b78\u5206\u6790","text":"<ul> <li>RollingPearson\uff1a\u6efe\u52d5\u76ae\u723e\u68ee\u76f8\u95dc</li> <li>RollingSpearmanOfReturns\uff1a\u6efe\u52d5\u65af\u76ae\u723e\u66fc\u5831\u916c\u76f8\u95dc</li> <li>RollingLinearRegressionOfReturns\uff1a\u6efe\u52d5\u7dda\u6027\u56de\u6b78\uff08Beta, Alpha \u7b49\uff09</li> <li>SimpleBeta\uff1a\u7c21\u5316\u7248 Beta \u56de\u6b78\u5206\u6790</li> </ul>"},{"location":"example/documents95/#_6","title":"\u5206\u985e\u8207\u7d71\u8a08","text":"<ul> <li>PeerCount\uff1a\u540c\u985e\u7fa4\u7d44\u6578\u91cf\u7d71\u8a08</li> </ul>"},{"location":"example/documents96/","title":"BollingerBands \u51fd\u6578\u4ecb\u7d39","text":"<p><code>BollingerBands()</code> \u662f Zipline \u63d0\u4f9b\u7684\u6280\u8853\u6307\u6a19\u4e4b\u4e00\uff0c\u4f7f\u7528\u7d71\u8a08\u5b78\u7684\u6982\u5ff5\uff0c\u5c07\u50f9\u683c\u79fb\u52d5\u5e73\u5747\u7dda\u64f4\u5c55\u70ba \u4e0a\u8ecc\u3001\u4e2d\u8ecc\u3001\u4e0b\u8ecc \u4e09\u689d\u7dda\uff1a</p> <p>\u4e2d\u8ecc = n \u65e5\u79fb\u52d5\u5e73\u5747\u7dda \u4e0a\u8ecc = \u4e2d\u8ecc + m \u00d7 \u6a19\u6e96\u5dee \u4e0b\u8ecc = \u4e2d\u8ecc - m \u00d7 \u6a19\u6e96\u5dee</p> <p>\u6b64\u6307\u6a19\u53ef\u7528\u65bc\u8fa8\u8b58\u50f9\u683c\u662f\u5426\u504f\u96e2\u5e38\u614b\u5340\u9593\uff0c\u4e26\u4f5c\u70ba\u8d85\u8cb7\u8d85\u8ce3\u7684\u6280\u8853\u4f9d\u64da\u3002</p>"},{"location":"example/documents96/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>inputs</code>\uff1a\u6b32\u4f7f\u7528\u7684\u50f9\u683c\u8cc7\u6599\uff0c\u9810\u8a2d\u70ba <code>EquityPricing.close</code>\u3002  </li> <li><code>window_length</code>\uff1a\u8a08\u7b97\u79fb\u52d5\u5e73\u5747\u8207\u6a19\u6e96\u5dee\u7684\u5929\u6578 (n)\u3002  </li> <li><code>k</code>\uff1a\u6a19\u6e96\u5dee\u500d\u6578 (m)\u3002</li> </ul> <p>```python BollingerBands(     inputs=[TWEquityPricing.close],     window_length=14,     k=1.5 )</p>"},{"location":"example/documents97/","title":"DailyReturns \u51fd\u6578\u4ecb\u7d39","text":"<p><code>DailyReturns()</code> \u662f Zipline \u63d0\u4f9b\u7684\u4e00\u500b\u7c21\u55ae\u56e0\u5b50\uff0c\u7528\u4f86\u8a08\u7b97\u8cc7\u7522\u7684 \u65e5\u5831\u916c\u7387\uff0c\u5373\uff1a</p> <p>\u65e5\u5831\u916c\u7387 = \u7576\u65e5\u50f9\u683c\u8b8a\u52d5 \u00f7 \u524d\u4e00\u65e5\u50f9\u683c</p> <p>\u6b64\u56e0\u5b50\u5e38\u7528\u65bc\u8861\u91cf\u8cc7\u7522\u7684\u77ed\u671f\u50f9\u683c\u8b8a\u5316\u3002</p>"},{"location":"example/documents97/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>inputs</code>\uff1a\u6b32\u4f7f\u7528\u7684\u50f9\u683c\u8cc7\u6599\u6b04\u4f4d\uff0c\u9810\u8a2d\u70ba <code>EquityPricing.close</code>\u3002</li> </ul> <pre><code>DailyReturns(\n    inputs=[TWEquityPricing.close]\n)\n</code></pre> <pre><code>from zipline.pipeline.factors import DailyReturns\n\ndef make_pipeline():\n    return Pipeline(\n        columns={\n            \"Daily Return\":\n            DailyReturns(\n                inputs=[TWEquityPricing.close]\n            )\n        }\n    )\n\nrun_pipeline(make_pipeline(), start_time, end_time)\n</code></pre>"},{"location":"example/documents98/","title":"SimpleMovingAverage \u51fd\u6578\u4ecb\u7d39","text":"<p><code>SimpleMovingAverage()</code> \u662f Zipline \u63d0\u4f9b\u7684\u6280\u8853\u5206\u6790\u5de5\u5177\uff0c\u7528\u4f86\u8a08\u7b97\u67d0\u8cc7\u7522\u5728\u904e\u53bb n \u5929\u7684 \u7c21\u55ae\u79fb\u52d5\u5e73\u5747\u503c\uff08SMA\uff09\uff0c\u5e38\u7528\u4f86\u89c0\u5bdf\u50f9\u683c\u7684\u8da8\u52e2\u3002</p> <p>SMA = \u904e\u53bb n \u5929\u7684\u6536\u76e4\u50f9\u7e3d\u548c \u00f7 n</p>"},{"location":"example/documents98/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>inputs</code>\uff1a\u6b32\u8a08\u7b97\u7684\u8cc7\u6599\u6b04\u4f4d\uff08\u4f8b\u5982 <code>EquityPricing.close</code>\uff09\u3002  </li> <li><code>window_length</code>\uff1a\u79fb\u52d5\u5e73\u5747\u7684\u671f\u9593\uff08n \u65e5\uff09\u3002</li> </ul> <pre><code>SimpleMovingAverage(\n    inputs=[TWEquityPricing.close],\n    window_length=10\n)\n</code></pre> <pre><code>from zipline.pipeline.factors import SimpleMovingAverage\n\ndef make_pipeline():\n    return Pipeline(\n        columns={\n            \"SMA\": SimpleMovingAverage(\n                inputs=[TWEquityPricing.close], \n                window_length=10\n            )\n        }\n    )\n\nrun_pipeline(make_pipeline(), start_time, end_time)\n</code></pre>"},{"location":"example/documents99/","title":"LinearWeightedMovingAverage \u51fd\u6578\u4ecb\u7d39","text":"<p><code>LinearWeightedMovingAverage()</code> \u662f Zipline \u63d0\u4f9b\u7684\u79fb\u52d5\u5e73\u5747\u65b9\u6cd5\u4e4b\u4e00\uff0c\u7528\u4f86\u8a08\u7b97 \u7dda\u6027\u52a0\u6b0a\u79fb\u52d5\u5e73\u5747\uff08LWMA\uff09\u3002</p> <p>\u6b64\u65b9\u6cd5\u6703\u5c0d\u8f03\u8fd1\u7684\u50f9\u683c\u7d66\u4e88\u8f03\u5927\u7684\u6b0a\u91cd\uff0c\u8a08\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a</p> \\[ \\text{LWMA} = \\frac{\\sum_{i=1}^{n} i \\times x_{i}}{\\sum_{i=1}^{n} i} \\] <p>\u8207\u7c21\u55ae\u79fb\u52d5\u5e73\u5747\u4e0d\u540c\uff0cLWMA \u66f4\u91cd\u8996\u8fd1\u671f\u7684\u50f9\u683c\u8b8a\u5316\u3002</p>"},{"location":"example/documents99/#_1","title":"\u51fd\u6578\u8a9e\u6cd5","text":"<ul> <li><code>inputs</code>\uff1a\u6b32\u8a08\u7b97\u7684\u8cc7\u6599\u6b04\u4f4d\uff08\u4f8b\u5982 <code>EquityPricing.close</code>\uff09\u3002  </li> <li><code>window_length</code>\uff1a\u52a0\u6b0a\u671f\u9593\u7684\u9577\u5ea6\uff08n \u65e5\uff09\u3002</li> </ul> <p><pre><code>LinearWeightedMovingAverage(\n    inputs=[TWEquityPricing.close],\n    window_length=10\n)\n</code></pre> \u7bc4\u4f8b <pre><code>from zipline.pipeline.factors import LinearWeightedMovingAverage\n\ndef make_pipeline():\n    return Pipeline(\n        columns={\n            \"LWMA\": LinearWeightedMovingAverage(\n                inputs=[TWEquityPricing.close], \n                window_length=10\n            )\n        }\n    )\n\nrun_pipeline(make_pipeline(), start_time, end_time)\n</code></pre></p>"},{"location":"installation/using-docker/","title":"\u4f7f\u7528 Docker \u5b89\u88dd TQuant Lab","text":"<p>\u672c\u9801\u8aaa\u660e\u5982\u4f55\u4f7f\u7528 Docker \u5b89\u88dd TQuant Lab\u3002</p>"},{"location":"installation/using-docker/#docker","title":"\u5b89\u88dd Docker","text":"<p>\u9996\u5148\uff0c\u8acb\u6839\u64da\u60a8\u7684\u4f5c\u696d\u7cfb\u7d71\u4e0b\u8f09\u4e26\u5b89\u88dd Docker / Docker Desktop\uff1a</p> <ul> <li>\u74b0\u5883\u70ba Mac\u3002</li> <li>\u74b0\u5883\u70ba Windows\u3002</li> <li>\u74b0\u5883\u70ba Linux\u3002</li> </ul> <p>\u91cd\u65b0\u555f\u52d5\u60a8\u7684\u96fb\u8166</p> <p>\u5982\u679c\u60a8\u525b\u5728 Windows \u7cfb\u7d71\u4e0a\u5b89\u88dd\u4e86 Docker\uff0c\u8acb\u8a18\u5f97\u91cd\u65b0\u555f\u52d5\u96fb\u8166\uff0c\u5426\u5247\u53ef\u80fd\u6703\u9047\u5230\u5bb9\u5668\u7db2\u8def\u9023\u7dda\u65b9\u9762\u7684\u7570\u5e38\u554f\u984c\u3002</p>"},{"location":"installation/using-docker/#tquant-lab","title":"\u5b89\u88dd TQuant Lab","text":"<p>TEJ \u63d0\u4f9b\u4e86\u5b98\u65b9\u7684 <code>tquantlab</code> Docker \u6620\u50cf\u6a94\uff0c\u60a8\u53ef\u4ee5\u5f9e Docker Hub \u4e0b\u8f09\u4e26\u904b\u884c <code>tquant</code> \u5bb9\u5668\uff0c\u540c\u6642\u5efa\u7acb <code>volume</code> \u4f86\u5171\u4eab\u6578\u64da\u3002\u4f7f\u7528\u4ee5\u4e0b\u6307\u4ee4\uff1a</p> <ol> <li>\u4e0b\u8f09 tquant \u6700\u65b0\u6620\u50cf\u6a94\u3002 <pre><code>docker pull tej87681088/tquant:latest\n</code></pre></li> <li>\u5efa\u7acb Volume\uff08\u8cc7\u6599\u5b58\u5132\u7a7a\u9593\uff09\u3002 <pre><code>docker volume create data\n</code></pre></li> <li>\u555f\u52d5 tquant \u5bb9\u5668\uff0c\u639b\u8f09 volume \u4e26\u958b\u653e 8888 \u57e0\u3002 <pre><code>docker run -v data:/app -p 8888:8888 --name tquant tej87681088/tquant\n</code></pre></li> </ol> <p>\u4ee5\u4e0a\u6307\u4ee4\u7528\u65bc\u4e0b\u8f09\u4e26\u904b\u884c <code>tquant</code> \u5bb9\u5668\uff0c\u4e26\u5efa\u7acb <code>volume</code> \u5171\u4eab\u6578\u64da\u3002</p> <p>\u9996\u5148\uff0c\u900f\u904e <code>docker pull</code> \u4e0b\u8f09\u6700\u65b0\u6620\u50cf\u6a94\uff0c\u63a5\u8457\u4f7f\u7528 <code>docker volume create</code> \u5efa\u7acb\u540d\u70ba <code>data</code> \u7684\u5b58\u5132\u7a7a\u9593\uff0c\u6700\u5f8c\u900f\u904e <code>docker run</code> \u555f\u52d5\u5bb9\u5668\uff0c\u5c07 <code>volume</code> \u639b\u8f09\u81f3 <code>/app</code>\uff0c\u4e26\u5c07\u672c\u6a5f\u7684 8888 \u57e0\u5c0d\u61c9\u81f3\u5bb9\u5668\u5167\u90e8\u7684 8888 \u57e0\uff0c\u4ee5\u4fbf\u5b58\u53d6\u670d\u52d9\u3002</p> <p>\u88dc\u5145\u8aaa\u660e</p> <ol> <li><code>volume</code> \u4f4d\u7f6e\uff08Windows 10 WSL \u74b0\u5883\uff09\u901a\u5e38\u4f4d\u65bc\uff1a   <pre><code>\\wsl$\\docker-desktop-data\\data\\docker\\volumes\\data\\_data\n</code></pre></li> <li>\u82e5\u4e0d\u4fdd\u7559\u5bb9\u5668\uff0c\u53ef\u52a0 <code>--rm</code> \u53c3\u6578\uff0c\u5982\u4e0b\u65b9\u6307\u4ee4\uff1a   <pre><code>docker run --rm -v data:/app -p 8888:8888 --name tquant tej87681088/tquant\n</code></pre></li> </ol>"},{"location":"installation/using-docker/#jupyter-notebook","title":"\u4f7f\u7528 Jupyter Notebook \u4f86\u57f7\u884c","text":"<p>\u555f\u52d5\u5bb9\u5668\u5f8c\uff0c\u53ef\u5728\u700f\u89bd\u5668\u4e2d\u8f38\u5165\u4ee5\u4e0b\u7db2\u5740\uff0c\u958b\u59cb\u4f7f\u7528 Jupyter Notebook\uff1a</p> <pre><code>http://127.0.0.1:8888/tree?token=XXXXXXXXXXXXXXXX\n</code></pre>"},{"location":"installation/using-docker/#container","title":"\u64cd\u4f5c\u5df2\u95dc\u9589\u7684 Container","text":"<p>\u82e5\u9700\u64cd\u4f5c\u5df2\u5275\u5efa\u4f46\u5df2\u95dc\u9589\u7684 Container\uff0c\u53ef\u4f9d\u7167\u4ee5\u4e0b\u6b65\u9a5f\u9032\u884c\uff1a</p> <ol> <li>\u5217\u51fa\u6240\u6709 Container\u3002\uff08\u5305\u62ec\u5df2\u505c\u6b62\u7684\uff09 <pre><code>docker ps -a  \n</code></pre></li> <li>\u555f\u52d5\u6307\u5b9a\u7684 Container\uff0c\u5c07  \u66ff\u63db\u70ba\u5be6\u969b\u7684 Container ID\u3002 <pre><code>docker start &lt;CONTAINER_ID&gt; \n</code></pre> <li>\u67e5\u770b\u6307\u5b9a Container \u7684\u6700\u8fd1\u65e5\u8a8c\uff0c\u986f\u793a\u6700\u5f8c 50 \u884c\u8f38\u51fa\u3002 <pre><code>docker logs --tail 50 &lt;CONTAINER_ID&gt;\n</code></pre></li>"},{"location":"installation/using-docker/#tquant-docker","title":"\u66f4\u65b0 tquant Docker \u5bb9\u5668","text":"<p>\u82e5\u60a8\u9700\u8981\u66f4\u65b0 <code>tquant</code> Docker \u5bb9\u5668\u81f3\u6700\u65b0\u7248\u672c\uff0c\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9a5f\u64cd\u4f5c\u3002</p> <p>Note</p> <p>\u9019\u4e9b\u6b65\u9a5f\u6703\u505c\u6b62\u4e26\u522a\u9664\u73fe\u6709\u7684\u5bb9\u5668\uff0c\u4f46\u7531\u65bc\u4f7f\u7528\u4e86 <code>volume</code>\uff0c\u8cc7\u6599\u6703\u4fdd\u7559\u5728\u672c\u6a5f\u4e26\u4e0d\u6703\u4e1f\u5931\u3002</p> <ol> <li>\u505c\u6b62\u4e26\u522a\u9664\u73fe\u6709\u7684 tquant \u5bb9\u5668\u3002 <pre><code>docker stop tquant  \ndocker rm tquant\n</code></pre></li> <li>\u4e0b\u8f09\u6700\u65b0\u7684 tquant \u6620\u50cf\u6a94\u3002 <pre><code>docker pull tej87681088/tquant:latest  \n</code></pre></li> <li>\u91cd\u65b0\u555f\u52d5\u5bb9\u5668\uff0c\u4e26\u639b\u8f09\u8cc7\u6599\u5230 volume\u3002 <pre><code>docker run -v data:/app -p 8888:8888 --name tquant tej87681088/tquant\n</code></pre></li> </ol> <p>\u9019\u4e9b\u6b65\u9a5f\u6703\u66f4\u65b0 tquant Docker \u5bb9\u5668\u4e26\u4fdd\u7559\u8cc7\u6599\uff0c\u78ba\u4fdd\u60a8\u4f7f\u7528\u7684\u662f\u6700\u65b0\u7248\u672c\u7684\u6620\u50cf\u6a94\u3002</p>"},{"location":"installation/using-docker/#upgrade","title":"\u6aa2\u67e5\u66f4\u65b0 zipline-tej","text":"<p>\u67e5\u770b\u66f4\u65b0\u65e5\u8a8c\uff08Changelog\uff09\uff0c\u5728\u9032\u884c\u66f4\u65b0\u5f8c\uff0c\u8acb\u52d9\u5fc5 \u6aa2\u67e5\u66f4\u65b0\u65e5\u8a8c\uff0c\u4ee5\u78ba\u4fdd\u662f\u5426\u6709\u91cd\u5927\u8b8a\u66f4\u5fc3\u6216\u9700\u8981\u624b\u52d5\u64cd\u4f5c\u7684\u60c5\u6cc1\uff0c\u4e26\u78ba\u8a8d\u5bb9\u5668\u5728\u66f4\u65b0\u5f8c\u80fd\u6b63\u5e38\u555f\u52d5\u3002</p>"},{"location":"python_api/document_pythonapi/","title":"Document pythonapi","text":"<p>Python \u8aaa\u660e\u6587\u4ef6</p>"},{"location":"python_api/document_pythonapi/#_1","title":"\u958b\u59cb\u4f7f\u7528","text":"<p>\u4ee5\u4e0b\u6587\u4ef6\u5c07\u8aaa\u660e\u5982\u4f55\u4f7f\u7528TEJ API\u4f86\u5b58\u53d6TEJ \u8cc7\u6599\u5eab</p>"},{"location":"python_api/document_pythonapi/#api","title":"API\u8a8d\u8b49","text":""},{"location":"python_api/document_pythonapi/#api-key","title":"\u53d6\u5f97 API key","text":"<p>\u60a8\u9700\u8981\u5148\u5411\u672c\u516c\u53f8\u8a3b\u518a\u4e00\u500b\u5e33\u865f\uff0c\u7136\u5f8c\u518d\u7533\u8acb\u53d6\u7528\u8cc7\u6599\u6240\u9700\u7684 API Key\u3002</p>"},{"location":"python_api/document_pythonapi/#_2","title":"\u4f8b\u5982\uff1a","text":"<pre><code>api_key=a8sb1jska2lz03hc2\n</code></pre>"},{"location":"python_api/document_pythonapi/#api-key_1","title":"\u4f55\u6642\u4f7f\u7528API Key","text":"<p>\u6bcf\u6b21\u5b58\u53d6\u8cc7\u6599\u6642\uff0c\u90fd\u9700\u8981\u63d0\u4f9b\u60a8\u7684API Key</p>"},{"location":"python_api/document_pythonapi/#rest-api","title":"REST API","text":"<pre><code>?api_key=\"YOURAPIKEY\"\n</code></pre>"},{"location":"python_api/document_pythonapi/#python","title":"Python","text":"<pre><code>tejapi.ApiConfig.api_key = \"YOURAPIKEY\"\n</code></pre>"},{"location":"python_api/document_pythonapi/#_3","title":"\u514d\u8cbb\u53ca\u4ed8\u8cbb\u8cc7\u6599\u5eab","text":"<p>\u672c\u516c\u53f8\u63d0\u4f9b\u514d\u8cbb\u53ca\u4ed8\u8cbb\u8cc7\u6599\u5eab</p> <ul> <li>\u8a66\u7528\u8cc7\u6599\u5eab<ul> <li>\u50c5\u80fd\u4f7f\u7528\u8a66\u7528\u8cc7\u6599\u5eab\u5167\u63d0\u4f9b\u7684\u8868\u683c</li> <li>\u6bcf\u5929\u6700\u591a500\u6b21\u547c\u53eb</li> <li>\u6bcf\u5929\u547c\u53eb\u6700\u591a10,000\u7b46\u8cc7\u6599(\u53ef\u5206\u9801\u53d6\u5f97\u5176\u9918\u8cc7\u6599\uff0c\u5206\u9801\u7e3d\u7b46\u6578\u4e0a\u9650\u70ba50,000)</li> <li>\u6bcf\u5929\u6700\u591a\u63d0\u4f9b50,000\u7b46\u8cc7\u6599</li> </ul> </li> <li>\u4ed8\u8cbb\u8cc7\u6599\u5eab<ul> <li>\u6bcf\u5929\u6700\u591a2000\u6b21\u547c\u53eb</li> <li>\u6bcf\u6b21\u547c\u53eb\u6700\u591a10,000\u7b46\u8cc7\u6599(\u53ef\u5206\u9801\u53d6\u5f97\u5176\u9918\u8cc7\u6599\uff0c\u5206\u9801\u7e3d\u7b46\u6578\u4e0a\u9650\u70ba1,000,000)</li> <li>\u6bcf\u5929\u6700\u591a\u63d0\u4f9b3,000,000\u7b46\u8cc7\u6599</li> </ul> </li> </ul>"},{"location":"python_api/document_pythonapi/#api_1","title":"\u5404\u985e\u7a0b\u5f0f\u8a9e\u8a00 API","text":"<p>Tejapi\u63d0\u4f9b\u5404\u985e\u7a0b\u5f0f\u8a9e\u8a00\u7528\u4ee5\u5b58\u53d6\u8cc7\u6599\uff0c\u8acb\u9078\u64c7\u4e0b\u5217\u5404\u985e\u7a0b\u5f0f\u8a9e\u8a00\u8a73\u7d30\u8aaa\u660e\u3002</p> <ul> <li> <p> REST API</p> <p>\u8aaa\u660e\u900f\u904ehttps\u5b58\u53d6REST API\u7684\u4f7f\u7528\u65b9\u5f0f</p> <p>[:octions-arrow-right-24: Reference][restapi]</p> </li> </ul>"},{"location":"rest_api/document_restapi/","title":"REST \u8aaa\u660e\u6587\u4ef6","text":""},{"location":"rest_api/document_restapi/#datatables-api","title":"Datatables API","text":"<p>TEJ REST API\u63d0\u4f9b\u4e00\u5957\u7c21\u6613\u7684\u65b9\u5f0f\u4f86\u5b58\u53d6TEJ \u8cc7\u6599\u5eab\uff0c\u4e26\u8f38\u51fajson\u6216xml\u683c\u5f0f\u3002\u60a8\u4e5f\u53ef\u4ee5\u900f\u904e\u5404\u7a2e\u7a0b\u5f0f\u6216\u5de5\u5177\u5feb\u901f\u53d6\u5f97\u9700\u8981\u7684\u8cc7\u6599\u3002</p> <p>\u60a8\u4e5f\u53ef\u4ee5\u5728\u6b64\u53d6\u5f97 OPEN API(Swagger) \u8aaa\u660e\u6587\u4ef6:</p> <p>\u63d0\u793a</p> <p>\u60a8\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u700f\u89bd\u5668(Browser)\u4f86\u53d6\u5f97\u8cc7\u6599\uff0c\u4e5f\u53ef\u4ee5\u900f\u904e\u5de5\u5177\u7a0b\u5f0f\u4f8b\u5982 curl, wget ...\u7b49</p>"},{"location":"rest_api/document_restapi/#_1","title":"\u4f7f\u7528\u65b9\u6cd5","text":"<p>\u5b9a\u7fa9</p> <pre><code>GET https://api.tej.com.tw/api/datatables/{datatable_code}/{table_code}.{format}?&lt;row_filter_criteria&gt;\n</code></pre> <p>\u4ee5\u4e0a\u5e02(\u6ac3)\u672a\u8abf\u6574\u80a1\u50f9(\u65e5)(TWN/APRCD)\u70ba\u4f8b\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e0b\u5217\u65b9\u5f0f\u53d6\u5f97\u8cc7\u6599</p> jsonxml <pre><code>GET https://api.tej.com.tw/api/datatables/TWN/APRCD.json?api_key=&lt;YOURAPIKEY&gt;\n</code></pre> <pre><code>GET https://api.tej.com.tw/api/datatables/TWN/APRCD.xml?api_key=&lt;YOURAPIKEY&gt;\n</code></pre> <p>\u56de\u61c9\u8cc7\u6599\u5982\u4e0b</p> json <pre><code>    {\n        \"datatable\":{\n            \"data\":[\n                [\n                    \"Y9999\",\n                    \"2018-05-15T00:00:00Z\",\n                    10965.08,\n                    10978.38,\n                    10874.73,\n                    10874.73,\n                    7266464,\n                    153439891,\n                    -0.7091,\n                    0.3794,\n                    699338771,\n                    32392361,\n                    null,\n                    null,\n                    -0.7116,\n                    100,\n                    100,\n                    1259280,\n                    null,\n                    16.4,\n                    null,\n                    1.81,\n                    \"\",\n                    1.14,\n                    null,\n                    4,\n                    -77.66,\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"TSE\"\n                ],\n                [\n                    \"Y9999\",\n                    \"2018-05-14T00:00:00Z\",\n                    10938.3,\n                    10970.24,\n                    10908.86,\n                    10952.39,\n                    7222849,\n                    145417795,\n                    0.8602,\n                    0.3677,\n                    699338777,\n                    32622949,\n                    null,\n                    null,\n                    0.8565,\n                    100,\n                    100,\n                    1168845,\n                    null,\n                    16.52,\n                    null,\n                    1.82,\n                    \"\",\n                    1.15,\n                    null,\n                    3.97,\n                    93.41,\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"TSE\"\n                ],\n                [\n                    \"Y9999\",\n                    \"2018-05-11T00:00:00Z\",\n                    10808.4,\n                    10874.63,\n                    10808.4,\n                    10858.98,\n                    7399223,\n                    165763227,\n                    0.9179,\n                    0.4002,\n                    699338982,\n                    32344168,\n                    null,\n                    null,\n                    0.9137,\n                    100,\n                    100,\n                    1248505,\n                    null,\n                    16.38,\n                    null,\n                    1.81,\n                    \"\",\n                    1.14,\n                    null,\n                    4.14,\n                    98.77,\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"TSE\"\n                ],\n                [\n                    \"Y9999\",\n                    \"2018-05-10T00:00:00Z\",\n                    10731.68,\n                    10782.06,\n                    10731.68,\n                    10760.21,\n                    7062376,\n                    139276989,\n                    0.5312,\n                    0.3551,\n                    699339661,\n                    32049300,\n                    null,\n                    null,\n                    0.5298,\n                    100,\n                    100,\n                    1102455,\n                    null,\n                    16.23,\n                    null,\n                    1.79,\n                    \"\",\n                    1.12,\n                    null,\n                    4.17,\n                    56.86,\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"TSE\"\n                ],\n                [\n                    \"Y9999\",\n                    \"2018-05-09T00:00:00Z\",\n                    10692.89,\n                    10748.6,\n                    10689.81,\n                    10703.35,\n                    7074991,\n                    135741987,\n                    0.112,\n                    0.3496,\n                    695033357,\n                    31547472,\n                    null,\n                    null,\n                    0.1119,\n                    100,\n                    100,\n                    1123979,\n                    null,\n                    16.14,\n                    null,\n                    1.78,\n                    \"\",\n                    1.12,\n                    null,\n                    4.2,\n                    11.97,\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"TSE\"\n                ],\n                [\n                    \"Y9999\",\n                    \"2018-05-08T00:00:00Z\",\n                    10610.44,\n                    10691.38,\n                    10609.04,\n                    10691.38,\n                    7064737,\n                    133691609,\n                    0.8154,\n                    0.333,\n                    695033357,\n                    31509651,\n                    null,\n                    null,\n                    0.8121,\n                    100,\n                    100,\n                    1042424,\n                    null,\n                    16.12,\n                    null,\n                    1.78,\n                    \"\",\n                    1.12,\n                    null,\n                    4.21,\n                    86.47,\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"TSE\"\n                ],\n                [\n                    \"Y9999\",\n                    \"2018-05-07T00:00:00Z\",\n                    10581.78,\n                    10632.62,\n                    10555.56,\n                    10604.91,\n                    6108995,\n                    126046786,\n                    0.7174,\n                    0.282,\n                    695033431,\n                    31247223,\n                    null,\n                    null,\n                    0.7149,\n                    100,\n                    100,\n                    956892,\n                    null,\n                    15.99,\n                    null,\n                    1.76,\n                    \"\",\n                    1.11,\n                    null,\n                    4.22,\n                    75.54,\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"TSE\"\n                ],\n                [\n                    \"Y9999\",\n                    \"2018-05-04T00:00:00Z\",\n                    10516.45,\n                    10566.37,\n                    10500.97,\n                    10529.37,\n                    5653857,\n                    120828141,\n                    0.1445,\n                    0.2961,\n                    695035128,\n                    31017892,\n                    null,\n                    null,\n                    0.1444,\n                    100,\n                    100,\n                    958698,\n                    null,\n                    15.87,\n                    null,\n                    1.75,\n                    \"\",\n                    1.1,\n                    null,\n                    4.25,\n                    15.19,\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"TSE\"\n                ],\n                [\n                    \"Y9999\",\n                    \"2018-05-03T00:00:00Z\",\n                    10578.98,\n                    10578.98,\n                    10509.03,\n                    10514.18,\n                    5841156,\n                    124397511,\n                    -0.9853,\n                    0.3034,\n                    695035857,\n                    30994925,\n                    null,\n                    null,\n                    -0.9902,\n                    100,\n                    100,\n                    993874,\n                    null,\n                    15.86,\n                    null,\n                    1.75,\n                    \"\",\n                    1.1,\n                    null,\n                    4.25,\n                    -104.63,\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"TSE\"\n                ],\n                [\n                    \"Y9999\",\n                    \"2018-05-02T00:00:00Z\",\n                    10665.52,\n                    10683.9,\n                    10601.1,\n                    10618.81,\n                    6324416,\n                    129078743,\n                    -0.3666,\n                    0.3245,\n                    695043607,\n                    31304327,\n                    null,\n                    null,\n                    -0.3673,\n                    100,\n                    100,\n                    1023004,\n                    null,\n                    16.02,\n                    null,\n                    1.77,\n                    \"\",\n                    1.11,\n                    null,\n                    4.21,\n                    -39.07,\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"TSE\"\n                ]\n            ],\n            \"columns\":[\n                {\n                    \"name\":\"coid\",\n                    \"type\":\"char(7)\",\n                    \"description\":\"\u4ea4\u6613\u6240\u53ca\u6ac3\u6aaf\u8cb7\u8ce3\u4e2d\u5fc3\u6240\u8a02\u7684\u4ee3\u78bc\",\n                    \"unit\":\"-\"\n                },\n                {\n                    \"name\":\"mdate\",\n                    \"type\":\"datetime\",\n                    \"description\":\"\u5e74\u6708\u65e5\",\n                    \"unit\":\"-\"\n                },\n                {\n                    \"name\":\"open_d\",\n                    \"type\":\"decimal(8,2)\",\n                    \"description\":\"open_d\",\n                    \"unit\":\"-\"\n                },\n                {\n                    \"name\":\"high_d\",\n                    \"type\":\"decimal(8,2)\",\n                    \"description\":\"high_d\",\n                    \"unit\":\"-\"\n                },\n                {\n                    \"name\":\"low_d\",\n                    \"type\":\"decimal(8,2)\",\n                    \"description\":\"low_d\",\n                    \"unit\":\"-\"\n                },\n                {\n                    \"name\":\"close_d\",\n                    \"type\":\"decimal(8,2)\",\n                    \"description\":\"close_d\",\n                    \"unit\":\"-\"\n                },\n                {\n                    \"name\":\"volume\",\n                    \"type\":\"decimal(9,0)\",\n                    \"description\":\"\u7576\u65e5\u82e5\u6210\u4ea4\u91cf\u70ba0\uff0c\u8868\u793a\u7576\u65e5\u7121\u4ea4\u6613\uff0c\u6b64\u6642\u4e4b\u958b\u9ad8\u4f4e\u6536\u50f9\u683c\u70ba\u524d\u4e00\u65e5\u4e4b\u6536\u76e4\u50f9\u9664\u52a0\u6b0a\u6307\u6578(Y9999)\u5916\uff0c\u7522\u696d\u90e8\u5206\u7531TEJ\u884d\u751f\uff0c\u70ba\u6210\u5206\u80a1\u6210\u4ea4\u91cf\u4e4b\u52a0\u7e3d\",\n                    \"unit\":\"T\"\n                },\n                {\n                    \"name\":\"amount\",\n                    \"type\":\"decimal(12,0)\",\n                    \"description\":\"\u672a\u7121\u8003\u616e\u516c\u773e\u6d41\u901a\u91cf(free float)\uff1b\u9664\u52a0\u6b0a\u6307\u6578(Y9999)\u5916\uff0c\u7522\u696d\u90e8\u5206\u7531TEJ\u884d\u751f\",\n                    \"unit\":\"NTD,T\"\n                },\n                {\n                    \"name\":\"roi\",\n                    \"type\":\"decimal(9,4)\",\n                    \"description\":\"\u7576OTC\u8f49\u81f3TSE\u4ea4\u6613\u6642\uff0c\u5831\u916c\u7387\u4ee5\u627f\u92b7\u50f9\u8a08\u7b97\uff0c\u82e5\u7121\u627f\u92b7\u50f9\uff0c\u5247\u4ee5OTC\u6700\u5f8c\u4e00\u5929\u4e4b\u6536\u76e4\u50f9\u4f86\u8a08\u7b97\u3002\",\n                    \"unit\":\"%\"\n                },\n                {\n                    \"name\":\"turnover\",\n                    \"type\":\"decimal(9,4)\",\n                    \"description\":\"\u500b\u80a1=\u6210\u4ea4\u91cf/\u6d41\u901a\u80a1\u6578*100(%)\uff1b\u7522\u696d\uff1d\u7522\u696d\u6210\u4ea4\u91cf\u7e3d\u984d/\u7522\u696d\u6d41\u901a\u80a1\u6578*100(%)\",\n                    \"unit\":\"%\"\n                },\n                {\n                    \"name\":\"outstanding\",\n                    \"type\":\"decimal(12,0)\",\n                    \"description\":\"\u6d41\u901a\u5728\u5916\u80a1\u6578(\u5343\u80a1)\",\n                    \"unit\":\"T\"\n                },\n                {\n                    \"name\":\"mv\",\n                    \"type\":\"decimal(12,0)\",\n                    \"description\":\"\u500b\u80a1\uff1a\u6d41\u901a\u5728\u5916\u80a1\u6578(\u500b\u80a1)*\u672a\u8abf\u6574\u6536\u76e4\u50f9\uff1b\u6307\u6578\uff1a\u70ba\u53cd\u6620\u8a72\u80a1\u7968\u65bc\u5e02\u5834\u4e0a\u5be6\u969b\u53ef\u6d41\u901a\u4e4b\u80a1\u6578\uff0c\u6703\u5c07\u5404\u6210\u5206\u80a1\u4e4b\u516c\u958b\u767c\u884c\u80a1\u6578\u6263\u9664\u9577\u671f\u6027\u3001\u7b56\u7565\u6027\u6301  \u80a1\u6bd4\u4f8b\uff0c\u6545\u8a08\u7b97\u6307\u6578\u5e02\u503c\u6642\uff0c\u82e5\u8a72\u6307\u6578\u6709\u8003\u616e\u516c\u773e\u6d41\u901a\u91cf(\u4ea4\u6613\u6240\u8207FTSE\u5408\u7de8\u7684\u6307\u6578)\uff0c\u5247\u5e02\u503c\u516c\u5f0f=\u672a\u8abf\u6574\u6536\u76e4\u50f9*\u6d41\u901a\u5728\u5916\u80a1\u6578(\u500b\u80a1)*\u516c\u773e\u6d41\u901a\u4fc2\u6578(\u6b64\u4fc2\u6578\u7531\u4ea4\u6613\u6240\u63d0\u4f9b)\",\n                    \"unit\":\"NTD,T\"\n                },\n                {\n                    \"name\":\"bid\",\n                    \"type\":\"decimal(7,2)\",\n                    \"description\":\"\u6700\u5f8c\u63ed\u793a\u8cb7\u50f9\",\n                    \"unit\":\"NTD\"\n                },\n                {\n                    \"name\":\"offer\",\n                    \"type\":\"decimal(7,2)\",\n                    \"description\":\"\u6700\u5f8c\u63ed\u793a\u8ce3\u50f9\",\n                    \"unit\":\"NTD\"\n                },\n                {\n                    \"name\":\"roib\",\n                    \"type\":\"decimal(9,4)\",\n                    \"description\":\"\u5831\u916c\u7387-Ln\",\n                    \"unit\":\"-\"\n                },\n                {\n                    \"name\":\"mv_pct\",\n                    \"type\":\"decimal(7,3)\",\n                    \"description\":\"mv_pct\",\n                    \"unit\":\"-\"\n                },\n                {\n                    \"name\":\"amt_pct\",\n                    \"type\":\"decimal(7,3)\",\n                    \"description\":\"amt_pct\",\n                    \"unit\":\"-\"\n                },\n                {\n                    \"name\":\"trn_d\",\n                    \"type\":\"decimal(9,0)\",\n                    \"description\":\"\u6210\u4ea4\u7b46\u6578(\u7b46)\",\n                    \"unit\":\"-\"\n                },\n                {\n                    \"name\":\"per_tse\",\n                    \"type\":\"decimal(7,2)\",\n                    \"description\":\"per_tse\",\n                    \"unit\":\"-\"\n                },\n                {\n                    \"name\":\"per_tej\",\n                    \"type\":\"decimal(7,2)\",\n                    \"description\":\"per_tej\",\n                    \"unit\":\"-\"\n                },\n                {\n                    \"name\":\"pbr_tse\",\n                    \"type\":\"decimal(7,2)\",\n                    \"description\":\"pbr_tse\",\n                    \"unit\":\"-\"\n                },\n                {\n                    \"name\":\"pbr_tej\",\n                    \"type\":\"decimal(7,2)\",\n                    \"description\":\"pbr_tej\",\n                    \"unit\":\"-\"\n                },\n                {\n                    \"name\":\"limit\",\n                    \"type\":\"char(1)\",\n                    \"description\":\"\u80a1\u7968\u6f32\u505c\uff1a\u201d+\u201d\uff1b\u8dcc\u505c\uff1a\u201d-\u201c\",\n                    \"unit\":\"-\"\n                },\n                {\n                    \"name\":\"tej_psr\",\n                    \"type\":\"decimal(7,2)\",\n                    \"description\":\"=\u5e02\u503c/\u6700\u8fd14\u5b63\u5408\u8a08\u4e4b\u71df\u6536\uff0cTEJ\u63d0\u4f9b\u672c\u6b04\u4f4d\u9700\u642d\u914d\u8ca1\u5831\u767c\u4f48\u6642\u9593\uff0c\u76ee\u524d\u66f4\u65b0\u65b9\u5f0f\u70ba\u6bcf\u5e746/1\u300110/1\u3001\u53ca12/1\u66f4\u65b0\u71df\u6536\u8cc7\u6599\uff0c\u9996\u6b21\u4e0a\u5e02\u9700\u6eff\u4e00\u5e74\u7684\u6b21\u4e00\u5e74\u5ea61/1\u59cb\u8a08\u7b97\u3002\",\n                    \"unit\":\"-\"\n                },\n                {\n                    \"name\":\"div_yid\",\n                    \"type\":\"decimal(7,2)\",\n                    \"description\":\"\u5373\u6bcf\u80a1\u80a1\u5229\u8207\u7576\u65e5\u540d\u76ee\u6536\u76e4\u50f9\u4e4b\u6bd4\u503c\uff0c\u5176\u4e2d\u6bcf\u80a1\u80a1\u5229=\u8a72\u516c\u53f8\u6bcf\u80a1\u914d\u767c\u4e4b\u73fe\u91d1\u80a1\u5229+\u76c8\u9918\u8f49\u589e\u8cc7\u80a1\u7968\u80a1\u5229\u3002\u6b64\u6b04\u4f4d\u7531\u4ea4\u6613\u6240\u63d0\u4f9b\uff0c\u5176\u4e2d97/07/17\u4ee5\u524d\u4e4b\u8cc7\u6599\u4ea4\u6613\u6240\u8a08\u7b97\u65b9\u5f0f\u4fc2\u63a1\u53d6\u524d\u4e00\u7b46\u6709\u767c\u653e\u80a1\u5229\u4e4b\u8cc7\u6599\u4f86\u8a08\u7b97\uff0c\u5373\u7576\u5e74\u5ea6\u516c\u53f8\u4e0d\u767c\u653e\u80a1\u5229\uff0c\u5247\u4ee5\u524d\u4e00\u5e74\u5ea6\u6216\u66f4\u65e9\u4ee5\u524d\u7684\u80a1\u5229\u8cc7\u6599\u8a08\u7b97\u4e0d\u5408\u7406\uff0c\u654597/07/17\u4ea4\u6613\u6240\u5df2\u4fee\u6b63\u70ba\u4ee5\u8a72\u5e74\u5ea6\u4e4b\u8cc7\u6599\u4f86\u8a08\u7b97\uff0c\u6545\u524d\u5f8c\u671f\u8cc7\u6599\u6703\u6709\u6240\u5dee\u7570\u3002\",\n                    \"unit\":\"%\"\n                },\n                {\n                    \"name\":\"tej_cdiv\",\n                    \"type\":\"decimal(7,2)\",\n                    \"description\":\"=\u73fe\u91d1\u80a1\u5229\u7e3d\u984d/\u5e02\u503c*100%\uff0cTEJ\u63d0\u4f9b\",\n                    \"unit\":\"%\"\n                },\n                {\n                    \"name\":\"clschg\",\n                    \"type\":\"decimal(8,2)\",\n                    \"description\":\"\u80a1\u50f9\u6f32\u8dcc(\u5143)\",\n                    \"unit\":\"-\"\n                },\n                {\n                    \"name\":\"xattn1\",\n                    \"type\":\"char(1)\",\n                    \"description\":\"\u516c\u4f48\u7570\u5e38\u4ea4\u6613\u6709\u50f9\u8b49\u5238\u4e4b\u4ea4\u6613\u8cc7\u8a0a\",\n                    \"unit\":\"-\"\n                },\n                {\n                    \"name\":\"xattn2\",\n                    \"type\":\"char(1)\",\n                    \"description\":\"\u5c0d\u9023\u7e8c\u516c\u4f48\u6ce8\u610f\u4ea4\u6613\u8cc7\u8a0a\u4e4b\u6709\u50f9\u8b49\u5238\u63a1\u53d6\u4e4b\u8655\u7f6e\u63aa\u65bd\",\n                    \"unit\":\"-\"\n                },\n                {\n                    \"name\":\"xstat1\",\n                    \"type\":\"char(1)\",\n                    \"description\":\"\u5168\u984d\u4ea4\u5272(Y)\",\n                    \"unit\":\"-\"\n                },\n                {\n                    \"name\":\"pmkt\",\n                    \"type\":\"char(5)\",\n                    \"description\":\"\u5e02\u5834\u5225\",\n                    \"unit\":\"-\"\n                }\n            ]\n        },\n        \"meta\":{\n            \"next_cursor_id\":\"uRKchQOqqW\"\n        }\n}\n</code></pre>  === \"xml\"   <pre><code>\n</code></pre>"},{"location":"template/","title":"\u5feb\u901f\u5165\u9580","text":"<p>Foo \u662f\u4e00\u6b3e\u591a\u529f\u80fd\u5de5\u5177\uff0c\u65e8\u5728\u7c21\u5316\u60a8\u7684\u5de5\u4f5c\u6d41\u7a0b\u4e26\u63d0\u9ad8\u751f\u7522\u529b\u3002 \u7121\u8ad6\u60a8\u662f\u958b\u767c\u4eba\u54e1\u3001\u4f5c\u5bb6\u9084\u662f\u5c08\u6848\u7ba1\u7406\u8005\uff0cFoo<sup>1</sup> \u90fd\u80fd\u63d0\u4f9b\u5f37\u5927\u7684\u529f\u80fd\uff0c\u5e6b\u52a9\u60a8\u4fdd\u6301\u7d44\u7e54\u6027\u4e26\u63d0\u9ad8\u6548\u7387\u3002 \u5982\u679c\u60a8\u719f\u6089 Python\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>pip</code> \u4f86\u5b89\u88dd Foo\uff0c\u5426\u5247\u6211\u5011\u5efa\u8b70\u4f7f\u7528 <code>docker</code>\u3002</p>"},{"location":"template/#_2","title":"\u5b89\u88dd\u65b9\u5f0f","text":""},{"location":"template/#with-pip","title":"\u4f7f\u7528 pip \u63a8\u85a6","text":"<p>Foo \u53ef\u4f5c\u70ba Python \u5957\u4ef6 \u5b89\u88dd\uff0c\u5efa\u8b70\u5728 \u865b\u64ec\u74b0\u5883 \u4e2d\u4f7f\u7528 <code>pip</code> \u9032\u884c\u5b89\u88dd\u3002\u6253\u958b\u7d42\u7aef\u4e26\u8f38\u5165\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88dd Foo\uff1a</p> \u6700\u65b0\u7248\u672c <code>base.html</code> <pre><code>pip install foo-toolkit\n</code></pre> <pre><code>pip install foo-toolkit==\"1.*\" # (1)!\n</code></pre> <ol> <li> <p>Foo \u9075\u5faa \u8a9e\u610f\u5316\u7248\u672c\u63a7\u5236<sup>2</sup>\uff0c\u56e0\u6b64\u5efa\u8b70\u9650\u5236\u5347\u7d1a\u5230\u7576\u524d\u4e3b\u8981\u7248\u672c\uff0c\u4ee5\u907f\u514d\u6f5b\u5728\u7684\u76f8\u5bb9\u6027\u554f\u984c\u3002</p> <p>\u82e5\u8981\u78ba\u4fdd\u53ef\u91cd\u73fe\u6027\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 <code>pip freeze</code> \u4f86\u5efa\u7acb\u9396\u5b9a\u6a94\u6848\uff1a</p> <pre><code>pip freeze &gt; requirements.txt\n</code></pre> <p>\u7136\u5f8c\uff0c\u4f7f\u7528\u9396\u5b9a\u6a94\u6848\u5b89\u88dd\u76f8\u4f9d\u5957\u4ef6\uff1a</p> <pre><code>pip install -r requirements.txt\n</code></pre> </li> </ol> <p>\u6b64\u5b89\u88dd\u65b9\u5f0f\u6703\u81ea\u52d5\u5305\u542b\u5fc5\u8981\u7684\u76f8\u4f9d\u5957\u4ef6\uff0c\u5982 FooCore\u3001FooParser \u548c FooExtensions\uff0c\u8b93\u5b89\u88dd\u8b8a\u5f97\u66f4\u52a0\u9806\u66a2\u3002</p> <p> Foo \u5feb\u901f\u5165\u9580\u6307\u5357 by @foo-expert \u2013  30 \u5206\u9418 \u2013 \u900f\u904e\u6b64\u9010\u6b65\u6559\u5b78\u5b78\u7fd2\u5982\u4f55\u5145\u5206\u5229\u7528 Foo \u7684\u529f\u80fd\u3002</p> <p>Tip</p> <p>\u5982\u679c\u60a8\u662f Python \u521d\u5b78\u8005\uff0c\u6211\u5011\u5efa\u8b70\u95b1\u8b80 Python \u5957\u4ef6\u7ba1\u7406\u6307\u5357\uff0c\u8a72\u6307\u5357\u6db5\u84cb\u4e86 pip \u548c\u865b\u64ec\u74b0\u5883\u7684\u4f7f\u7528\uff0c\u4e26\u5e6b\u52a9\u60a8\u89e3\u6c7a\u5e38\u898b\u554f\u984c\u3002</p>"},{"location":"template/#with-docker","title":"\u4f7f\u7528 docker","text":"<p>\u5b98\u65b9 Docker \u6620\u50cf\u6a94 \u63d0\u4f9b\u4e86\u7c21\u55ae\u7684\u5b89\u88dd\u65b9\u5f0f\uff0c\u5167\u542b\u6240\u6709\u76f8\u4f9d\u5957\u4ef6\u3002\u8f38\u5165\u4ee5\u4e0b\u547d\u4ee4\u62c9\u53d6\u6620\u50cf\u6a94\uff1a</p> \u6700\u65b0\u7248\u672c1.x \u7248\u672c <pre><code>docker pull foo/foo-toolkit\n</code></pre> <pre><code>docker pull foo/foo-toolkit:1\n</code></pre> <p><code>foo</code> \u547d\u4ee4\u5217\u5de5\u5177\u9810\u8a2d\u70ba <code>start</code> \u6307\u4ee4\u3002\u82e5\u60a8\u5c0d Docker \u4e0d\u719f\u6089\uff0c\u4e0d\u5fc5\u64d4\u5fc3\uff0c\u5f8c\u7e8c\u7ae0\u7bc0\u5c07\u63d0\u4f9b\u8a73\u7d30\u8aaa\u660e\u3002</p> <p>\u4ee5\u4e0b\u5916\u639b\u5df2\u5167\u5efa\u65bc Docker \u6620\u50cf\u6a94\uff1a</p> <ul> <li>foo-optimizer</li> <li>foo-redirects</li> </ul> \u5982\u4f55\u5411 Docker \u6620\u50cf\u6a94\u6dfb\u52a0\u5916\u639b\uff1f <p>Foo \u7684 Docker \u6620\u50cf\u6a94\u50c5\u5305\u542b\u6838\u5fc3\u5916\u639b\uff0c\u4ee5\u4fdd\u6301\u8f03\u5c0f\u7684\u6620\u50cf\u6a94\u5927\u5c0f\u3002\u5982\u679c\u60a8\u9700\u8981\u984d\u5916\u7684\u5916\u639b\uff0c\u53ef\u4ee5\u624b\u52d5\u6dfb\u52a0\uff1a</p> Foo ToolkitFoo Pro <p>\u5275\u5efa <code>Dockerfile</code> \u4f86\u64f4\u5c55\u57fa\u790e\u6620\u50cf\u6a94\uff1a</p> Dockerfile<pre><code>FROM foo/foo-toolkit\nRUN pip install foo-macros-plugin\nRUN pip install foo-lightbox\n</code></pre> <p>\u514b\u9686\u6216\u5206\u652f Foo Pro \u5132\u5b58\u5eab\uff0c\u7136\u5f8c\u5728\u6839\u76ee\u9304\u5275\u5efa <code>user-requirements.txt</code> \u6a94\u6848\uff0c\u4e26\u5c07\u6240\u9700\u5916\u639b\u6dfb\u52a0\u81f3\u5176\u4e2d\uff1a</p> user-requirements.txt<pre><code>foo-macros-plugin\nfoo-lightbox\n</code></pre> <p>\u7136\u5f8c\uff0c\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u69cb\u5efa\u6620\u50cf\u6a94\uff1a</p> <pre><code>docker build -t foo/foo-toolkit .\n</code></pre> <p>\u65b0\u6620\u50cf\u6a94\u5c07\u5305\u542b\u984d\u5916\u7684\u5916\u639b\uff0c\u4e26\u53ef\u8207\u5b98\u65b9\u6620\u50cf\u6a94\u76f8\u540c\u65b9\u5f0f\u4f7f\u7528\u3002</p>"},{"location":"template/#git","title":"\u4f7f\u7528 git","text":"<p>\u60a8\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5f9e GitHub \u5b89\u88dd Foo\uff0c\u65b9\u6cd5\u662f\u5c07\u5132\u5b58\u5eab\u514b\u9686\u5230\u60a8\u7684\u5c08\u6848\u76ee\u9304\u4e2d\uff1a</p> <pre><code>git clone https://github.com/foo/foo-toolkit.git\n</code></pre> <p>\u7136\u5f8c\uff0c\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88dd Foo \u53ca\u5176\u76f8\u4f9d\u5957\u4ef6\uff1a</p> <pre><code>pip install -e foo-toolkit\n</code></pre> <ol> <li> <p>Foo \u6700\u521d\u4f5c\u70ba\u4e00\u500b\u7c21\u55ae\u7684\u4efb\u52d9\u7ba1\u7406\u5de5\u5177\u63a8\u51fa\uff0c\u4f46\u5982\u4eca\u5df2\u767c\u5c55\u70ba\u4e00\u500b\u7d9c\u5408\u89e3\u6c7a\u65b9\u6848\uff0c\u64c1\u6709\u591a\u7a2e\u6574\u5408\u3001\u5916\u639b\u548c\u81ea\u8a02\u9078\u9805\uff0c\u4ee5\u6eff\u8db3\u5404\u7a2e\u7528\u6236\u7684\u9700\u6c42\u3002\u00a0\u21a9</p> </li> <li> <p>\u529f\u80fd\u6539\u9032\u53ef\u80fd\u6703\u4f5c\u70ba\u6b21\u8981\u7248\u672c\u767c\u4f48\uff0c\u4f46\u4e0d\u6703\u8996\u70ba\u65b0\u589e\u529f\u80fd\uff0c\u4ee5\u78ba\u4fdd\u7a69\u5b9a\u6027\u3002\u00a0\u21a9</p> </li> </ol>"},{"location":"template/admonitions/","title":"\u8b66\u544a\u3001\u63d0\u793a\u7b49","text":"<p>\u8b66\u793a\uff08Admonitions\uff09\uff0c\u4e5f\u7a31\u70ba\u300c\u6a19\u8a3b\uff08Call-outs\uff09\u300d\uff0c\u662f\u4e00\u7a2e\u5f88\u597d\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5728\u4e0d\u5927\u5e45\u5f71\u97ff\u6587\u4ef6\u4e3b\u7dda\u7684\u60c5\u6cc1\u4e0b\u52a0\u5165\u88dc\u5145\u5167\u5bb9\u3002</p> <p>\u6b32\u4e86\u89e3\u66f4\u591a\u8a73\u7d30\u8cc7\u8a0a\uff0c\u8acb\u53c3\u95b1\u5b98\u65b9\u6587\u4ef6\uff1aAdmonitions \u8a73\u7d30\u8aaa\u660e</p>"},{"location":"template/admonitions/#_2","title":"\u652f\u63f4\u7684\u985e\u578b","text":"<p>\u4ee5\u4e0b\u662f Material for MkDocs \u63d0\u4f9b\u7684\u985e\u578b\u6a19\u8a3b\uff08Type Qualifiers\uff09\u5217\u8868</p> <p>\u7b46\u8a18</p> <pre><code>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n</code></pre> <p>\u6458\u8981</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>\u8cc7\u8a0a</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>\u63d0\u793a</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>\u6210\u529f</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>\u554f\u984c</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>\u8b66\u544a</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>\u5931\u6557</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>\u5371\u96aa</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>\u932f\u8aa4</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>\u7bc4\u4f8b</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>\u5f15\u7528</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"template/admonitions/#_3","title":"\u53ef\u6298\u758a\u5340\u584a","text":"<p>\u7576 Details \u529f\u80fd\u555f\u7528\u6642\uff0c\u5982\u679c\u8b66\u793a\u5340\u584a\u4ee5 ??? \u800c\u975e !!! \u958b\u982d\uff0c\u5247\u8a72\u8b66\u793a\u6703\u5448\u73fe\u70ba\u53ef\u5c55\u958b\u7684\u5340\u584a\uff0c\u4e26\u5728\u53f3\u5074\u986f\u793a\u4e00\u500b\u5c0f\u578b\u5207\u63db\u6309\u9215</p> \u7b46\u8a18 <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> \u7b46\u8a18 <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"template/code-blocks/","title":"\u7a0b\u5f0f\u78bc\u5340\u584a","text":"<p>\u7a0b\u5f0f\u78bc\u5340\u584a\u548c\u7bc4\u4f8b\u662f\u6280\u8853\u5c08\u6848\u6587\u4ef6\u4e2d\u4e0d\u53ef\u6216\u7f3a\u7684\u4e00\u90e8\u5206\u3002Material for MkDocs \u63d0\u4f9b\u4e86\u591a\u7a2e\u65b9\u5f0f\u4f86\u8a2d\u7f6e\u7a0b\u5f0f\u78bc\u5340\u584a\u7684\u8a9e\u6cd5\u3002</p> <p>\u6b32\u4e86\u89e3\u66f4\u591a\u8a73\u7d30\u8cc7\u8a0a\uff0c\u8acb\u53c3\u95b1\u5b98\u65b9\u6587\u4ef6\uff1aCode Blocks \u8a73\u7d30\u8aaa\u660e</p> bubble_sort.py<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"template/content-tabs/","title":"\u5167\u5bb9\u6a19\u7c64","text":"<p>\u6709\u6642\u5019\uff0c\u5c07\u4e0d\u540c\u7684\u5167\u5bb9\u7d44\u7e54\u5728\u4e0d\u540c\u7684\u6a19\u7c64\u4e0b\u6703\u66f4\u70ba\u65b9\u4fbf\uff0c\u4f8b\u5982\u7576\u63cf\u8ff0\u5982\u4f55\u5f9e\u4e0d\u540c\u8a9e\u8a00\u6216\u74b0\u5883\u8a2a\u554f API \u6642\u3002Material for MkDocs \u63d0\u4f9b\u4e86\u7f8e\u89c0\u4e14\u529f\u80fd\u5f37\u5927\u7684\u6a19\u7c64\uff0c\u53ef\u4ee5\u5c07\u7a0b\u5f0f\u78bc\u5340\u584a\u53ca\u5176\u4ed6\u5167\u5bb9\u9032\u884c\u5206\u7d44\u3002</p> <p>\u6b32\u4e86\u89e3\u66f4\u591a\u8a73\u7d30\u8cc7\u8a0a\uff0c\u8acb\u53c3\u95b1\u5b98\u65b9\u6587\u4ef6\uff1aContent Tabs \u8a73\u7d30\u8aaa\u660e</p> \u6700\u65b0\u7248\u672c1.x \u7248\u672c <pre><code>docker pull foo/foo-toolkit\n</code></pre> <pre><code>docker pull foo/foo-toolkit:1\n</code></pre>"},{"location":"template/data-tables/","title":"\u8cc7\u6599\u8868\u683c","text":"<p>Material for MkDocs \u5b9a\u7fa9\u4e86\u8cc7\u6599\u8868\u683c\u7684\u9810\u8a2d\u6a23\u5f0f\uff0c\u662f\u5728\u5c08\u6848\u6587\u4ef6\u4e2d\u5448\u73fe\u8868\u683c\u8cc7\u6599\u7684\u7d55\u4f73\u65b9\u5f0f\u3002</p> <p>\u6b32\u4e86\u89e3\u66f4\u591a\u8a73\u7d30\u8cc7\u8a0a\uff0c\u8acb\u53c3\u95b1\u5b98\u65b9\u6587\u4ef6\uff1aData Tables \u8a73\u7d30\u8aaa\u660e</p> Method Description <code>GET</code>      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource"},{"location":"template/grids/","title":"\u7db2\u683c\u5e03\u5c40","text":"<p>Material for MkDocs \u4f7f\u5f97\u5c07\u5340\u584a\u6392\u5217\u6210\u7db2\u683c\u8b8a\u5f97\u7c21\u55ae\uff0c\u53ef\u4ee5\u5c07\u5177\u6709\u76f8\u4f3c\u610f\u7fa9\u6216\u76f8\u7b49\u91cd\u8981\u6027\u7684\u5340\u584a\u9032\u884c\u5206\u7d44\u3002\u7db2\u683c\u5e03\u5c40\u975e\u5e38\u9069\u5408\u7528\u4f86\u5efa\u7acb\u7d22\u5f15\u9801\u9762\uff0c\u5c55\u793a\u6587\u4ef6\u4e2d\u67d0\u4e00\u5927\u5340\u6bb5\u7684\u7c21\u8981\u6982\u89bd\u3002</p> <p>\u6b32\u4e86\u89e3\u66f4\u591a\u8a73\u7d30\u8cc7\u8a0a\uff0c\u8acb\u53c3\u95b1\u5b98\u65b9\u6587\u4ef6\uff1aGrids \u8a73\u7d30\u8aaa\u660e</p> <ul> <li> <p> Set up in 5 minutes</p> <p>Install <code>mkdocs-material</code> with <code>pip</code> and get up and running in minutes</p> <p> Getting started</p> </li> <li> <p> It's just Markdown</p> <p>Focus on your content and generate a responsive and searchable static site</p> <p> Reference</p> </li> <li> <p> Made to measure</p> <p>Change the colors, fonts, language, icons, logo and more with a few lines</p> <p> Customization</p> </li> <li> <p> Open Source, MIT</p> <p>Material for MkDocs is licensed under MIT and available on [GitHub]</p> <p> License</p> </li> </ul>"},{"location":"template/images/","title":"\u5716\u7247","text":"<p>\u5118\u7ba1\u5716\u7247\u662f Markdown \u7684\u57fa\u672c\u5143\u7d20\u4e4b\u4e00\uff0c\u4e5f\u662f\u6838\u5fc3\u8a9e\u6cd5\u7684\u4e00\u90e8\u5206\uff0c\u4f46\u6709\u6642\u8655\u7406\u5716\u7247\u53ef\u80fd\u6703\u6bd4\u8f03\u9ebb\u7169\u3002Material for MkDocs \u4f7f\u5f97\u8655\u7406\u5716\u7247\u8b8a\u5f97\u66f4\u52a0\u7c21\u4fbf\uff0c\u63d0\u4f9b\u4e86\u5716\u7247\u5c0d\u9f4a\u548c\u5716\u7247\u6a19\u984c\u7684\u6a23\u5f0f\u9078\u9805\u3002</p> <p>\u6b32\u4e86\u89e3\u66f4\u591a\u8a73\u7d30\u8cc7\u8a0a\uff0c\u8acb\u53c3\u95b1\u5b98\u65b9\u6587\u4ef6\uff1aImages \u8a73\u7d30\u8aaa\u660e</p> Image caption"},{"location":"template/lists/","title":"\u5217\u8868","text":"<p>Material for MkDocs \u652f\u63f4\u591a\u7a2e\u5217\u8868\u985e\u578b\uff0c\u4ee5\u6eff\u8db3\u4e0d\u540c\u7684\u4f7f\u7528\u9700\u6c42\uff0c\u5305\u62ec\u7121\u5e8f\u5217\u8868\u548c\u6709\u5e8f\u5217\u8868\uff0c\u9019\u4e9b\u90fd\u53ef\u4ee5\u901a\u904e\u6a19\u6e96 Markdown \u8a9e\u6cd5\u4f86\u5be6\u73fe\u3002\u6b64\u5916\uff0c\u9084\u652f\u63f4\u5b9a\u7fa9\u5217\u8868\u548c\u4efb\u52d9\u5217\u8868\uff0c\u9019\u4e9b\u529f\u80fd\u5247\u662f\u901a\u904e\u64f4\u5c55\u4f86\u63d0\u4f9b\u7684\u3002</p> <p>\u6b32\u4e86\u89e3\u66f4\u591a\u8a73\u7d30\u8cc7\u8a0a\uff0c\u8acb\u53c3\u95b1\u5b98\u65b9\u6587\u4ef6\uff1aLists \u8a73\u7d30\u8aaa\u660e</p> <ul> <li> <p>Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur   accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh   lacinia sed. Aenean in finibus diam.</p> <ul> <li>Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis.</li> <li>Nam vulputate tincidunt fringilla.</li> <li>Nullam dignissim ultrices urna non auctor.</li> </ul> </li> </ul>"},{"location":"template/tooltips/","title":"\u5de5\u5177\u63d0\u793a","text":"<p>\u6280\u8853\u6587\u6a94\u4e2d\u7d93\u5e38\u6703\u4f7f\u7528\u8a31\u591a\u7e2e\u5beb\uff0c\u9019\u4e9b\u7e2e\u5beb\u53ef\u80fd\u9700\u8981\u984d\u5916\u7684\u89e3\u91cb\uff0c\u7279\u5225\u662f\u5c0d\u65bc\u65b0\u4f7f\u7528\u8005\u4f86\u8aaa\u3002\u70ba\u4e86\u89e3\u6c7a\u9019\u4e9b\u554f\u984c\uff0cMaterial for MkDocs \u4f7f\u7528 Markdown \u64f4\u5c55\u7684\u7d44\u5408\u4f86\u5be6\u73fe\u5168\u7ad9\u7bc4\u570d\u7684\u8853\u8a9e\u8868\u3002</p> <p>\u6b32\u4e86\u89e3\u66f4\u591a\u8a73\u7d30\u8cc7\u8a0a\uff0c\u8acb\u53c3\u95b1\u5b98\u65b9\u6587\u4ef6\uff1aTooltips \u8a73\u7d30\u8aaa\u660e</p> <p></p> <p>The HTML specification is maintained by the W3C.</p>"}]}